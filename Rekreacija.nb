(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1133008,      22944]
NotebookOptionsPosition[   1126958,      22845]
NotebookOutlinePosition[   1127447,      22863]
CellTagsIndexPosition[   1127404,      22860]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Statistika Rekreacije", "Title",
 CellChangeTimes->{{3.839171116463622*^9, 3.8391711396150627`*^9}, {
  3.839616307418856*^9, 3.8396163176056747`*^9}, {3.8396183857229953`*^9, 
  3.839618397974217*^9}, {3.9268317370390873`*^9, 3.9268317423566074`*^9}, {
  3.926851958957836*^9, 
  3.9268519729071198`*^9}},ExpressionUUID->"03e17c88-5d0e-4e4f-8d99-\
3d8b90300b28"],

Cell[TextData[{
 StyleBox["Analiza",
  IgnoreSpellCheck->True],
 " spremembe in napredovanj nekaterih (rednih) igralcev na rekreaciji od \
februarja leta 2024.\[LineSeparator]\[CapitalSHacek]port: Dvoranski nogomet - \
futsal"
}], "Subtitle",
 CellChangeTimes->{{3.839438144493065*^9, 3.8394381864179354`*^9}, {
  3.839572396710617*^9, 3.839572408114238*^9}, {3.9268317507987785`*^9, 
  3.9268317529386406`*^9}, {3.926851975904796*^9, 3.9268520227624207`*^9}, {
  3.926852532784206*^9, 3.926852566004347*^9}, {3.9268606136211777`*^9, 
  3.9268606251085186`*^9}, {3.9270152669855614`*^9, 3.927015268131811*^9}, {
  3.9270282273317013`*^9, 
  3.9270282671637173`*^9}},ExpressionUUID->"0f882bd2-71be-4751-9b8d-\
824cf8a8152f"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov", "Section",
 CellChangeTimes->{{3.8391738609950266`*^9, 3.839173868591038*^9}, {
   3.8392546943898916`*^9, 3.839254696308697*^9}, 
   3.839438773558751*^9},ExpressionUUID->"9fdecc2b-ca90-4f46-87fd-\
bfc948c3df99"],

Cell[TextData[{
 StyleBox["Zadnjih nekaj let za vsakega posameznika, ki pride, \
bele\[ZHacek]imo naslednje podatke: prisotnost; zmaga, poraz ali izena\
\[CHacek]en izid tekme; \[SHacek]tevilo danih golov in \[SHacek]tevilo podaj \
iz katere se je razvil gol - asistenc. Podatki so na voljo v ",
  FontSize->16],
 StyleBox[ButtonBox["Github repositoriju",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/XeroxAndarian/RSTRating/tree/main"], None},
  ButtonNote->"https://github.com/XeroxAndarian/RSTRating/tree/main"],
  FontSize->16],
 StyleBox[", vendar sem jih za potrebe Mathematice oblikovno malenkost \
spremenil. Vsi podatki so shranjeni v obliki CSV datoteke, kjer je \
lo\[CHacek]ilni znak podpi\[CHacek]je  (\[OpenCurlyQuote] ; \
\[CloseCurlyQuote]). Razlog za to je, da sem podatke v osnovi prikazoval s \
pomo\[CHacek]jo google sheet tabele, ki pa ima te\[ZHacek]ave z avtomati\
\[CHacek]no zaznavo pike kot decimalne vejice. Posledi\[CHacek]no je bilo \
treba vse decimalne pike zamenjati za vejice, vse vejice, ki lo\[CHacek]ijo \
posami\[CHacek]ne stolpce pa s podpi\[CHacek]ji. Za potrebe Mathematice in la\
\[ZHacek]jega odpiranja podatkov, sem vse spremenil nazaj.\[LineSeparator]\
\[LineSeparator]Obstaja sicer tudi mo\[ZHacek]nost nalaganja podatkov v \
Wolframovo bazo a se mi je zdelo, da ker gre za povsem osebne raziskave, ni \
potrebe po odlaganju vseh datotek v njihovo bazo. ",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.839608960257378*^9, 3.839608968068003*^9}, {
   3.9268520323113747`*^9, 3.9268523981414433`*^9}, {3.926852435188284*^9, 
   3.926852519239897*^9}, {3.926852576476026*^9, 3.926852684142921*^9}, 
   3.9270284462062263`*^9},ExpressionUUID->"1440094b-57a2-4476-92d6-\
f3e2aac876ae"],

Cell["\<\
Ker nas bo zanimala samo trenutna \[OpenCurlyDoubleQuote]sezona\
\[CloseCurlyDoubleQuote], tj. prvi februar do julij 2024, bomo \
upo\[SHacek]tevali igralce, ki so bili v tem \[CHacek]asu vsaj trikrat \
prisotni, saj sicer niti niso konkuren\[CHacek]ni za zmago, niti niso \
zanimivi za analizirat..\
\>", "Text",
 CellChangeTimes->{{3.926852723316129*^9, 3.9268527871481667`*^9}, {
  3.9268528407565346`*^9, 3.9268528618667507`*^9}, {3.926860634647348*^9, 
  3.926860675200882*^9}, {3.9270284535193634`*^9, 
  3.927028476608488*^9}},ExpressionUUID->"d41cb6dc-923b-9948-91b1-\
dcb712c45dd4"],

Cell[TextData[StyleBox["Shranimo podatke: Uploadn - igralec z osebno \
zaporedno \[SHacek]tevilko n. Ker ima vsak igralec vodeno statistiko lo\
\[CHacek]eno, moramo uvoziti vsakega posebej.",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8392609619887776`*^9, 3.839260978914908*^9}, {
  3.926852812595136*^9, 3.926852831696495*^9}, {3.926852882261921*^9, 
  3.926852888695207*^9}, {3.9270284893255157`*^9, 
  3.9270285283184433`*^9}},ExpressionUUID->"a9d740fb-d809-46cf-8861-\
a1403899101f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Upload0", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_0.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload1", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_1.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload3", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_3.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload4", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_4.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload7", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_7.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload8", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_8.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload10", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_10.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload11", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_11.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload12", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_12.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload13", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_13.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload14", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_14.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload16", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_16.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload28", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_28.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Upload29", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_29.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Upload33", " ", "=", " ", 
    RowBox[{
    "SemanticImport", "[", 
     "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Player Weekly Reports\\\\Weekly_id_33.csv\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UploadSF", " ", "=", " ", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\Uporabnik\\\\Documents\\\\FMF\\\\ROM\\\\Data\\\\\
Nogomet RST-SeasonFianlHistory.csv\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.92685287650206*^9, 3.926852876536068*^9}, {
   3.926852941578726*^9, 3.926853172955548*^9}, {3.926853235743763*^9, 
   3.926853288689823*^9}, {3.926860311413252*^9, 3.9268603294745617`*^9}, {
   3.926860405632578*^9, 3.926860415689441*^9}, 3.926860451003498*^9, {
   3.926863266719393*^9, 3.9268632672375607`*^9}, {3.9269199605597553`*^9, 
   3.9269199825542583`*^9}, {3.9270267735841694`*^9, 3.9270267889236574`*^9}},
 
 CellLabel->"In[3]:=",ExpressionUUID->"ba4e54d3-cb8e-437f-94a5-e0e221c4e59c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Upload0", ",", " ", "Upload1", ",", "None", ",", " ", "Upload3", ",", 
     " ", "Upload4", ",", "None", ",", " ", "None", ",", " ", "Upload7", ",", 
     " ", "Upload8", ",", "None", ",", "  ", "Upload10", ",", " ", "Upload11",
      ",", " ", "Upload12", ",", " ", "Upload13", ",", " ", "Upload14", ",", 
     "None", ",", " ", "Upload16", ",", "None", ",", "None", ",", "None", ",",
      "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None",
      ",", "None", ",", "None", ",", "Upload28", ",", " ", "Upload29", ",", 
     "None", ",", "None", ",", "None", ",", " ", "Upload33"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Palette", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Red", ",", " ", "Green", ",", "None", ",", " ", "Blue", ",", " ", 
     "Black", ",", "None", ",", "None", ",", " ", "Gray", ",", " ", "Cyan", 
     ",", "None", ",", " ", "Magenta", ",", " ", "Yellow", ",", " ", "Brown", 
     ",", " ", "Orange", ",", " ", "Pink", ",", " ", "None", ",", "Purple", 
     ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", 
     "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", 
     ",", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0.3", ",", "0", ",", "0"}], "]"}], ",", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0.3", ",", "0.3", ",", "0.5"}], "]"}], ",", "None", ",", 
     "None", ",", "None", ",", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0.6", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.92692071785585*^9, 3.9269207260182667`*^9}, 
   3.926950931939394*^9, {3.927017178000086*^9, 3.9270171927348213`*^9}, {
   3.927017254756508*^9, 3.927017327671255*^9}, {3.927022673015253*^9, 
   3.9270227170306854`*^9}, {3.927023709285429*^9, 3.927023770471815*^9}, {
   3.927026768228304*^9, 3.9270267694161396`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"bd5bba7b-aa94-4245-8e9b-dbda5add760f"],

Cell[TextData[StyleBox["\[CapitalCHacek]isto vsi podatki nas ne znaimajo, \
nekaj pa jih tudi no\[CHacek]em pokazati, ker \[ZHacek]elim ohraniti \
anonimnost udele\[ZHacek]encev. ",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.83933990981016*^9, 3.8393399282371864`*^9}, {
   3.8393400643533773`*^9, 3.839340070009385*^9}, {3.839340199518568*^9, 
   3.8393402576346493`*^9}, {3.839401078097732*^9, 3.839401109317273*^9}, {
   3.8394370781066604`*^9, 3.839437081725867*^9}, {3.839589987721677*^9, 
   3.839589992822885*^9}, {3.839609175155429*^9, 3.839609177763633*^9}, {
   3.926853185820667*^9, 3.926853214349394*^9}, {3.926853316612334*^9, 
   3.9268533304321327`*^9}, {3.926853406334526*^9, 3.926853456955929*^9}, {
   3.92685370474465*^9, 3.9268537428740425`*^9}, {3.926855528985464*^9, 
   3.9268555470125465`*^9}, {3.926855606897445*^9, 3.9268556688527393`*^9}, 
   3.926855732338314*^9},ExpressionUUID->"749f6452-3d2a-4951-bec9-\
021abb519622"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PX", " ", "=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Delete", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
        RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
        RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
        RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
        RowBox[{"{", "\"\<season title\>\"", "}"}], ",", " ", 
        RowBox[{"{", "\"\<season best teammate\>\"", "}"}]}], "}"}], "]"}], 
     "]"}], "@", " ", "Upload8"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9268534599315987`*^9, 3.926853461401934*^9}, {
   3.9268535584275856`*^9, 3.9268535829435673`*^9}, {3.926853748857456*^9, 
   3.926853799055614*^9}, {3.92685389617279*^9, 3.926853901639591*^9}, {
   3.926854015440775*^9, 3.926854081076967*^9}, {3.926854139706047*^9, 
   3.926854154239723*^9}, {3.926854252996769*^9, 3.926854312196314*^9}, {
   3.926854487016735*^9, 3.9268544975359764`*^9}, 3.926854573662781*^9, {
   3.926855181230079*^9, 3.92685518310661*^9}, {3.92685525223916*^9, 
   3.926855307409485*^9}, {3.926855346068182*^9, 3.926855389217823*^9}, {
   3.926855474208063*^9, 3.926855502333431*^9}, {3.926855724080713*^9, 
   3.926855734753504*^9}, {3.926861153517357*^9, 3.92686115373242*^9}, {
   3.927028596034479*^9, 3.9270286047639256`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"4f21f2aa-b484-784e-8ba6-d7c844541b7d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "date" -> DateObject[{2022, 9, 1}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 35, "matches played" -> 49, "goals" -> 
        35, "assists" -> 23, "auto goals" -> 0, "winrate" -> 0., 
        "goal average" -> 0., "assist average" -> 0., "auto goal average" -> 
        0., "wins" -> 24, "losses" -> 13, "ties" -> 12, "MMR" -> 
        1135.7075213265562`, "winstreak" -> 0, "losing streak" -> 0, 
        "last match played" -> "0", "tournaments won" -> 2, "weeks on top" -> 
        5, "highest SR" -> 0., "highest MMR" -> 0., "rank goals" -> 0, 
        "rank assists" -> 0, "rank auto goals" -> 0, "rank winrate" -> 0, 
        "rank wins" -> 0, "rank losses" -> 0, "rank ties" -> 0, "rank MMR" -> 
        0, "rank tournaments won" -> 0, "rank attendance" -> 0, 
        "rank matches played" -> 0, "rank goal average" -> 0, 
        "rank assist average" -> 0, "rank auto goal average" -> 0, "debt" -> 
        0, "SR" -> 0., "rank SR" -> 0, "season rank" -> "Unranked", 
        "season goals" -> 0, "season rank goals" -> 0, "season assists" -> 0, 
        "season rank assists" -> 0, "season auto goals" -> 0, 
        "season rank auto goals" -> 0, "season attendance" -> 0, 
        "season rank attendance" -> 0, "season wins" -> 0, "season rank wins" -> 
        0, "season losses" -> 0, "season rank losses" -> 0, "season ties" -> 
        0, "season rank ties" -> 0, "season winrate" -> 0., 
        "season rank winrate" -> 0, "season goal average" -> 0., 
        "season rank goal average" -> 0, "season assist average" -> 0., 
        "season rank assist average" -> 0, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 0, "season matches played" -> 0, 
        "season rank matches played" -> 0, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 0, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 0, "season highest SR" -> 0., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 0, 
        "season weeks on top" -> 0, "season rank weeks on top" -> 0, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> "",
         "season change" -> Missing["Empty"]|>, <|
       "date" -> DateObject[{2022, 9, 8}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 36, "matches played" -> 50, "goals" -> 
        38, "assists" -> 23, "auto goals" -> 0, "winrate" -> 0.48, 
        "goal average" -> 0.76, "assist average" -> 0.46, "auto goal average" -> 
        0., "wins" -> 24, "losses" -> 14, "ties" -> 12, "MMR" -> 
        1137.2853339302783`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2022-09-01", "tournaments won" -> 2, 
        "weeks on top" -> 5, "highest SR" -> 1019.257960083013, "highest MMR" -> 
        1137.2853339302783`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 3, "rank winrate" -> 1, "rank wins" -> 1, 
        "rank losses" -> 6, "rank ties" -> 1, "rank MMR" -> 1, 
        "rank tournaments won" -> 2, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 2, "rank auto goal average" -> 4, "debt" -> 
        1, "SR" -> 1019.257960083013, "rank SR" -> 5, "season rank" -> 
        "Silver", "season goals" -> 3, "season rank goals" -> 2, 
        "season assists" -> 0, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 1, "season rank attendance" -> 1, 
        "season wins" -> 0, "season rank wins" -> 2, "season losses" -> 1, 
        "season rank losses" -> 1, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0., "season rank winrate" -> 2, 
        "season goal average" -> 3., "season rank goal average" -> 2, 
        "season assist average" -> 0., "season rank assist average" -> 3, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 1, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1019.257960083013, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Nejc.Gal.Matev\[ZHacek]", 
        "season change" -> Missing["Unrecognized", "N"]|>, <|
       "date" -> DateObject[{2022, 9, 15}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 37, "matches played" -> 51, "goals" -> 
        41, "assists" -> 23, "auto goals" -> 0, "winrate" -> 
        0.49019607843137253`, "goal average" -> 0.803921568627451, 
        "assist average" -> 0.45098039215686275`, "auto goal average" -> 0., 
        "wins" -> 25, "losses" -> 14, "ties" -> 12, "MMR" -> 
        1146.2717566757021`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2022-09-08", "tournaments won" -> 2, 
        "weeks on top" -> 5, "highest SR" -> 1066.1990142429488`, 
        "highest MMR" -> 1146.2717566757021`, "rank goals" -> 1, 
        "rank assists" -> 2, "rank auto goals" -> 3, "rank winrate" -> 1, 
        "rank wins" -> 1, "rank losses" -> 6, "rank ties" -> 1, "rank MMR" -> 
        1, "rank tournaments won" -> 2, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 4, "debt" -> 
        2, "SR" -> 1066.1990142429488`, "rank SR" -> 4, "season rank" -> 
        "Silver", "season goals" -> 6, "season rank goals" -> 1, 
        "season assists" -> 0, "season rank assists" -> 5, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 2, "season rank attendance" -> 1, 
        "season wins" -> 1, "season rank wins" -> 1, "season losses" -> 1, 
        "season rank losses" -> 1, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 2, 
        "season goal average" -> 3., "season rank goal average" -> 2, 
        "season assist average" -> 0., "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 2, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1066.1990142429488`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Nejc.Gal", "season change" -> 1|>, <|
       "date" -> DateObject[{2022, 9, 22}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 38, "matches played" -> 52, "goals" -> 
        41, "assists" -> 24, "auto goals" -> 0, "winrate" -> 0.5, 
        "goal average" -> 0.7884615384615384, "assist average" -> 
        0.46153846153846156`, "auto goal average" -> 0., "wins" -> 26, 
        "losses" -> 14, "ties" -> 12, "MMR" -> 1148.5660783574072`, 
        "winstreak" -> 2, "losing streak" -> 0, "last match played" -> 
        "2022-09-15", "tournaments won" -> 2, "weeks on top" -> 5, 
        "highest SR" -> 1094.7276290252432`, "highest MMR" -> 
        1148.5660783574072`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 3, "rank winrate" -> 1, "rank wins" -> 1, 
        "rank losses" -> 6, "rank ties" -> 1, "rank MMR" -> 1, 
        "rank tournaments won" -> 2, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, "debt" -> 
        3, "SR" -> 1094.7276290252432`, "rank SR" -> 1, "season rank" -> 
        "Silver", "season goals" -> 6, "season rank goals" -> 1, 
        "season assists" -> 1, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 3, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 1, "season losses" -> 1, 
        "season rank losses" -> 2, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 2,
         "season goal average" -> 2., "season rank goal average" -> 1, 
        "season assist average" -> 0.3333333333333333, 
        "season rank assist average" -> 5, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 2, "season matches played" -> 3, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 
        1094.7276290252432`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        1, "season worst teammate" -> "Nejc.Gal", "season change" -> 3|>, <|
       "date" -> DateObject[{2022, 9, 29}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 39, "matches played" -> 53, "goals" -> 
        46, "assists" -> 27, "auto goals" -> 0, "winrate" -> 
        0.49056603773584906`, "goal average" -> 0.8679245283018868, 
        "assist average" -> 0.5094339622641509, "auto goal average" -> 0., 
        "wins" -> 26, "losses" -> 15, "ties" -> 12, "MMR" -> 
        1156.680338305273, "winstreak" -> 3, "losing streak" -> 0, 
        "last match played" -> "2022-09-22", "tournaments won" -> 2, 
        "weeks on top" -> 5, "highest SR" -> 1221.1913294944445`, 
        "highest MMR" -> 1156.680338305273, "rank goals" -> 1, "rank assists" -> 
        1, "rank auto goals" -> 3, "rank winrate" -> 1, "rank wins" -> 1, 
        "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 1, 
        "rank tournaments won" -> 2, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, "debt" -> 
        4, "SR" -> 1221.1913294944445`, "rank SR" -> 1, "season rank" -> 
        "Platinum", "season goals" -> 11, "season rank goals" -> 1, 
        "season assists" -> 4, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 4, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 2, "season losses" -> 2, 
        "season rank losses" -> 2, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 3, 
        "season goal average" -> 2.75, "season rank goal average" -> 1, 
        "season assist average" -> 1., "season rank assist average" -> 3, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 4, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1221.1913294944445`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        2, "season worst teammate" -> "Nejc.Gal", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 10, 6}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 40, "matches played" -> 56, "goals" -> 
        46, "assists" -> 27, "auto goals" -> 0, "winrate" -> 
        0.5178571428571429, "goal average" -> 0.8214285714285714, 
        "assist average" -> 0.48214285714285715`, "auto goal average" -> 0., 
        "wins" -> 29, "losses" -> 15, "ties" -> 12, "MMR" -> 1158.7564132975, 
        "winstreak" -> 6, "losing streak" -> 0, "last match played" -> 
        "2022-09-29", "tournaments won" -> 3, "weeks on top" -> 5, 
        "highest SR" -> 1262.6293400398213`, "highest MMR" -> 1158.7564132975,
         "rank goals" -> 1, "rank assists" -> 1, "rank auto goals" -> 3, 
        "rank winrate" -> 2, "rank wins" -> 1, "rank losses" -> 7, 
        "rank ties" -> 1, "rank MMR" -> 2, "rank tournaments won" -> 1, 
        "rank attendance" -> 1, "rank matches played" -> 1, 
        "rank goal average" -> 1, "rank assist average" -> 2, 
        "rank auto goal average" -> 6, "debt" -> 5, "SR" -> 
        1262.6293400398213`, "rank SR" -> 1, "season rank" -> "Platinum", 
        "season goals" -> 11, "season rank goals" -> 1, "season assists" -> 4,
         "season rank assists" -> 2, "season auto goals" -> 0, 
        "season rank auto goals" -> 2, "season attendance" -> 5, 
        "season rank attendance" -> 1, "season wins" -> 5, "season rank wins" -> 
        1, "season losses" -> 2, "season rank losses" -> 4, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0.7142857142857143, 
        "season rank winrate" -> 3, "season goal average" -> 
        1.5714285714285714`, "season rank goal average" -> 2, 
        "season assist average" -> 0.5714285714285714, 
        "season rank assist average" -> 5, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 2, "season matches played" -> 7, 
        "season rank matches played" -> 1, "season MVP goal" -> 1, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 1, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1262.6293400398213`, "season tournaments won" -> 1, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 3, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        3, "season worst teammate" -> "Nejc.Gal", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 10, 13}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 41, "matches played" -> 57, "goals" -> 
        47, "assists" -> 27, "auto goals" -> 0, "winrate" -> 
        0.5263157894736842, "goal average" -> 0.8245614035087719, 
        "assist average" -> 0.47368421052631576`, "auto goal average" -> 0., 
        "wins" -> 30, "losses" -> 15, "ties" -> 12, "MMR" -> 
        1160.9236427624558`, "winstreak" -> 7, "losing streak" -> 0, 
        "last match played" -> "2022-10-06", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1313.0758082972113`, 
        "highest MMR" -> 1160.9236427624558`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 2, 
        "rank wins" -> 1, "rank losses" -> 8, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, "debt" -> 
        6, "SR" -> 1313.0758082972113`, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 12, "season rank goals" -> 1, 
        "season assists" -> 4, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 6, "season rank attendance" -> 1, 
        "season wins" -> 6, "season rank wins" -> 1, "season losses" -> 2, 
        "season rank losses" -> 4, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.75, "season rank winrate" -> 3, 
        "season goal average" -> 1.5, "season rank goal average" -> 2, 
        "season assist average" -> 0.5, "season rank assist average" -> 5, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 8, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1313.0758082972113`, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 4, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        4, "season worst teammate" -> "Nejc.Gal", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 10, 20}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 42, "matches played" -> 58, "goals" -> 
        48, "assists" -> 29, "auto goals" -> 0, "winrate" -> 
        0.5172413793103449, "goal average" -> 0.8275862068965517, 
        "assist average" -> 0.5, "auto goal average" -> 0., "wins" -> 30, 
        "losses" -> 16, "ties" -> 12, "MMR" -> 1159.9582597333329`, 
        "winstreak" -> 8, "losing streak" -> 0, "last match played" -> 
        "2022-10-13", "tournaments won" -> 3, "weeks on top" -> 5, 
        "highest SR" -> 1376.4750442768636`, "highest MMR" -> 
        1160.9236427624558`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 3, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 7, "rank ties" -> 1, "rank MMR" -> 2, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, 
        "debt" -> -3, "SR" -> 1376.4750442768636`, "rank SR" -> 1, 
        "season rank" -> "Saphire", "season goals" -> 13, "season rank goals" -> 
        1, "season assists" -> 6, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 7, "season rank attendance" -> 1, 
        "season wins" -> 6, "season rank wins" -> 1, "season losses" -> 3, 
        "season rank losses" -> 3, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 4,
         "season goal average" -> 1.4444444444444444`, 
        "season rank goal average" -> 2, "season assist average" -> 
        0.6666666666666666, "season rank assist average" -> 3, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 9, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1376.4750442768636`, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 5, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        5, "season worst teammate" -> "Nejc", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 10, 27}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 43, "matches played" -> 59, "goals" -> 
        54, "assists" -> 32, "auto goals" -> 0, "winrate" -> 
        0.5254237288135594, "goal average" -> 0.9152542372881356, 
        "assist average" -> 0.5423728813559322, "auto goal average" -> 0., 
        "wins" -> 31, "losses" -> 16, "ties" -> 12, "MMR" -> 
        1169.3649204970998`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2022-10-20", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1445.4511829789615`, 
        "highest MMR" -> 1169.3649204970998`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 2, 
        "rank wins" -> 1, "rank losses" -> 7, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 7, 
        "debt" -> -2, "SR" -> 1445.4511829789615`, "rank SR" -> 1, 
        "season rank" -> "Ruby", "season goals" -> 19, "season rank goals" -> 
        1, "season assists" -> 9, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 8, "season rank attendance" -> 1, 
        "season wins" -> 7, "season rank wins" -> 1, "season losses" -> 3, 
        "season rank losses" -> 4, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.7, "season rank winrate" -> 3, 
        "season goal average" -> 1.9, "season rank goal average" -> 2, 
        "season assist average" -> 0.9, "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 10, "season rank matches played" -> 1, 
        "season MVP goal" -> 2, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1445.4511829789615`, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 6, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        6, "season worst teammate" -> "Nejc", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 11, 10}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 44, "matches played" -> 60, "goals" -> 
        55, "assists" -> 33, "auto goals" -> 0, "winrate" -> 
        0.5333333333333333, "goal average" -> 0.9166666666666666, 
        "assist average" -> 0.55, "auto goal average" -> 0., "wins" -> 32, 
        "losses" -> 16, "ties" -> 12, "MMR" -> 1170.7781892913954`, 
        "winstreak" -> 1, "losing streak" -> 0, "last match played" -> 
        "2022-10-27", "tournaments won" -> 3, "weeks on top" -> 5, 
        "highest SR" -> 1462.944416966172, "highest MMR" -> 
        1170.7781892913954`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 3, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 2, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 7, 
        "debt" -> -1, "SR" -> 1462.944416966172, "rank SR" -> 1, 
        "season rank" -> "Ruby", "season goals" -> 20, "season rank goals" -> 
        1, "season assists" -> 10, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 9, "season rank attendance" -> 1, 
        "season wins" -> 8, "season rank wins" -> 1, "season losses" -> 3, 
        "season rank losses" -> 4, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.7272727272727273, "season rank winrate" -> 3,
         "season goal average" -> 1.8181818181818181`, 
        "season rank goal average" -> 2, "season assist average" -> 
        0.9090909090909091, "season rank assist average" -> 3, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        4, "season matches played" -> 11, "season rank matches played" -> 1, 
        "season MVP goal" -> 2, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1462.944416966172, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 7, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        7, "season worst teammate" -> "Nejc.Gal.Jan", "season change" -> 
        0|>, <|"date" -> DateObject[{2022, 11, 17}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 45, "matches played" -> 61, "goals" -> 
        56, "assists" -> 34, "auto goals" -> 0, "winrate" -> 
        0.5245901639344263, "goal average" -> 0.9180327868852459, 
        "assist average" -> 0.5573770491803278, "auto goal average" -> 0., 
        "wins" -> 32, "losses" -> 17, "ties" -> 12, "MMR" -> 
        1169.7653761998527`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2022-11-10", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1462.944416966172, "highest MMR" -> 
        1170.7781892913954`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 3, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 2, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 7, "debt" -> 
        0, "SR" -> 1459.5529871163958`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 21, "season rank goals" -> 1, 
        "season assists" -> 11, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 10, "season rank attendance" -> 1, 
        "season wins" -> 8, "season rank wins" -> 1, "season losses" -> 4, 
        "season rank losses" -> 3, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 4,
         "season goal average" -> 1.75, "season rank goal average" -> 2, 
        "season assist average" -> 0.9166666666666666, 
        "season rank assist average" -> 3, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 4, "season matches played" -> 12, 
        "season rank matches played" -> 1, "season MVP goal" -> 2, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1462.944416966172, "season tournaments won" -> 1, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 8, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        8, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 11, 24}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 46, "matches played" -> 62, "goals" -> 
        57, "assists" -> 34, "auto goals" -> 0, "winrate" -> 
        0.5161290322580645, "goal average" -> 0.9193548387096774, 
        "assist average" -> 0.5483870967741935, "auto goal average" -> 0., 
        "wins" -> 32, "losses" -> 18, "ties" -> 12, "MMR" -> 
        1168.218608022544, "winstreak" -> 0, "losing streak" -> 2, 
        "last match played" -> "2022-11-17", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1462.944416966172, "highest MMR" -> 
        1170.7781892913954`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 3, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 2, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 7, "debt" -> 
        1, "SR" -> 1444.158335055995, "rank SR" -> 1, "season rank" -> "Ruby",
         "season goals" -> 22, "season rank goals" -> 1, "season assists" -> 
        11, "season rank assists" -> 1, "season auto goals" -> 0, 
        "season rank auto goals" -> 2, "season attendance" -> 11, 
        "season rank attendance" -> 1, "season wins" -> 8, "season rank wins" -> 
        1, "season losses" -> 5, "season rank losses" -> 2, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0.6153846153846154, 
        "season rank winrate" -> 4, "season goal average" -> 
        1.6923076923076923`, "season rank goal average" -> 3, 
        "season assist average" -> 0.8461538461538461, 
        "season rank assist average" -> 3, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 4, "season matches played" -> 13, 
        "season rank matches played" -> 1, "season MVP goal" -> 2, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1462.944416966172, "season tournaments won" -> 1, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 9, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        9, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 12, 1}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 47, "matches played" -> 63, "goals" -> 
        58, "assists" -> 34, "auto goals" -> 1, "winrate" -> 
        0.5079365079365079, "goal average" -> 0.9206349206349206, 
        "assist average" -> 0.5396825396825397, "auto goal average" -> 
        0.015873015873015872`, "wins" -> 32, "losses" -> 18, "ties" -> 13, 
        "MMR" -> 1165.9872839415975`, "winstreak" -> 0, "losing streak" -> 0, 
        "last match played" -> "2022-11-24", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1462.944416966172, "highest MMR" -> 
        1170.7781892913954`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 2, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 8, "debt" -> 
        2, "SR" -> 1452.158335055995, "rank SR" -> 1, "season rank" -> "Ruby",
         "season goals" -> 23, "season rank goals" -> 1, "season assists" -> 
        11, "season rank assists" -> 1, "season auto goals" -> 1, 
        "season rank auto goals" -> 1, "season attendance" -> 12, 
        "season rank attendance" -> 1, "season wins" -> 8, "season rank wins" -> 
        1, "season losses" -> 5, "season rank losses" -> 2, "season ties" -> 
        1, "season rank ties" -> 1, "season winrate" -> 0.5714285714285714, 
        "season rank winrate" -> 4, "season goal average" -> 
        1.6428571428571428`, "season rank goal average" -> 3, 
        "season assist average" -> 0.7857142857142857, 
        "season rank assist average" -> 5, "season auto goal average" -> 
        0.07142857142857142, "season rank auto goal average" -> 4, 
        "season matches played" -> 14, "season rank matches played" -> 1, 
        "season MVP goal" -> 2, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1462.944416966172, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 10, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        10, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 12, 8}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 48, "matches played" -> 64, "goals" -> 
        59, "assists" -> 34, "auto goals" -> 1, "winrate" -> 0.5, 
        "goal average" -> 0.921875, "assist average" -> 0.53125, 
        "auto goal average" -> 0.015625, "wins" -> 32, "losses" -> 18, "ties" -> 
        14, "MMR" -> 1164.0877583536712`, "winstreak" -> 0, "losing streak" -> 
        0, "last match played" -> "2022-12-01", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1462.944416966172, "highest MMR" -> 
        1170.7781892913954`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 2, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 8, "debt" -> 
        3, "SR" -> 1462.158335055995, "rank SR" -> 1, "season rank" -> "Ruby",
         "season goals" -> 24, "season rank goals" -> 1, "season assists" -> 
        11, "season rank assists" -> 2, "season auto goals" -> 1, 
        "season rank auto goals" -> 1, "season attendance" -> 13, 
        "season rank attendance" -> 1, "season wins" -> 8, "season rank wins" -> 
        1, "season losses" -> 5, "season rank losses" -> 2, "season ties" -> 
        2, "season rank ties" -> 1, "season winrate" -> 0.5333333333333333, 
        "season rank winrate" -> 4, "season goal average" -> 1.6, 
        "season rank goal average" -> 3, "season assist average" -> 
        0.7333333333333333, "season rank assist average" -> 5, 
        "season auto goal average" -> 0.06666666666666667, 
        "season rank auto goal average" -> 5, "season matches played" -> 15, 
        "season rank matches played" -> 1, "season MVP goal" -> 2, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1462.944416966172, "season tournaments won" -> 1, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 11, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        11, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 12, 15}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 49, "matches played" -> 65, "goals" -> 
        60, "assists" -> 34, "auto goals" -> 1, "winrate" -> 
        0.49230769230769234`, "goal average" -> 0.9230769230769231, 
        "assist average" -> 0.5230769230769231, "auto goal average" -> 
        0.015384615384615385`, "wins" -> 32, "losses" -> 19, "ties" -> 14, 
        "MMR" -> 1162.0577601908744`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2022-12-08", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1462.944416966172, "highest MMR" -> 
        1170.7781892913954`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 2, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 2, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 11, "debt" -> 
        4, "SR" -> 1450.9571659351113`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 25, "season rank goals" -> 1, 
        "season assists" -> 11, "season rank assists" -> 2, 
        "season auto goals" -> 1, "season rank auto goals" -> 1, 
        "season attendance" -> 14, "season rank attendance" -> 1, 
        "season wins" -> 8, "season rank wins" -> 1, "season losses" -> 6, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 4, 
        "season goal average" -> 1.5625, "season rank goal average" -> 3, 
        "season assist average" -> 0.6875, "season rank assist average" -> 6, 
        "season auto goal average" -> 0.0625, "season rank auto goal average" -> 
        7, "season matches played" -> 16, "season rank matches played" -> 1, 
        "season MVP goal" -> 2, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1462.944416966172, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 12, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        12, "season worst teammate" -> "Jaka.Simon", "season change" -> 0|>, <|
       "date" -> DateObject[{2022, 12, 22}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 50, "matches played" -> 66, "goals" -> 
        61, "assists" -> 34, "auto goals" -> 1, "winrate" -> 0.5, 
        "goal average" -> 0.9242424242424242, "assist average" -> 
        0.5151515151515151, "auto goal average" -> 0.015151515151515152`, 
        "wins" -> 33, "losses" -> 19, "ties" -> 14, "MMR" -> 
        1163.6755093643465`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2022-12-15", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1472.8176440550405`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 3, 
        "rank wins" -> 1, "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 11, "debt" -> 
        5, "SR" -> 1472.8176440550405`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 26, "season rank goals" -> 1, 
        "season assists" -> 11, "season rank assists" -> 2, 
        "season auto goals" -> 1, "season rank auto goals" -> 1, 
        "season attendance" -> 15, "season rank attendance" -> 1, 
        "season wins" -> 9, "season rank wins" -> 1, "season losses" -> 6, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.5294117647058824, "season rank winrate" -> 4,
         "season goal average" -> 1.5294117647058822`, 
        "season rank goal average" -> 2, "season assist average" -> 
        0.6470588235294118, "season rank assist average" -> 6, 
        "season auto goal average" -> 0.058823529411764705`, 
        "season rank auto goal average" -> 8, "season matches played" -> 17, 
        "season rank matches played" -> 1, "season MVP goal" -> 2, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1472.8176440550405`, "season tournaments won" -> 1, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 13, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        13, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 1, 5}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 51, "matches played" -> 66, "goals" -> 
        62, "assists" -> 34, "auto goals" -> 1, "winrate" -> 0.5, 
        "goal average" -> 0.9393939393939394, "assist average" -> 
        0.5151515151515151, "auto goal average" -> 0.015151515151515152`, 
        "wins" -> 33, "losses" -> 19, "ties" -> 14, "MMR" -> 
        1164.8021448253212`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2022-12-22", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1482.8176440550405`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 3, 
        "rank wins" -> 1, "rank losses" -> 5, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 13, "debt" -> 
        5, "SR" -> 1482.8176440550405`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 27, "season rank goals" -> 1, 
        "season assists" -> 11, "season rank assists" -> 2, 
        "season auto goals" -> 1, "season rank auto goals" -> 1, 
        "season attendance" -> 16, "season rank attendance" -> 1, 
        "season wins" -> 9, "season rank wins" -> 1, "season losses" -> 6, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.5294117647058824, "season rank winrate" -> 4,
         "season goal average" -> 1.588235294117647, 
        "season rank goal average" -> 2, "season assist average" -> 
        0.6470588235294118, "season rank assist average" -> 6, 
        "season auto goal average" -> 0.058823529411764705`, 
        "season rank auto goal average" -> 10, "season matches played" -> 17, 
        "season rank matches played" -> 1, "season MVP goal" -> 2, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1482.8176440550405`, "season tournaments won" -> 1, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 14, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        14, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 1, 12}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 52, "matches played" -> 67, "goals" -> 
        62, "assists" -> 34, "auto goals" -> 1, "winrate" -> 
        0.4925373134328358, "goal average" -> 0.9253731343283582, 
        "assist average" -> 0.5074626865671642, "auto goal average" -> 
        0.014925373134328358`, "wins" -> 33, "losses" -> 20, "ties" -> 14, 
        "MMR" -> 1161.6775069752923`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-01-05", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1482.8176440550405`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 3, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 13, "debt" -> 
        6, "SR" -> 1466.0453682299294`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 27, "season rank goals" -> 1, 
        "season assists" -> 11, "season rank assists" -> 2, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 17, "season rank attendance" -> 1, 
        "season wins" -> 9, "season rank wins" -> 1, "season losses" -> 7, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 6, 
        "season goal average" -> 1.5, "season rank goal average" -> 2, 
        "season assist average" -> 0.6111111111111112, 
        "season rank assist average" -> 6, "season auto goal average" -> 
        0.05555555555555555, "season rank auto goal average" -> 9, 
        "season matches played" -> 18, "season rank matches played" -> 1, 
        "season MVP goal" -> 2, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1482.8176440550405`, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 15, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        15, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 1, 19}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 53, "matches played" -> 68, "goals" -> 
        62, "assists" -> 37, "auto goals" -> 1, "winrate" -> 0.5, 
        "goal average" -> 0.9117647058823529, "assist average" -> 
        0.5441176470588235, "auto goal average" -> 0.014705882352941176`, 
        "wins" -> 34, "losses" -> 20, "ties" -> 14, "MMR" -> 
        1163.8452042745716`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-01-12", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 3, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 2, "rank auto goal average" -> 13, "debt" -> 
        7, "SR" -> 1489.2842747510497`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 27, "season rank goals" -> 1, 
        "season assists" -> 14, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 18, "season rank attendance" -> 1, 
        "season wins" -> 10, "season rank wins" -> 1, "season losses" -> 7, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.5263157894736842, "season rank winrate" -> 6,
         "season goal average" -> 1.4210526315789473`, 
        "season rank goal average" -> 2, "season assist average" -> 
        0.7368421052631579, "season rank assist average" -> 5, 
        "season auto goal average" -> 0.05263157894736842, 
        "season rank auto goal average" -> 10, "season matches played" -> 19, 
        "season rank matches played" -> 1, "season MVP goal" -> 2, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 3, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1489.2842747510497`, "season tournaments won" -> 1, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 16, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        16, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 1, 26}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 54, "matches played" -> 69, "goals" -> 
        62, "assists" -> 37, "auto goals" -> 1, "winrate" -> 
        0.4927536231884058, "goal average" -> 0.8985507246376812, 
        "assist average" -> 0.5362318840579711, "auto goal average" -> 
        0.014492753623188406`, "wins" -> 34, "losses" -> 21, "ties" -> 14, 
        "MMR" -> 1160.6932931299925`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-01-19", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 13, "debt" -> 
        8, "SR" -> 1465.9044661823843`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 27, "season rank goals" -> 1, 
        "season assists" -> 14, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 19, "season rank attendance" -> 1, 
        "season wins" -> 10, "season rank wins" -> 1, "season losses" -> 8, 
        "season rank losses" -> 1, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 7, 
        "season goal average" -> 1.35, "season rank goal average" -> 3, 
        "season assist average" -> 0.7, "season rank assist average" -> 2, 
        "season auto goal average" -> 0.05, "season rank auto goal average" -> 
        9, "season matches played" -> 20, "season rank matches played" -> 1, 
        "season MVP goal" -> 2, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 3, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1489.2842747510497`, "season tournaments won" -> 
        1, "season rank tournaments won" -> 1, "season weeks on top" -> 17, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        17, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 2, 2}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 54, "matches played" -> 69, "goals" -> 
        62, "assists" -> 37, "auto goals" -> 1, "winrate" -> 
        0.4927536231884058, "goal average" -> 0.8985507246376812, 
        "assist average" -> 0.5362318840579711, "auto goal average" -> 
        0.014492753623188406`, "wins" -> 34, "losses" -> 21, "ties" -> 14, 
        "MMR" -> 1160.6932931299925`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-01-19", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 3, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 12, "debt" -> 
        8, "SR" -> 0., "rank SR" -> 0, "season rank" -> "Unranked", 
        "season goals" -> 0, "season rank goals" -> 0, "season assists" -> 0, 
        "season rank assists" -> 0, "season auto goals" -> 0, 
        "season rank auto goals" -> 0, "season attendance" -> 0, 
        "season rank attendance" -> 0, "season wins" -> 0, "season rank wins" -> 
        0, "season losses" -> 0, "season rank losses" -> 0, "season ties" -> 
        0, "season rank ties" -> 0, "season winrate" -> 0., 
        "season rank winrate" -> 0, "season goal average" -> 0., 
        "season rank goal average" -> 0, "season assist average" -> 0., 
        "season rank assist average" -> 0, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 0, "season matches played" -> 0, 
        "season rank matches played" -> 0, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 0, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 0, "season highest SR" -> 0., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 0, 
        "season weeks on top" -> 0, "season rank weeks on top" -> 0, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> "",
         "season change" -> Missing["Empty"]|>, <|
       "date" -> DateObject[{2023, 2, 16}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 55, "matches played" -> 70, "goals" -> 
        62, "assists" -> 37, "auto goals" -> 1, "winrate" -> 
        0.4857142857142857, "goal average" -> 0.8857142857142857, 
        "assist average" -> 0.5285714285714286, "auto goal average" -> 
        0.014285714285714285`, "wins" -> 34, "losses" -> 21, "ties" -> 15, 
        "MMR" -> 1157.2333161228428`, "winstreak" -> 0, "losing streak" -> 0, 
        "last match played" -> "2023-02-02", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 3, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 12, "debt" -> 
        9, "SR" -> 999., "rank SR" -> 4, "season rank" -> "Bronze", 
        "season goals" -> 0, "season rank goals" -> 3, "season assists" -> 0, 
        "season rank assists" -> 2, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 1, 
        "season rank attendance" -> 1, "season wins" -> 0, "season rank wins" -> 
        1, "season losses" -> 0, "season rank losses" -> 1, "season ties" -> 
        1, "season rank ties" -> 1, "season winrate" -> 0., 
        "season rank winrate" -> 1, "season goal average" -> 0., 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 2, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 1, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 1, "season highest SR" -> 999., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 0, "season rank weeks on top" -> 2, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> 
        "Andra\[ZHacek].Bla\[ZHacek].Danijel.Jaka.Erik.Miha.Janez.Matej.Matev\
\[ZHacek].Bert.Kris.Judez.Domen.Luka", "season change" -> 
        Missing["Unrecognized", "N"]|>, <|
       "date" -> DateObject[{2023, 2, 23}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 56, "matches played" -> 71, "goals" -> 
        63, "assists" -> 37, "auto goals" -> 1, "winrate" -> 
        0.4788732394366197, "goal average" -> 0.8873239436619719, 
        "assist average" -> 0.5211267605633803, "auto goal average" -> 
        0.014084507042253521`, "wins" -> 34, "losses" -> 22, "ties" -> 15, 
        "MMR" -> 1154.9814814985555`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-02-16", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 12, "debt" -> 
        10, "SR" -> 987.1403719256149, "rank SR" -> 10, "season rank" -> 
        "Bronze", "season goals" -> 1, "season rank goals" -> 2, 
        "season assists" -> 0, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 2, "season rank attendance" -> 1, 
        "season wins" -> 0, "season rank wins" -> 2, "season losses" -> 1, 
        "season rank losses" -> 1, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0., "season rank winrate" -> 3, 
        "season goal average" -> 0.5, "season rank goal average" -> 3, 
        "season assist average" -> 0., "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 2, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 2, 
        "season highest SR" -> 999., "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> -6|>, <|
       "date" -> DateObject[{2023, 3, 2}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 57, "matches played" -> 72, "goals" -> 
        64, "assists" -> 37, "auto goals" -> 1, "winrate" -> 
        0.4722222222222222, "goal average" -> 0.8888888888888888, 
        "assist average" -> 0.5138888888888888, "auto goal average" -> 
        0.013888888888888888`, "wins" -> 34, "losses" -> 22, "ties" -> 16, 
        "MMR" -> 1152.665917470004, "winstreak" -> 0, "losing streak" -> 0, 
        "last match played" -> "2023-02-23", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 5, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 12, "debt" -> 
        11, "SR" -> 997.1403719256149, "rank SR" -> 11, "season rank" -> 
        "Bronze", "season goals" -> 2, "season rank goals" -> 1, 
        "season assists" -> 0, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 3, "season rank attendance" -> 1, 
        "season wins" -> 0, "season rank wins" -> 2, "season losses" -> 1, 
        "season rank losses" -> 1, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0., "season rank winrate" -> 4, 
        "season goal average" -> 0.6666666666666666, 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 4, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 2, "season matches played" -> 3, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 999., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 0, "season rank weeks on top" -> 3, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> 
        "Jaka", "season change" -> -1|>, <|
       "date" -> DateObject[{2023, 3, 9}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 58, "matches played" -> 73, "goals" -> 
        65, "assists" -> 37, "auto goals" -> 1, "winrate" -> 
        0.4794520547945205, "goal average" -> 0.8904109589041096, 
        "assist average" -> 0.5068493150684932, "auto goal average" -> 
        0.0136986301369863, "wins" -> 35, "losses" -> 22, "ties" -> 16, "MMR" -> 
        1154.7625484030393`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-03-02", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 2, "rank auto goal average" -> 12, 
        "debt" -> -38, "SR" -> 1020.4240906938143`, "rank SR" -> 7, 
        "season rank" -> "Silver", "season goals" -> 3, "season rank goals" -> 
        1, "season assists" -> 0, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 4, "season rank attendance" -> 1, 
        "season wins" -> 1, "season rank wins" -> 2, "season losses" -> 1, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.25, "season rank winrate" -> 4, 
        "season goal average" -> 0.75, "season rank goal average" -> 3, 
        "season assist average" -> 0., "season rank assist average" -> 7, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 4, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1020.4240906938143`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 4|>, <|
       "date" -> DateObject[{2023, 3, 16}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 59, "matches played" -> 74, "goals" -> 
        67, "assists" -> 38, "auto goals" -> 1, "winrate" -> 
        0.4864864864864865, "goal average" -> 0.9054054054054054, 
        "assist average" -> 0.5135135135135135, "auto goal average" -> 
        0.013513513513513514`, "wins" -> 36, "losses" -> 22, "ties" -> 16, 
        "MMR" -> 1158.6444966146307`, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2023-03-09", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 2, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 12, 
        "debt" -> -37, "SR" -> 1079.3429840700508`, "rank SR" -> 2, 
        "season rank" -> "Silver", "season goals" -> 5, "season rank goals" -> 
        1, "season assists" -> 1, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 5, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 2, "season losses" -> 1, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.4, "season rank winrate" -> 3, 
        "season goal average" -> 1., "season rank goal average" -> 2, 
        "season assist average" -> 0.2, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 5, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1079.3429840700508`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 5|>, <|
       "date" -> DateObject[{2023, 3, 23}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 61, "matches played" -> 77, "goals" -> 
        68, "assists" -> 40, "auto goals" -> 1, "winrate" -> 
        0.4805194805194805, "goal average" -> 0.8831168831168831, 
        "assist average" -> 0.5194805194805194, "auto goal average" -> 
        0.012987012987012988`, "wins" -> 37, "losses" -> 24, "ties" -> 16, 
        "MMR" -> 1155.0285013237349`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-03-23", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 12, 
        "debt" -> -35, "SR" -> 1088.2678247755184`, "rank SR" -> 2, 
        "season rank" -> "Silver", "season goals" -> 6, "season rank goals" -> 
        1, "season assists" -> 3, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 7, "season rank attendance" -> 1, 
        "season wins" -> 3, "season rank wins" -> 2, "season losses" -> 3, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.375, "season rank winrate" -> 5, 
        "season goal average" -> 0.75, "season rank goal average" -> 3, 
        "season assist average" -> 0.375, "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 8, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1088.2678247755184`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 5|>, <|
       "date" -> DateObject[{2023, 3, 30}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 61, "matches played" -> 77, "goals" -> 
        68, "assists" -> 40, "auto goals" -> 1, "winrate" -> 
        0.4805194805194805, "goal average" -> 0.8831168831168831, 
        "assist average" -> 0.5194805194805194, "auto goal average" -> 
        0.012987012987012988`, "wins" -> 37, "losses" -> 24, "ties" -> 16, 
        "MMR" -> 1155.0285013237349`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-03-23", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        2, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 12, 
        "debt" -> -35, "SR" -> 1088.2678247755184`, "rank SR" -> 2, 
        "season rank" -> "Silver", "season goals" -> 6, "season rank goals" -> 
        1, "season assists" -> 3, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 7, "season rank attendance" -> 1, 
        "season wins" -> 3, "season rank wins" -> 2, "season losses" -> 3, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.375, "season rank winrate" -> 5, 
        "season goal average" -> 0.75, "season rank goal average" -> 3, 
        "season assist average" -> 0.375, "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 8, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1088.2678247755184`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 5|>, <|
       "date" -> DateObject[{2023, 4, 6}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 62, "matches played" -> 78, "goals" -> 
        68, "assists" -> 40, "auto goals" -> 1, "winrate" -> 
        0.47435897435897434`, "goal average" -> 0.8717948717948718, 
        "assist average" -> 0.5128205128205128, "auto goal average" -> 
        0.01282051282051282, "wins" -> 37, "losses" -> 25, "ties" -> 16, 
        "MMR" -> 1151.493055185976, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-03-30", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 5, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 11, 
        "debt" -> -34, "SR" -> 1053.126675406196, "rank SR" -> 6, 
        "season rank" -> "Silver", "season goals" -> 6, "season rank goals" -> 
        2, "season assists" -> 3, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 8, "season rank attendance" -> 1, 
        "season wins" -> 3, "season rank wins" -> 3, "season losses" -> 4, 
        "season rank losses" -> 1, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.3333333333333333, "season rank winrate" -> 7,
         "season goal average" -> 0.6666666666666666, 
        "season rank goal average" -> 3, "season assist average" -> 
        0.3333333333333333, "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 9, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1088.2678247755184`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> -4|>, <|
       "date" -> DateObject[{2023, 4, 13}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 63, "matches played" -> 79, "goals" -> 
        68, "assists" -> 42, "auto goals" -> 1, "winrate" -> 
        0.4810126582278481, "goal average" -> 0.8607594936708861, 
        "assist average" -> 0.5316455696202531, "auto goal average" -> 
        0.012658227848101266`, "wins" -> 38, "losses" -> 25, "ties" -> 16, 
        "MMR" -> 1153.4974100489674`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-04-06", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 1, 
        "rank assist average" -> 1, "rank auto goal average" -> 11, 
        "debt" -> -33, "SR" -> 1093.4050101284945`, "rank SR" -> 2, 
        "season rank" -> "Silver", "season goals" -> 6, "season rank goals" -> 
        2, "season assists" -> 5, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 9, "season rank attendance" -> 1, 
        "season wins" -> 4, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.4, "season rank winrate" -> 7, 
        "season goal average" -> 0.6, "season rank goal average" -> 6, 
        "season assist average" -> 0.5, "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 10, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1093.4050101284945`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 4|>, <|
       "date" -> DateObject[{2023, 4, 20}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 64, "matches played" -> 80, "goals" -> 
        68, "assists" -> 42, "auto goals" -> 1, "winrate" -> 0.475, 
        "goal average" -> 0.85, "assist average" -> 0.525, 
        "auto goal average" -> 0.0125, "wins" -> 38, "losses" -> 26, "ties" -> 
        16, "MMR" -> 1149.957425670058, "winstreak" -> 0, "losing streak" -> 
        1, "last match played" -> "2023-04-13", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 12, 
        "debt" -> -32, "SR" -> 1082.5661267293076`, "rank SR" -> 4, 
        "season rank" -> "Silver", "season goals" -> 6, "season rank goals" -> 
        2, "season assists" -> 5, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 10, "season rank attendance" -> 1, 
        "season wins" -> 4, "season rank wins" -> 3, "season losses" -> 5, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.36363636363636365`, "season rank winrate" -> 
        8, "season goal average" -> 0.5454545454545454, 
        "season rank goal average" -> 8, "season assist average" -> 
        0.45454545454545453`, "season rank assist average" -> 3, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 11, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1093.4050101284945`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Andra\[ZHacek].Jaka", 
        "season change" -> -2|>, <|
       "date" -> DateObject[{2023, 5, 4}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 65, "matches played" -> 81, "goals" -> 
        69, "assists" -> 43, "auto goals" -> 1, "winrate" -> 
        0.4691358024691358, "goal average" -> 0.8518518518518519, 
        "assist average" -> 0.5308641975308642, "auto goal average" -> 
        0.012345679012345678`, "wins" -> 38, "losses" -> 27, "ties" -> 16, 
        "MMR" -> 1148.4825817219382`, "winstreak" -> 0, "losing streak" -> 2, 
        "last match played" -> "2023-04-20", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 11, 
        "debt" -> -31, "SR" -> 1074.7910747154785`, "rank SR" -> 7, 
        "season rank" -> "Silver", "season goals" -> 7, "season rank goals" -> 
        2, "season assists" -> 6, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 11, "season rank attendance" -> 1, 
        "season wins" -> 4, "season rank wins" -> 3, "season losses" -> 6, 
        "season rank losses" -> 1, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.3333333333333333, "season rank winrate" -> 9,
         "season goal average" -> 0.5833333333333334, 
        "season rank goal average" -> 7, "season assist average" -> 0.5, 
        "season rank assist average" -> 2, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 3, "season matches played" -> 12, 
        "season rank matches played" -> 1, "season MVP goal" -> 1, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1093.4050101284945`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Andra\[ZHacek].Jaka", 
        "season change" -> -3|>, <|
       "date" -> DateObject[{2023, 5, 11}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 66, "matches played" -> 82, "goals" -> 
        70, "assists" -> 45, "auto goals" -> 1, "winrate" -> 
        0.4634146341463415, "goal average" -> 0.8536585365853658, 
        "assist average" -> 0.5487804878048781, "auto goal average" -> 
        0.012195121951219513`, "wins" -> 38, "losses" -> 28, "ties" -> 16, 
        "MMR" -> 1147.7362494434356`, "winstreak" -> 0, "losing streak" -> 3, 
        "last match played" -> "2023-05-04", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 5, 
        "rank wins" -> 1, "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 13, 
        "debt" -> -30, "SR" -> 1090.08698888686, "rank SR" -> 7, 
        "season rank" -> "Silver", "season goals" -> 8, "season rank goals" -> 
        3, "season assists" -> 8, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 12, "season rank attendance" -> 1, 
        "season wins" -> 4, "season rank wins" -> 3, "season losses" -> 7, 
        "season rank losses" -> 1, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.3076923076923077, "season rank winrate" -> 
        11, "season goal average" -> 0.6153846153846154, 
        "season rank goal average" -> 8, "season assist average" -> 
        0.6153846153846154, "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 13, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 3, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1093.4050101284945`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Andra\[ZHacek].Jaka", "season change" -> 
        0|>, <|"date" -> DateObject[{2023, 5, 25}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 67, "matches played" -> 83, "goals" -> 
        71, "assists" -> 45, "auto goals" -> 1, "winrate" -> 
        0.46987951807228917`, "goal average" -> 0.8554216867469879, 
        "assist average" -> 0.5421686746987951, "auto goal average" -> 
        0.012048192771084338`, "wins" -> 39, "losses" -> 28, "ties" -> 16, 
        "MMR" -> 1149.8281065790788`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-05-11", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 3, "rank winrate" -> 5, 
        "rank wins" -> 1, "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 13, 
        "debt" -> -29, "SR" -> 1107.3320501006453`, "rank SR" -> 6, 
        "season rank" -> "Gold", "season goals" -> 9, "season rank goals" -> 
        2, "season assists" -> 8, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 13, "season rank attendance" -> 1, 
        "season wins" -> 5, "season rank wins" -> 3, "season losses" -> 7, 
        "season rank losses" -> 1, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.35714285714285715`, "season rank winrate" -> 
        10, "season goal average" -> 0.6428571428571429, 
        "season rank goal average" -> 5, "season assist average" -> 
        0.5714285714285714, "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 14, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 3, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1107.3320501006453`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 1|>, <|
       "date" -> DateObject[{2023, 6, 1}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 68, "matches played" -> 84, "goals" -> 
        73, "assists" -> 46, "auto goals" -> 2, "winrate" -> 
        0.47619047619047616`, "goal average" -> 0.8690476190476191, 
        "assist average" -> 0.5476190476190477, "auto goal average" -> 
        0.023809523809523808`, "wins" -> 40, "losses" -> 28, "ties" -> 16, 
        "MMR" -> 1153.0943400105791`, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2023-05-25", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 5, 
        "rank wins" -> 1, "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 9, 
        "debt" -> -28, "SR" -> 1137.1495890338708`, "rank SR" -> 6, 
        "season rank" -> "Gold", "season goals" -> 11, "season rank goals" -> 
        2, "season assists" -> 9, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 1, 
        "season attendance" -> 14, "season rank attendance" -> 1, 
        "season wins" -> 6, "season rank wins" -> 3, "season losses" -> 7, 
        "season rank losses" -> 1, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.4, "season rank winrate" -> 8, 
        "season goal average" -> 0.7333333333333333, 
        "season rank goal average" -> 5, "season assist average" -> 0.6, 
        "season rank assist average" -> 2, "season auto goal average" -> 
        0.06666666666666667, "season rank auto goal average" -> 3, 
        "season matches played" -> 15, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 3, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1137.1495890338708`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 6, 8}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 69, "matches played" -> 85, "goals" -> 
        75, "assists" -> 47, "auto goals" -> 2, "winrate" -> 
        0.4823529411764706, "goal average" -> 0.8823529411764706, 
        "assist average" -> 0.5529411764705883, "auto goal average" -> 
        0.023529411764705882`, "wins" -> 41, "losses" -> 28, "ties" -> 16, 
        "MMR" -> 1156.6584788475725`, "winstreak" -> 3, "losing streak" -> 0, 
        "last match played" -> "2023-06-01", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 4, 
        "rank wins" -> 1, "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 8, 
        "debt" -> -27, "SR" -> 1180.109358225311, "rank SR" -> 4, 
        "season rank" -> "Gold", "season goals" -> 13, "season rank goals" -> 
        2, "season assists" -> 10, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 1, 
        "season attendance" -> 15, "season rank attendance" -> 1, 
        "season wins" -> 7, "season rank wins" -> 2, "season losses" -> 7, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.4375, "season rank winrate" -> 9, 
        "season goal average" -> 0.8125, "season rank goal average" -> 6, 
        "season assist average" -> 0.625, "season rank assist average" -> 1, 
        "season auto goal average" -> 0.0625, "season rank auto goal average" -> 
        3, "season matches played" -> 16, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 3, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1180.109358225311, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka", "season change" -> 2|>, <|
       "date" -> DateObject[{2023, 6, 15}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 70, "matches played" -> 86, "goals" -> 
        77, "assists" -> 48, "auto goals" -> 2, "winrate" -> 
        0.4883720930232558, "goal average" -> 0.8953488372093024, 
        "assist average" -> 0.5581395348837209, "auto goal average" -> 
        0.023255813953488372`, "wins" -> 42, "losses" -> 28, "ties" -> 16, 
        "MMR" -> 1159.833139324888, "winstreak" -> 4, "losing streak" -> 0, 
        "last match played" -> "2023-06-08", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1489.2842747510497`, 
        "highest MMR" -> 1170.7781892913954`, "rank goals" -> 1, 
        "rank assists" -> 1, "rank auto goals" -> 2, "rank winrate" -> 3, 
        "rank wins" -> 1, "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 
        3, "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 9, 
        "debt" -> -14, "SR" -> 1237.6485336482353`, "rank SR" -> 2, 
        "season rank" -> "Platinum", "season goals" -> 15, 
        "season rank goals" -> 2, "season assists" -> 11, 
        "season rank assists" -> 1, "season auto goals" -> 1, 
        "season rank auto goals" -> 1, "season attendance" -> 16, 
        "season rank attendance" -> 1, "season wins" -> 8, "season rank wins" -> 
        2, "season losses" -> 7, "season rank losses" -> 3, "season ties" -> 
        2, "season rank ties" -> 1, "season winrate" -> 0.47058823529411764`, 
        "season rank winrate" -> 8, "season goal average" -> 
        0.8823529411764706, "season rank goal average" -> 4, 
        "season assist average" -> 0.6470588235294118, 
        "season rank assist average" -> 1, "season auto goal average" -> 
        0.058823529411764705`, "season rank auto goal average" -> 3, 
        "season matches played" -> 17, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 3, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1237.6485336482353`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 2, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "", "season change" -> 2|>, <|
       "date" -> DateObject[{2023, 6, 23}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 71, "matches played" -> 87, "goals" -> 
        91, "assists" -> 54, "auto goals" -> 3, "winrate" -> 
        0.4827586206896552, "goal average" -> 1.0459770114942528`, 
        "assist average" -> 0.6206896551724138, "auto goal average" -> 
        0.034482758620689655`, "wins" -> 42, "losses" -> 29, "ties" -> 16, 
        "MMR" -> 1170.5810136825721`, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2023-06-15", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1507.160541397094, "highest MMR" -> 
        1170.7781892913954`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 1, "rank auto goal average" -> 6, 
        "debt" -> -13, "SR" -> 1507.160541397094, "rank SR" -> 1, 
        "season rank" -> "Diamond", "season goals" -> 29, "season rank goals" -> 
        1, "season assists" -> 17, "season rank assists" -> 1, 
        "season auto goals" -> 2, "season rank auto goals" -> 1, 
        "season attendance" -> 17, "season rank attendance" -> 1, 
        "season wins" -> 8, "season rank wins" -> 2, "season losses" -> 8, 
        "season rank losses" -> 2, "season ties" -> 2, "season rank ties" -> 
        1, "season winrate" -> 0.4444444444444444, "season rank winrate" -> 9,
         "season goal average" -> 1.6111111111111112`, 
        "season rank goal average" -> 2, "season assist average" -> 
        0.9444444444444444, "season rank assist average" -> 1, 
        "season auto goal average" -> 0.1111111111111111, 
        "season rank auto goal average" -> 1, "season matches played" -> 18, 
        "season rank matches played" -> 1, "season MVP goal" -> 2, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 3, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1507.160541397094, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 2, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        1, "season worst teammate" -> "", "season change" -> 1|>, <|
       "date" -> DateObject[{2023, 9, 20}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 72, "matches played" -> 88, "goals" -> 
        94, "assists" -> 57, "auto goals" -> 3, "winrate" -> 
        0.4772727272727273, "goal average" -> 1.0681818181818181`, 
        "assist average" -> 0.6477272727272727, "auto goal average" -> 
        0.03409090909090909, "wins" -> 42, "losses" -> 30, "ties" -> 16, 
        "MMR" -> 1171.435790291508, "winstreak" -> 6, "losing streak" -> 0, 
        "last match played" -> "2023-06-23", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1171.435790291508, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 5, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 1, "rank auto goal average" -> 7, 
        "debt" -> -12, "SR" -> 0., "rank SR" -> 0, "season rank" -> 
        "Unranked", "season goals" -> 0, "season rank goals" -> 0, 
        "season assists" -> 0, "season rank assists" -> 0, 
        "season auto goals" -> 0, "season rank auto goals" -> 0, 
        "season attendance" -> 0, "season rank attendance" -> 0, 
        "season wins" -> 0, "season rank wins" -> 0, "season losses" -> 0, 
        "season rank losses" -> 0, "season ties" -> 0, "season rank ties" -> 
        0, "season winrate" -> 0., "season rank winrate" -> 0, 
        "season goal average" -> 0., "season rank goal average" -> 0, 
        "season assist average" -> 0., "season rank assist average" -> 0, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        0, "season matches played" -> 0, "season rank matches played" -> 0, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 0, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 0, 
        "season highest SR" -> 0., "season tournaments won" -> 0, 
        "season rank tournaments won" -> 0, "season weeks on top" -> 0, 
        "season rank weeks on top" -> 0, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "", "season change" -> 
        Missing["Empty"]|>, <|
       "date" -> DateObject[{2023, 9, 28}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 73, "matches played" -> 89, "goals" -> 
        98, "assists" -> 58, "auto goals" -> 3, "winrate" -> 
        0.48314606741573035`, "goal average" -> 1.101123595505618, 
        "assist average" -> 0.651685393258427, "auto goal average" -> 
        0.033707865168539325`, "wins" -> 43, "losses" -> 30, "ties" -> 16, 
        "MMR" -> 1173.3200966035051`, "winstreak" -> 7, "losing streak" -> 0, 
        "last match played" -> "2023-09-20", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1173.3200966035051`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 1, "rank auto goal average" -> 6, 
        "debt" -> -10, "SR" -> 1094.476995835319, "rank SR" -> 1, 
        "season rank" -> "Silver", "season goals" -> 4, "season rank goals" -> 
        1, "season assists" -> 1, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 1, "season rank attendance" -> 1, 
        "season wins" -> 1, "season rank wins" -> 1, "season losses" -> 0, 
        "season rank losses" -> 2, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 1., "season rank winrate" -> 1, 
        "season goal average" -> 4., "season rank goal average" -> 1, 
        "season assist average" -> 1., "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 1, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1094.476995835319, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        1, "season worst teammate" -> 
        "Bla\[ZHacek].Danijel.Miha.Matej.Matev\[ZHacek].Bert.Kris.Judez.Domen.\
Luka.\[CapitalCHacek]rt", "season change" -> Missing["Unrecognized", "N"]|>, <|
       "date" -> DateObject[{2023, 10, 5}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 74, "matches played" -> 90, "goals" -> 
        102, "assists" -> 61, "auto goals" -> 3, "winrate" -> 
        0.4888888888888889, "goal average" -> 1.1333333333333333`, 
        "assist average" -> 0.6777777777777778, "auto goal average" -> 
        0.03333333333333333, "wins" -> 44, "losses" -> 30, "ties" -> 16, 
        "MMR" -> 1174.85220815828, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-09-28", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 1, "rank auto goal average" -> 6, 
        "debt" -> -8, "SR" -> 1143.4302900525897`, "rank SR" -> 1, 
        "season rank" -> "Gold", "season goals" -> 8, "season rank goals" -> 
        1, "season assists" -> 4, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 2, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 1, "season losses" -> 0, 
        "season rank losses" -> 3, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 1., "season rank winrate" -> 1, 
        "season goal average" -> 4., "season rank goal average" -> 2, 
        "season assist average" -> 2., "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 2, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1143.4302900525897`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        2, "season worst teammate" -> "Jaka", "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 10, 12}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 75, "matches played" -> 91, "goals" -> 
        103, "assists" -> 61, "auto goals" -> 3, "winrate" -> 
        0.4835164835164835, "goal average" -> 1.1318681318681318`, 
        "assist average" -> 0.6703296703296703, "auto goal average" -> 
        0.03296703296703297, "wins" -> 44, "losses" -> 31, "ties" -> 16, 
        "MMR" -> 1174.4114116773662`, "winstreak" -> 0, "losing streak" -> 2, 
        "last match played" -> "2023-10-05", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, 
        "debt" -> -6, "SR" -> 1130.8849405986207`, "rank SR" -> 2, 
        "season rank" -> "Gold", "season goals" -> 9, "season rank goals" -> 
        1, "season assists" -> 4, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 3, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 1, "season losses" -> 1, 
        "season rank losses" -> 3, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 2,
         "season goal average" -> 3., "season rank goal average" -> 2, 
        "season assist average" -> 1.3333333333333333`, 
        "season rank assist average" -> 3, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 3, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 1, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1143.4302900525897`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka.\[CapitalZHacek]an", 
        "season change" -> -1|>, <|
       "date" -> DateObject[{2023, 10, 19}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 76, "matches played" -> 92, "goals" -> 
        105, "assists" -> 64, "auto goals" -> 3, "winrate" -> 
        0.4782608695652174, "goal average" -> 1.141304347826087, 
        "assist average" -> 0.6956521739130435, "auto goal average" -> 
        0.03260869565217391, "wins" -> 44, "losses" -> 32, "ties" -> 16, 
        "MMR" -> 1174.554866962391, "winstreak" -> 0, "losing streak" -> 3, 
        "last match played" -> "2023-10-12", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 6, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 2, 
        "rank assist average" -> 2, "rank auto goal average" -> 5, 
        "debt" -> -4, "SR" -> 1157.1923112905524`, "rank SR" -> 2, 
        "season rank" -> "Gold", "season goals" -> 11, "season rank goals" -> 
        2, "season assists" -> 7, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 4, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 1, "season losses" -> 2, 
        "season rank losses" -> 3, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 3, 
        "season goal average" -> 2.75, "season rank goal average" -> 2, 
        "season assist average" -> 1.75, "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 4, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 3, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1157.1923112905524`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka.\[CapitalZHacek]an", 
        "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 10, 26}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 77, "matches played" -> 93, "goals" -> 
        105, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.4838709677419355, "goal average" -> 1.1290322580645162`, 
        "assist average" -> 0.6989247311827957, "auto goal average" -> 
        0.03225806451612903, "wins" -> 45, "losses" -> 32, "ties" -> 16, 
        "MMR" -> 1174.6885871719805`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-10-19", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, 
        "debt" -> -2, "SR" -> 1167.2541301807464`, "rank SR" -> 2, 
        "season rank" -> "Gold", "season goals" -> 11, "season rank goals" -> 
        2, "season assists" -> 8, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 5, "season rank attendance" -> 1, 
        "season wins" -> 3, "season rank wins" -> 1, "season losses" -> 2, 
        "season rank losses" -> 3, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.6, "season rank winrate" -> 3, 
        "season goal average" -> 2.2, "season rank goal average" -> 3, 
        "season assist average" -> 1.6, "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 5, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 3, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1167.2541301807464`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "Jaka.\[CapitalZHacek]an", 
        "season change" -> 0|>, <|
       "date" -> DateObject[{2023, 11, 9}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 78, "matches played" -> 94, "goals" -> 
        105, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.48936170212765956`, "goal average" -> 1.1170212765957446`, 
        "assist average" -> 0.6914893617021277, "auto goal average" -> 
        0.031914893617021274`, "wins" -> 46, "losses" -> 32, "ties" -> 16, 
        "MMR" -> 1174.707269624351, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2023-10-26", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 2, "rank auto goal average" -> 7, "debt" -> 
        0, "SR" -> 1188.7884646929874`, "rank SR" -> 2, "season rank" -> 
        "Gold", "season goals" -> 11, "season rank goals" -> 2, 
        "season assists" -> 8, "season rank assists" -> 1, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 6, "season rank attendance" -> 1, 
        "season wins" -> 4, "season rank wins" -> 1, "season losses" -> 2, 
        "season rank losses" -> 3, "season ties" -> 0, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 2,
         "season goal average" -> 1.8333333333333333`, 
        "season rank goal average" -> 5, "season assist average" -> 
        1.3333333333333333`, "season rank assist average" -> 2, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 6, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 3, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1188.7884646929874`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        0|>, <|"date" -> DateObject[{2023, 11, 16}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 79, "matches played" -> 95, "goals" -> 
        107, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.4842105263157895, "goal average" -> 1.1263157894736842`, 
        "assist average" -> 0.6842105263157895, "auto goal average" -> 
        0.031578947368421054`, "wins" -> 46, "losses" -> 33, "ties" -> 16, 
        "MMR" -> 1174.5039813818032`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-11-09", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, "debt" -> 
        2, "SR" -> 1197.120305583348, "rank SR" -> 3, "season rank" -> "Gold",
         "season goals" -> 13, "season rank goals" -> 2, "season assists" -> 
        8, "season rank assists" -> 1, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 7, 
        "season rank attendance" -> 1, "season wins" -> 4, "season rank wins" -> 
        1, "season losses" -> 3, "season rank losses" -> 2, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0.5714285714285714, 
        "season rank winrate" -> 5, "season goal average" -> 
        1.8571428571428572`, "season rank goal average" -> 4, 
        "season assist average" -> 1.1428571428571428`, 
        "season rank assist average" -> 3, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 7, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 3, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1197.120305583348, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", 
        "season change" -> -1|>, <|
       "date" -> DateObject[{2023, 11, 23}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 79, "matches played" -> 95, "goals" -> 
        107, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.4842105263157895, "goal average" -> 1.1263157894736842`, 
        "assist average" -> 0.6842105263157895, "auto goal average" -> 
        0.031578947368421054`, "wins" -> 46, "losses" -> 33, "ties" -> 16, 
        "MMR" -> 1174.5039813818032`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-11-09", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 5, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 2, "rank auto goal average" -> 6, "debt" -> 
        2, "SR" -> 1197.120305583348, "rank SR" -> 4, "season rank" -> "Gold",
         "season goals" -> 13, "season rank goals" -> 2, "season assists" -> 
        8, "season rank assists" -> 2, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 7, 
        "season rank attendance" -> 2, "season wins" -> 4, "season rank wins" -> 
        1, "season losses" -> 3, "season rank losses" -> 2, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0.5714285714285714, 
        "season rank winrate" -> 5, "season goal average" -> 
        1.8571428571428572`, "season rank goal average" -> 5, 
        "season assist average" -> 1.1428571428571428`, 
        "season rank assist average" -> 5, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 7, 
        "season rank matches played" -> 2, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 3, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1197.120305583348, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", 
        "season change" -> -1|>, <|
       "date" -> DateObject[{2023, 11, 30}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 79, "matches played" -> 95, "goals" -> 
        107, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.4842105263157895, "goal average" -> 1.1263157894736842`, 
        "assist average" -> 0.6842105263157895, "auto goal average" -> 
        0.031578947368421054`, "wins" -> 46, "losses" -> 33, "ties" -> 16, 
        "MMR" -> 1174.5039813818032`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-11-09", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 3, "rank auto goal average" -> 6, "debt" -> 
        2, "SR" -> 1197.120305583348, "rank SR" -> 4, "season rank" -> "Gold",
         "season goals" -> 13, "season rank goals" -> 3, "season assists" -> 
        8, "season rank assists" -> 3, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 7, 
        "season rank attendance" -> 2, "season wins" -> 4, "season rank wins" -> 
        2, "season losses" -> 3, "season rank losses" -> 2, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0.5714285714285714, 
        "season rank winrate" -> 6, "season goal average" -> 
        1.8571428571428572`, "season rank goal average" -> 6, 
        "season assist average" -> 1.1428571428571428`, 
        "season rank assist average" -> 5, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 7, 
        "season rank matches played" -> 2, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 4, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1197.120305583348, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        0|>, <|"date" -> DateObject[{2023, 12, 14}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 79, "matches played" -> 95, "goals" -> 
        107, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.4842105263157895, "goal average" -> 1.1263157894736842`, 
        "assist average" -> 0.6842105263157895, "auto goal average" -> 
        0.031578947368421054`, "wins" -> 46, "losses" -> 33, "ties" -> 16, 
        "MMR" -> 1174.5039813818032`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2023-11-09", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 3, "rank auto goal average" -> 6, "debt" -> 
        2, "SR" -> 1197.120305583348, "rank SR" -> 5, "season rank" -> "Gold",
         "season goals" -> 13, "season rank goals" -> 3, "season assists" -> 
        8, "season rank assists" -> 3, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 7, 
        "season rank attendance" -> 3, "season wins" -> 4, "season rank wins" -> 
        3, "season losses" -> 3, "season rank losses" -> 3, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0.5714285714285714, 
        "season rank winrate" -> 7, "season goal average" -> 
        1.8571428571428572`, "season rank goal average" -> 5, 
        "season assist average" -> 1.1428571428571428`, 
        "season rank assist average" -> 4, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 7, 
        "season rank matches played" -> 3, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 3, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1197.120305583348, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", 
        "season change" -> -1|>, <|
       "date" -> DateObject[{2023, 12, 21}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 80, "matches played" -> 96, "goals" -> 
        108, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.4791666666666667, "goal average" -> 1.125, "assist average" -> 
        0.6770833333333334, "auto goal average" -> 0.03125, "wins" -> 46, 
        "losses" -> 33, "ties" -> 17, "MMR" -> 1174.0363408957112`, 
        "winstreak" -> 0, "losing streak" -> 0, "last match played" -> 
        "2023-12-14", "tournaments won" -> 3, "weeks on top" -> 5, 
        "highest SR" -> 1569.043056480874, "highest MMR" -> 1174.85220815828, 
        "rank goals" -> 1, "rank assists" -> 1, "rank auto goals" -> 1, 
        "rank winrate" -> 6, "rank wins" -> 1, "rank losses" -> 4, 
        "rank ties" -> 1, "rank MMR" -> 3, "rank tournaments won" -> 1, 
        "rank attendance" -> 1, "rank matches played" -> 1, 
        "rank goal average" -> 3, "rank assist average" -> 3, 
        "rank auto goal average" -> 7, "debt" -> 4, "SR" -> 1207.120305583348,
         "rank SR" -> 5, "season rank" -> "Platinum", "season goals" -> 14, 
        "season rank goals" -> 3, "season assists" -> 8, 
        "season rank assists" -> 3, "season auto goals" -> 0, 
        "season rank auto goals" -> 2, "season attendance" -> 8, 
        "season rank attendance" -> 3, "season wins" -> 4, "season rank wins" -> 
        3, "season losses" -> 3, "season rank losses" -> 3, "season ties" -> 
        1, "season rank ties" -> 1, "season winrate" -> 0.5, 
        "season rank winrate" -> 7, "season goal average" -> 1.75, 
        "season rank goal average" -> 4, "season assist average" -> 1., 
        "season rank assist average" -> 4, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 2, "season matches played" -> 8, 
        "season rank matches played" -> 3, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 4, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1207.120305583348, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        0|>, <|"date" -> DateObject[{2024, 1, 4}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 81, "matches played" -> 97, "goals" -> 
        108, "assists" -> 65, "auto goals" -> 3, "winrate" -> 
        0.4845360824742268, "goal average" -> 1.1134020618556701`, 
        "assist average" -> 0.6701030927835051, "auto goal average" -> 
        0.030927835051546393`, "wins" -> 47, "losses" -> 33, "ties" -> 17, 
        "MMR" -> 1174.0660904627127`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2023-12-21", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1174.85220815828, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 3, "rank auto goal average" -> 7, "debt" -> 
        6, "SR" -> 1220.4991564572979`, "rank SR" -> 5, "season rank" -> 
        "Platinum", "season goals" -> 14, "season rank goals" -> 4, 
        "season assists" -> 8, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 9, "season rank attendance" -> 3, 
        "season wins" -> 5, "season rank wins" -> 2, "season losses" -> 3, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5555555555555556, "season rank winrate" -> 5,
         "season goal average" -> 1.5555555555555556`, 
        "season rank goal average" -> 5, "season assist average" -> 
        0.8888888888888888, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 9, "season rank matches played" -> 3, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 4, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1220.4991564572979`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        0|>, <|"date" -> DateObject[{2024, 1, 11}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 82, "matches played" -> 98, "goals" -> 
        112, "assists" -> 67, "auto goals" -> 3, "winrate" -> 
        0.4897959183673469, "goal average" -> 1.1428571428571428`, 
        "assist average" -> 0.6836734693877551, "auto goal average" -> 
        0.030612244897959183`, "wins" -> 48, "losses" -> 33, "ties" -> 17, 
        "MMR" -> 1175.1502367337782`, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2024-01-04", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1175.1502367337782`, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 3, "rank auto goal average" -> 8, "debt" -> 
        8, "SR" -> 1312.531903930861, "rank SR" -> 3, "season rank" -> 
        "Saphire", "season goals" -> 18, "season rank goals" -> 3, 
        "season assists" -> 10, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 10, "season rank attendance" -> 3, 
        "season wins" -> 6, "season rank wins" -> 1, "season losses" -> 3, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6, "season rank winrate" -> 5, 
        "season goal average" -> 1.8, "season rank goal average" -> 4, 
        "season assist average" -> 1., "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 10, "season rank matches played" -> 3, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 3, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1312.531903930861, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        2|>, <|"date" -> DateObject[{2024, 1, 18}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 83, "matches played" -> 99, "goals" -> 
        113, "assists" -> 68, "auto goals" -> 3, "winrate" -> 
        0.494949494949495, "goal average" -> 1.1414141414141414`, 
        "assist average" -> 0.6868686868686869, "auto goal average" -> 
        0.030303030303030304`, "wins" -> 49, "losses" -> 33, "ties" -> 17, 
        "MMR" -> 1175.398890110729, "winstreak" -> 3, "losing streak" -> 0, 
        "last match played" -> "2024-01-11", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1175.398890110729, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 3, "rank auto goal average" -> 8, "debt" -> 
        10, "SR" -> 1358.7554951810848`, "rank SR" -> 2, "season rank" -> 
        "Saphire", "season goals" -> 19, "season rank goals" -> 3, 
        "season assists" -> 11, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 11, "season rank attendance" -> 3, 
        "season wins" -> 7, "season rank wins" -> 1, "season losses" -> 3, 
        "season rank losses" -> 5, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6363636363636364, "season rank winrate" -> 4,
         "season goal average" -> 1.7272727272727273`, 
        "season rank goal average" -> 4, "season assist average" -> 1., 
        "season rank assist average" -> 5, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 2, "season matches played" -> 11, 
        "season rank matches played" -> 3, "season MVP goal" -> 1, 
        "season rank MVP goal" -> 3, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1358.7554951810848`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        1|>, <|"date" -> DateObject[{2024, 1, 25}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 84, "matches played" -> 100, 
        "goals" -> 115, "assists" -> 69, "auto goals" -> 3, "winrate" -> 0.5, 
        "goal average" -> 1.15, "assist average" -> 0.69, "auto goal average" -> 
        0.03, "wins" -> 50, "losses" -> 33, "ties" -> 17, "MMR" -> 
        1175.73519490227, "winstreak" -> 4, "losing streak" -> 0, 
        "last match played" -> "2024-01-18", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1175.73519490227, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 3, "rank auto goal average" -> 8, "debt" -> 
        12, "SR" -> 1412.9116096344048`, "rank SR" -> 2, "season rank" -> 
        "Ruby", "season goals" -> 21, "season rank goals" -> 2, 
        "season assists" -> 12, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 12, "season rank attendance" -> 3, 
        "season wins" -> 8, "season rank wins" -> 1, "season losses" -> 3, 
        "season rank losses" -> 5, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 3,
         "season goal average" -> 1.75, "season rank goal average" -> 4, 
        "season assist average" -> 1., "season rank assist average" -> 5, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 12, "season rank matches played" -> 3, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 3, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1412.9116096344048`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        0|>, <|"date" -> DateObject[{2024, 1, 26}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 85, "matches played" -> 101, 
        "goals" -> 118, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.504950495049505, "goal average" -> 1.1683168316831682`, 
        "assist average" -> 0.7029702970297029, "auto goal average" -> 
        0.0297029702970297, "wins" -> 51, "losses" -> 33, "ties" -> 17, "MMR" -> 
        1176.125083306234, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-01-25", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 7, "debt" -> 
        14, "SR" -> 1507.931818445917, "rank SR" -> 1, "season rank" -> 
        "Diamond", "season goals" -> 24, "season rank goals" -> 1, 
        "season assists" -> 14, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 13, "season rank attendance" -> 3, 
        "season wins" -> 9, "season rank wins" -> 1, "season losses" -> 3, 
        "season rank losses" -> 6, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6923076923076923, "season rank winrate" -> 3,
         "season goal average" -> 1.8461538461538463`, 
        "season rank goal average" -> 4, "season assist average" -> 
        1.0769230769230769`, "season rank assist average" -> 5, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        3, "season matches played" -> 13, "season rank matches played" -> 3, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 3, 
        "season MVP assist" -> 3, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1507.931818445917, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 3, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        1, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        1|>, <|"date" -> DateObject[{2024, 1, 27}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 85, "matches played" -> 101, 
        "goals" -> 118, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.504950495049505, "goal average" -> 1.1683168316831682`, 
        "assist average" -> 0.7029702970297029, "auto goal average" -> 
        0.0297029702970297, "wins" -> 51, "losses" -> 33, "ties" -> 17, "MMR" -> 
        1176.125083306234, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-01-25", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 7, "debt" -> 
        33, "SR" -> 0., "rank SR" -> 0, "season rank" -> "Unranked", 
        "season goals" -> 0, "season rank goals" -> 0, "season assists" -> 0, 
        "season rank assists" -> 0, "season auto goals" -> 0, 
        "season rank auto goals" -> 0, "season attendance" -> 0, 
        "season rank attendance" -> 0, "season wins" -> 0, "season rank wins" -> 
        0, "season losses" -> 0, "season rank losses" -> 0, "season ties" -> 
        0, "season rank ties" -> 0, "season winrate" -> 0., 
        "season rank winrate" -> 0, "season goal average" -> 0., 
        "season rank goal average" -> 0, "season assist average" -> 0., 
        "season rank assist average" -> 0, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 0, "season matches played" -> 0, 
        "season rank matches played" -> 0, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 0, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 0, "season highest SR" -> 0., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 0, 
        "season weeks on top" -> 0, "season rank weeks on top" -> 0, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> "",
         "season change" -> Missing["Empty"]|>, <|
       "date" -> DateObject[{2024, 2, 1}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 85, "matches played" -> 101, 
        "goals" -> 118, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.504950495049505, "goal average" -> 1.1683168316831682`, 
        "assist average" -> 0.7029702970297029, "auto goal average" -> 
        0.0297029702970297, "wins" -> 51, "losses" -> 33, "ties" -> 17, "MMR" -> 
        1176.125083306234, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-01-25", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 7, "debt" -> 
        33, "SR" -> 0., "rank SR" -> 1, "season rank" -> "Unranked", 
        "season goals" -> 0, "season rank goals" -> 1, "season assists" -> 0, 
        "season rank assists" -> 1, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 0, 
        "season rank attendance" -> 1, "season wins" -> 0, "season rank wins" -> 
        1, "season losses" -> 0, "season rank losses" -> 1, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0., 
        "season rank winrate" -> 1, "season goal average" -> 0., 
        "season rank goal average" -> 1, "season assist average" -> 0., 
        "season rank assist average" -> 1, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 0, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 1, "season highest SR" -> 0., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 1, 
        "season consecutive weeks on top" -> 1, "season worst teammate" -> 
        "Bla\[ZHacek].Danijel.Miha.Matej.Matev\[ZHacek].Bert.Kris.Judez.Domen.\
Luka.\[CapitalCHacek]rt.Luka. .Brin.Lan.\[CapitalZHacek]ak.Mark.Vid.\
\[CapitalZHacek]iga", "season change" -> Missing["Unrecognized", "U"]|>, <|
       "date" -> DateObject[{2024, 2, 15}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 86, "matches played" -> 102, 
        "goals" -> 118, "assists" -> 71, "auto goals" -> 3, "winrate" -> 0.5, 
        "goal average" -> 1.1568627450980393`, "assist average" -> 
        0.696078431372549, "auto goal average" -> 0.029411764705882353`, 
        "wins" -> 51, "losses" -> 34, "ties" -> 17, "MMR" -> 
        1175.8496347251803`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2024-02-01", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        35, "SR" -> 979., "rank SR" -> 11, "season rank" -> "Bronze", 
        "season goals" -> 0, "season rank goals" -> 3, "season assists" -> 0, 
        "season rank assists" -> 2, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 1, 
        "season rank attendance" -> 1, "season wins" -> 0, "season rank wins" -> 
        2, "season losses" -> 1, "season rank losses" -> 1, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0., 
        "season rank winrate" -> 2, "season goal average" -> 0., 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 2, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 1, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 979., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 2, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> 
        "\[CapitalZHacek]an", "season change" -> 
        Missing["Unrecognized", "N"]|>, <|
       "date" -> DateObject[{2024, 2, 29}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 87, "matches played" -> 103, 
        "goals" -> 119, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.49514563106796117`, "goal average" -> 1.1553398058252426`, 
        "assist average" -> 0.6893203883495146, "auto goal average" -> 
        0.02912621359223301, "wins" -> 51, "losses" -> 34, "ties" -> 18, 
        "MMR" -> 1175.6232723750295`, "winstreak" -> 0, "losing streak" -> 0, 
        "last match played" -> "2024-02-15", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        37, "SR" -> 989., "rank SR" -> 12, "season rank" -> "Bronze", 
        "season goals" -> 1, "season rank goals" -> 2, "season assists" -> 0, 
        "season rank assists" -> 3, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 2, 
        "season rank attendance" -> 1, "season wins" -> 0, "season rank wins" -> 
        2, "season losses" -> 1, "season rank losses" -> 1, "season ties" -> 
        1, "season rank ties" -> 1, "season winrate" -> 0., 
        "season rank winrate" -> 3, "season goal average" -> 0.5, 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 4, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 2, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 989., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 2, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> 
        "\[CapitalZHacek]an", "season change" -> -1|>, <|
       "date" -> DateObject[{2024, 3, 7}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 88, "matches played" -> 104, 
        "goals" -> 120, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.49038461538461536`, "goal average" -> 1.1538461538461537`, 
        "assist average" -> 0.6826923076923077, "auto goal average" -> 
        0.028846153846153848`, "wins" -> 51, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1175.3597983888667`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2024-02-29", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        39, "SR" -> 983.8222971204058, "rank SR" -> 16, "season rank" -> 
        "Bronze", "season goals" -> 2, "season rank goals" -> 2, 
        "season assists" -> 0, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 3, "season rank attendance" -> 1, 
        "season wins" -> 0, "season rank wins" -> 3, "season losses" -> 2, 
        "season rank losses" -> 1, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0., "season rank winrate" -> 5, 
        "season goal average" -> 0.6666666666666666, 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 4, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 3, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 989., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 3, 
        "season consecutive weeks on top" -> 0, "season worst teammate" -> 
        "\[CapitalZHacek]an", "season change" -> -4|>, <|
       "date" -> DateObject[{2024, 3, 14}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 89, "matches played" -> 105, 
        "goals" -> 122, "assists" -> 72, "auto goals" -> 3, "winrate" -> 
        0.49523809523809526`, "goal average" -> 1.161904761904762, 
        "assist average" -> 0.6857142857142857, "auto goal average" -> 
        0.02857142857142857, "wins" -> 52, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1175.689598912582, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2024-03-07", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 7, "debt" -> 
        41, "SR" -> 1031.6937242626122`, "rank SR" -> 7, "season rank" -> 
        "Silver", "season goals" -> 4, "season rank goals" -> 1, 
        "season assists" -> 1, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 4, "season rank attendance" -> 1, 
        "season wins" -> 1, "season rank wins" -> 3, "season losses" -> 2, 
        "season rank losses" -> 1, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.25, "season rank winrate" -> 6, 
        "season goal average" -> 1., "season rank goal average" -> 2, 
        "season assist average" -> 0.25, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 4, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1031.6937242626122`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        9|>, <|"date" -> DateObject[{2024, 3, 21}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 90, "matches played" -> 106, 
        "goals" -> 123, "assists" -> 73, "auto goals" -> 3, "winrate" -> 0.5, 
        "goal average" -> 1.1603773584905661`, "assist average" -> 
        0.6886792452830188, "auto goal average" -> 0.02830188679245283, 
        "wins" -> 53, "losses" -> 35, "ties" -> 18, "MMR" -> 
        1107.1109128003761`, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2024-03-14", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        43, "SR" -> 1068.5141034600138`, "rank SR" -> 4, "season rank" -> 
        "Silver", "season goals" -> 5, "season rank goals" -> 2, 
        "season assists" -> 2, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 5, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 2, "season losses" -> 2, 
        "season rank losses" -> 2, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.4, "season rank winrate" -> 6, 
        "season goal average" -> 1., "season rank goal average" -> 3, 
        "season assist average" -> 0.4, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 5, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1068.5141034600138`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        3|>, <|"date" -> DateObject[{2024, 3, 28}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 91, "matches played" -> 107, 
        "goals" -> 124, "assists" -> 73, "auto goals" -> 3, "winrate" -> 
        0.5046728971962616, "goal average" -> 1.158878504672897, 
        "assist average" -> 0.6822429906542056, "auto goal average" -> 
        0.028037383177570093`, "wins" -> 54, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1144.563874415614, "winstreak" -> 3, "losing streak" -> 0, 
        "last match played" -> "2024-03-21", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        45, "SR" -> 1105.4003495671116`, "rank SR" -> 3, "season rank" -> 
        "Gold", "season goals" -> 6, "season rank goals" -> 2, 
        "season assists" -> 2, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 6, "season rank attendance" -> 1, 
        "season wins" -> 3, "season rank wins" -> 2, "season losses" -> 2, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 4, 
        "season goal average" -> 1., "season rank goal average" -> 3, 
        "season assist average" -> 0.3333333333333333, 
        "season rank assist average" -> 6, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 2, "season matches played" -> 6, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 3, "season highest SR" -> 
        1105.4003495671116`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season worst teammate" -> "", "season change" -> 1|>, <|
       "date" -> DateObject[{2024, 4, 4}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 92, "matches played" -> 108, 
        "goals" -> 129, "assists" -> 76, "auto goals" -> 3, "winrate" -> 
        0.5092592592592593, "goal average" -> 1.1944444444444444`, 
        "assist average" -> 0.7037037037037037, "auto goal average" -> 
        0.027777777777777776`, "wins" -> 55, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1146.6829920522669`, "winstreak" -> 4, "losing streak" -> 0, 
        "last match played" -> "2024-03-28", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        47, "SR" -> 1225.8613062430065`, "rank SR" -> 1, "season rank" -> 
        "Platinum", "season goals" -> 11, "season rank goals" -> 1, 
        "season assists" -> 5, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 7, "season rank attendance" -> 1, 
        "season wins" -> 4, "season rank wins" -> 2, "season losses" -> 2, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5714285714285714, "season rank winrate" -> 5,
         "season goal average" -> 1.5714285714285714`, 
        "season rank goal average" -> 3, "season assist average" -> 
        0.7142857142857143, "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 7, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1225.8613062430065`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        1, "season worst teammate" -> "", "season change" -> 2|>, <|
       "date" -> DateObject[{2024, 4, 11}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 93, "matches played" -> 109, 
        "goals" -> 132, "assists" -> 77, "auto goals" -> 3, "winrate" -> 
        0.5137614678899083, "goal average" -> 1.2110091743119267`, 
        "assist average" -> 0.7064220183486238, "auto goal average" -> 
        0.027522935779816515`, "wins" -> 56, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1147.7788832364058`, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-04-04", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 2, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        49, "SR" -> 1301.3281445148002`, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 14, "season rank goals" -> 1, 
        "season assists" -> 6, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 8, "season rank attendance" -> 1, 
        "season wins" -> 5, "season rank wins" -> 1, "season losses" -> 2, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.625, "season rank winrate" -> 3, 
        "season goal average" -> 1.75, "season rank goal average" -> 1, 
        "season assist average" -> 0.75, "season rank assist average" -> 5, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 8, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1301.3281445148002`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 3, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        2, "season worst teammate" -> "", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 4, 18}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 94, "matches played" -> 110, 
        "goals" -> 135, "assists" -> 77, "auto goals" -> 3, "winrate" -> 
        0.509090909090909, "goal average" -> 1.2272727272727273`, 
        "assist average" -> 0.7, "auto goal average" -> 0.02727272727272727, 
        "wins" -> 56, "losses" -> 36, "ties" -> 18, "MMR" -> 
        1147.750055674562, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2024-04-11", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 2, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        51, "SR" -> 1321.5914111032416`, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 17, "season rank goals" -> 1, 
        "season assists" -> 6, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 9, "season rank attendance" -> 1, 
        "season wins" -> 5, "season rank wins" -> 2, "season losses" -> 3, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5555555555555556, "season rank winrate" -> 5,
         "season goal average" -> 1.8888888888888888`, 
        "season rank goal average" -> 1, "season assist average" -> 
        0.6666666666666666, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 9, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1321.5914111032416`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 4, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        3, "season worst teammate" -> "", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 4, 25}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 95, "matches played" -> 111, 
        "goals" -> 136, "assists" -> 80, "auto goals" -> 4, "winrate" -> 
        0.5045045045045045, "goal average" -> 1.2252252252252251`, 
        "assist average" -> 0.7207207207207207, "auto goal average" -> 
        0.036036036036036036`, "wins" -> 56, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1147.4098050462865`, "winstreak" -> 0, "losing streak" -> 2, 
        "last match played" -> "2024-04-18", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 4, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        53, "SR" -> 1351.484910104925, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 18, "season rank goals" -> 1, 
        "season assists" -> 9, "season rank assists" -> 3, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 10, "season rank attendance" -> 1, 
        "season wins" -> 5, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 2, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 6, 
        "season goal average" -> 1.8, "season rank goal average" -> 3, 
        "season assist average" -> 0.9, "season rank assist average" -> 6, 
        "season auto goal average" -> 0.1, "season rank auto goal average" -> 
        2, "season matches played" -> 10, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 4, 
        "season highest SR" -> 1351.484910104925, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 5, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        4, "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 9}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 96, "matches played" -> 112, 
        "goals" -> 137, "assists" -> 82, "auto goals" -> 4, "winrate" -> 
        0.5089285714285714, "goal average" -> 1.2232142857142858`, 
        "assist average" -> 0.7321428571428571, "auto goal average" -> 
        0.03571428571428571, "wins" -> 57, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1148.0023047822133`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2024-04-25", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 4, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        55, "SR" -> 1389.617808634477, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 19, "season rank goals" -> 1, 
        "season assists" -> 11, "season rank assists" -> 3, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 11, "season rank attendance" -> 1, 
        "season wins" -> 6, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5454545454545454, "season rank winrate" -> 7,
         "season goal average" -> 1.7272727272727273`, 
        "season rank goal average" -> 3, "season assist average" -> 1., 
        "season rank assist average" -> 5, "season auto goal average" -> 
        0.09090909090909091, "season rank auto goal average" -> 2, 
        "season matches played" -> 11, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1389.617808634477, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 6, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        5, "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 16}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 97, "matches played" -> 113, 
        "goals" -> 138, "assists" -> 86, "auto goals" -> 4, "winrate" -> 
        0.5132743362831859, "goal average" -> 1.2212389380530972`, 
        "assist average" -> 0.7610619469026548, "auto goal average" -> 
        0.035398230088495575`, "wins" -> 58, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1148.884550834122, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2024-05-09", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 5, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        57, "SR" -> 1466.9585845439526`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 20, "season rank goals" -> 1, 
        "season assists" -> 15, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 12, "season rank attendance" -> 1, 
        "season wins" -> 7, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5833333333333334, "season rank winrate" -> 5,
         "season goal average" -> 1.6666666666666667`, 
        "season rank goal average" -> 4, "season assist average" -> 1.25, 
        "season rank assist average" -> 5, "season auto goal average" -> 
        0.08333333333333333, "season rank auto goal average" -> 3, 
        "season matches played" -> 12, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1466.9585845439526`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 7, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        6, "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 23}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 98, "matches played" -> 114, 
        "goals" -> 141, "assists" -> 86, "auto goals" -> 4, "winrate" -> 
        0.5175438596491229, "goal average" -> 1.236842105263158, 
        "assist average" -> 0.7543859649122807, "auto goal average" -> 
        0.03508771929824561, "wins" -> 59, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1149.7445386886957`, "winstreak" -> 3, "losing streak" -> 0, 
        "last match played" -> "2024-05-16", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 5, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 5, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        59, "SR" -> 1523.4875277166352`, "rank SR" -> 1, "season rank" -> 
        "Diamond", "season goals" -> 23, "season rank goals" -> 1, 
        "season assists" -> 15, "season rank assists" -> 2, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 13, "season rank attendance" -> 1, 
        "season wins" -> 8, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6153846153846154, "season rank winrate" -> 3,
         "season goal average" -> 1.7692307692307692`, 
        "season rank goal average" -> 5, "season assist average" -> 
        1.1538461538461537`, "season rank assist average" -> 4, 
        "season auto goal average" -> 0.07692307692307693, 
        "season rank auto goal average" -> 3, "season matches played" -> 13, 
        "season rank matches played" -> 1, "season MVP goal" -> 1, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 2, "season highest SR" -> 
        1523.4875277166352`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 8, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        7, "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 30}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 99, "matches played" -> 115, 
        "goals" -> 141, "assists" -> 89, "auto goals" -> 4, "winrate" -> 
        0.5217391304347826, "goal average" -> 1.2260869565217392`, 
        "assist average" -> 0.7739130434782608, "auto goal average" -> 
        0.034782608695652174`, "wins" -> 60, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1150.1426602595711`, "winstreak" -> 4, "losing streak" -> 0, 
        "last match played" -> "2024-05-23", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 5, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 6, 
        "rank assist average" -> 3, "rank auto goal average" -> 9, "debt" -> 
        61, "SR" -> 1564.3917203529359`, "rank SR" -> 1, "season rank" -> 
        "Diamond", "season goals" -> 23, "season rank goals" -> 1, 
        "season assists" -> 18, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 14, "season rank attendance" -> 1, 
        "season wins" -> 9, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6428571428571429, "season rank winrate" -> 3,
         "season goal average" -> 1.6428571428571428`, 
        "season rank goal average" -> 5, "season assist average" -> 
        1.2857142857142858`, "season rank assist average" -> 4, 
        "season auto goal average" -> 0.07142857142857142, 
        "season rank auto goal average" -> 3, "season matches played" -> 14, 
        "season rank matches played" -> 1, "season MVP goal" -> 1, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 3, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1564.3917203529359`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 9, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        8, "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 6, 6}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 100, "matches played" -> 116, 
        "goals" -> 145, "assists" -> 91, "auto goals" -> 4, "winrate" -> 
        0.5258620689655172, "goal average" -> 1.25, "assist average" -> 
        0.7844827586206896, "auto goal average" -> 0.034482758620689655`, 
        "wins" -> 61, "losses" -> 37, "ties" -> 18, "MMR" -> 
        1151.5447446229637`, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-05-30", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1673.0077518975959`, 
        "highest MMR" -> 1176.125083306234, "rank goals" -> 1, "rank assists" -> 
        1, "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 5, 
        "rank assist average" -> 3, "rank auto goal average" -> 9, "debt" -> 
        63, "SR" -> 1673.0077518975959`, "rank SR" -> 1, "season rank" -> 
        "Diamond", "season goals" -> 27, "season rank goals" -> 1, 
        "season assists" -> 20, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 15, "season rank attendance" -> 1, 
        "season wins" -> 10, "season rank wins" -> 1, "season losses" -> 4, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 3,
         "season goal average" -> 1.8, "season rank goal average" -> 5, 
        "season assist average" -> 1.3333333333333333`, 
        "season rank assist average" -> 3, "season auto goal average" -> 
        0.06666666666666667, "season rank auto goal average" -> 3, 
        "season matches played" -> 15, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 4, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1673.0077518975959`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 10, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        9, "season worst teammate" -> "Miha", "season change" -> 0|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "date"} -> 1, {All, "id"} -> 
        1, {All, "name"} -> 1, {All, "attendance"} -> 
        1, {All, "matches played"} -> 1, {All, "goals"} -> 
        1, {All, "assists"} -> 1, {All, "auto goals"} -> 1, {All, "winrate"} -> 
        1, {All, "goal average"} -> 1, {All, "assist average"} -> 
        1, {All, "auto goal average"} -> 1, {All, "wins"} -> 
        1, {All, "losses"} -> 1, {All, "ties"} -> 1, {All, "MMR"} -> 
        1, {All, "winstreak"} -> 1, {All, "losing streak"} -> 
        1, {All, "last match played"} -> 1, {All, "tournaments won"} -> 
        1, {All, "weeks on top"} -> 1, {All, "highest SR"} -> 
        1, {All, "highest MMR"} -> 1, {All, "rank goals"} -> 
        1, {All, "rank assists"} -> 1, {All, "rank auto goals"} -> 
        1, {All, "rank winrate"} -> 1, {All, "rank wins"} -> 
        1, {All, "rank losses"} -> 1, {All, "rank ties"} -> 
        1, {All, "rank MMR"} -> 1, {All, "rank tournaments won"} -> 
        1, {All, "rank attendance"} -> 1, {All, "rank matches played"} -> 
        1, {All, "rank goal average"} -> 1, {All, "rank assist average"} -> 
        1, {All, "rank auto goal average"} -> 1, {All, "debt"} -> 
        1, {All, "SR"} -> 1, {All, "rank SR"} -> 1, {All, "season rank"} -> 
        1, {All, "season goals"} -> 1, {All, "season rank goals"} -> 
        1, {All, "season assists"} -> 1, {All, "season rank assists"} -> 
        1, {All, "season auto goals"} -> 1, {All, "season rank auto goals"} -> 
        1, {All, "season attendance"} -> 1, {All, "season rank attendance"} -> 
        1, {All, "season wins"} -> 1, {All, "season rank wins"} -> 
        1, {All, "season losses"} -> 1, {All, "season rank losses"} -> 
        1, {All, "season ties"} -> 1, {All, "season rank ties"} -> 
        1, {All, "season winrate"} -> 1, {All, "season rank winrate"} -> 
        1, {All, "season goal average"} -> 
        1, {All, "season rank goal average"} -> 
        1, {All, "season assist average"} -> 
        1, {All, "season rank assist average"} -> 
        1, {All, "season auto goal average"} -> 
        1, {All, "season rank auto goal average"} -> 
        1, {All, "season matches played"} -> 
        1, {All, "season rank matches played"} -> 1, {All, "season MVP goal"} -> 
        1, {All, "season rank MVP goal"} -> 1, {All, "season MVP assist"} -> 
        1, {All, "season rank MVP assist"} -> 1, {All, "season highest SR"} -> 
        1, {All, "season tournaments won"} -> 
        1, {All, "season rank tournaments won"} -> 
        1, {All, "season weeks on top"} -> 
        1, {All, "season rank weeks on top"} -> 
        1, {All, "season consecutive weeks on top"} -> 
        1, {All, "season worst teammate"} -> 1, {All, "season change"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "date" -> TypeSystem`PackageScope`AtomShape[75], "id" -> 
            TypeSystem`PackageScope`AtomShape[34], "name" -> 
            TypeSystem`PackageScope`AtomShape[63.], "attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "assists" -> 
            TypeSystem`PackageScope`AtomShape[34], "auto goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "winrate" -> 
            TypeSystem`PackageScope`AtomShape[60], "goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], "auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "wins" -> 
            TypeSystem`PackageScope`AtomShape[34], "losses" -> 
            TypeSystem`PackageScope`AtomShape[34], "ties" -> 
            TypeSystem`PackageScope`AtomShape[34], "MMR" -> 
            TypeSystem`PackageScope`AtomShape[60], "winstreak" -> 
            TypeSystem`PackageScope`AtomShape[34], "losing streak" -> 
            TypeSystem`PackageScope`AtomShape[34], "last match played" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "tournaments won" -> TypeSystem`PackageScope`AtomShape[34], 
            "weeks on top" -> TypeSystem`PackageScope`AtomShape[34], 
            "highest SR" -> TypeSystem`PackageScope`AtomShape[60], 
            "highest MMR" -> TypeSystem`PackageScope`AtomShape[60], 
            "rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank ties" -> TypeSystem`PackageScope`AtomShape[34], "rank MMR" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "debt" -> 
            TypeSystem`PackageScope`AtomShape[34], "SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "rank SR" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "season goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank auto goals" -> TypeSystem`PackageScope`AtomShape[34],
             "season attendance" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank attendance" -> TypeSystem`PackageScope`AtomShape[34],
             "season wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season winrate" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "season goal average" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season highest SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "season tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "season weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season consecutive weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season worst teammate" -> 
            TypeSystem`PackageScope`AtomShape[168.00000000000003`], 
            "season change" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "date", "id", "name", "attendance", "matches played", "goals", 
         "assists", "auto goals", "winrate", "goal average", "assist average",
          "auto goal average", "wins", "losses", "ties", "MMR", "winstreak", 
         "losing streak", "last match played", "tournaments won", 
         "weeks on top", "highest SR", "highest MMR", "rank goals", 
         "rank assists", "rank auto goals", "rank winrate", "rank wins", 
         "rank losses", "rank ties", "rank MMR", "rank tournaments won", 
         "rank attendance", "rank matches played", "rank goal average", 
         "rank assist average", "rank auto goal average", "debt", "SR", 
         "rank SR", "season rank", "season goals", "season rank goals", 
         "season assists", "season rank assists", "season auto goals", 
         "season rank auto goals", "season attendance", 
         "season rank attendance", "season wins", "season rank wins", 
         "season losses", "season rank losses", "season ties", 
         "season rank ties", "season winrate", "season rank winrate", 
         "season goal average", "season rank goal average", 
         "season assist average", "season rank assist average", 
         "season auto goal average", "season rank auto goal average", 
         "season matches played", "season rank matches played", 
         "season MVP goal", "season rank MVP goal", "season MVP assist", 
         "season rank MVP assist", "season highest SR", 
         "season tournaments won", "season rank tournaments won", 
         "season weeks on top", "season rank weeks on top", 
         "season consecutive weeks on top", "season worst teammate", 
         "season change"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Ga\[SHacek]per"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 72], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "date"} -> 1, {All, "id"} -> 
        1, {All, "name"} -> 1, {All, "attendance"} -> 
        1, {All, "matches played"} -> 1, {All, "goals"} -> 
        1, {All, "assists"} -> 1, {All, "auto goals"} -> 1, {All, "winrate"} -> 
        1, {All, "goal average"} -> 1, {All, "assist average"} -> 
        1, {All, "auto goal average"} -> 1, {All, "wins"} -> 
        1, {All, "losses"} -> 1, {All, "ties"} -> 1, {All, "MMR"} -> 
        1, {All, "winstreak"} -> 1, {All, "losing streak"} -> 
        1, {All, "last match played"} -> 1, {All, "tournaments won"} -> 
        1, {All, "weeks on top"} -> 1, {All, "highest SR"} -> 
        1, {All, "highest MMR"} -> 1, {All, "rank goals"} -> 
        1, {All, "rank assists"} -> 1, {All, "rank auto goals"} -> 
        1, {All, "rank winrate"} -> 1, {All, "rank wins"} -> 
        1, {All, "rank losses"} -> 1, {All, "rank ties"} -> 
        1, {All, "rank MMR"} -> 1, {All, "rank tournaments won"} -> 
        1, {All, "rank attendance"} -> 1, {All, "rank matches played"} -> 
        1, {All, "rank goal average"} -> 1, {All, "rank assist average"} -> 
        1, {All, "rank auto goal average"} -> 1, {All, "debt"} -> 
        1, {All, "SR"} -> 1, {All, "rank SR"} -> 1, {All, "season rank"} -> 
        1, {All, "season goals"} -> 1, {All, "season rank goals"} -> 
        1, {All, "season assists"} -> 1, {All, "season rank assists"} -> 
        1, {All, "season auto goals"} -> 1, {All, "season rank auto goals"} -> 
        1, {All, "season attendance"} -> 1, {All, "season rank attendance"} -> 
        1, {All, "season wins"} -> 1, {All, "season rank wins"} -> 
        1, {All, "season losses"} -> 1, {All, "season rank losses"} -> 
        1, {All, "season ties"} -> 1, {All, "season rank ties"} -> 
        1, {All, "season winrate"} -> 1, {All, "season rank winrate"} -> 
        1, {All, "season goal average"} -> 
        1, {All, "season rank goal average"} -> 
        1, {All, "season assist average"} -> 
        1, {All, "season rank assist average"} -> 
        1, {All, "season auto goal average"} -> 
        1, {All, "season rank auto goal average"} -> 
        1, {All, "season matches played"} -> 
        1, {All, "season rank matches played"} -> 1, {All, "season MVP goal"} -> 
        1, {All, "season rank MVP goal"} -> 1, {All, "season MVP assist"} -> 
        1, {All, "season rank MVP assist"} -> 1, {All, "season highest SR"} -> 
        1, {All, "season tournaments won"} -> 
        1, {All, "season rank tournaments won"} -> 
        1, {All, "season weeks on top"} -> 
        1, {All, "season rank weeks on top"} -> 
        1, {All, "season consecutive weeks on top"} -> 
        1, {All, "season worst teammate"} -> 1, {All, "season change"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "date" -> TypeSystem`PackageScope`AtomShape[75], "id" -> 
            TypeSystem`PackageScope`AtomShape[34], "name" -> 
            TypeSystem`PackageScope`AtomShape[63.], "attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "assists" -> 
            TypeSystem`PackageScope`AtomShape[34], "auto goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "winrate" -> 
            TypeSystem`PackageScope`AtomShape[60], "goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], "auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "wins" -> 
            TypeSystem`PackageScope`AtomShape[34], "losses" -> 
            TypeSystem`PackageScope`AtomShape[34], "ties" -> 
            TypeSystem`PackageScope`AtomShape[34], "MMR" -> 
            TypeSystem`PackageScope`AtomShape[60], "winstreak" -> 
            TypeSystem`PackageScope`AtomShape[34], "losing streak" -> 
            TypeSystem`PackageScope`AtomShape[34], "last match played" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "tournaments won" -> TypeSystem`PackageScope`AtomShape[34], 
            "weeks on top" -> TypeSystem`PackageScope`AtomShape[34], 
            "highest SR" -> TypeSystem`PackageScope`AtomShape[60], 
            "highest MMR" -> TypeSystem`PackageScope`AtomShape[60], 
            "rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank ties" -> TypeSystem`PackageScope`AtomShape[34], "rank MMR" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "debt" -> 
            TypeSystem`PackageScope`AtomShape[34], "SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "rank SR" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "season goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank auto goals" -> TypeSystem`PackageScope`AtomShape[34],
             "season attendance" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank attendance" -> TypeSystem`PackageScope`AtomShape[34],
             "season wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season winrate" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "season goal average" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season highest SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "season tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "season weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season consecutive weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season worst teammate" -> 
            TypeSystem`PackageScope`AtomShape[168.00000000000003`], 
            "season change" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "date", "id", "name", "attendance", "matches played", "goals", 
         "assists", "auto goals", "winrate", "goal average", "assist average",
          "auto goal average", "wins", "losses", "ties", "MMR", "winstreak", 
         "losing streak", "last match played", "tournaments won", 
         "weeks on top", "highest SR", "highest MMR", "rank goals", 
         "rank assists", "rank auto goals", "rank winrate", "rank wins", 
         "rank losses", "rank ties", "rank MMR", "rank tournaments won", 
         "rank attendance", "rank matches played", "rank goal average", 
         "rank assist average", "rank auto goal average", "debt", "SR", 
         "rank SR", "season rank", "season goals", "season rank goals", 
         "season assists", "season rank assists", "season auto goals", 
         "season rank auto goals", "season attendance", 
         "season rank attendance", "season wins", "season rank wins", 
         "season losses", "season rank losses", "season ties", 
         "season rank ties", "season winrate", "season rank winrate", 
         "season goal average", "season rank goal average", 
         "season assist average", "season rank assist average", 
         "season auto goal average", "season rank auto goal average", 
         "season matches played", "season rank matches played", 
         "season MVP goal", "season rank MVP goal", "season MVP assist", 
         "season rank MVP assist", "season highest SR", 
         "season tournaments won", "season rank tournaments won", 
         "season weeks on top", "season rank weeks on top", 
         "season consecutive weeks on top", "season worst teammate", 
         "season change"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Ga\[SHacek]per"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 72], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 72, 
     "DataColumnCount" -> 77, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 51, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season rank wins", 
                  Style[
                  "season rank wins", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season rank wins"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season rank wins"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season losses", 
                  Style[
                  "season losses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season losses"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season losses"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season rank losses", 
                  Style[
                  "season rank losses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season rank losses"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season rank losses"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season ties", 
                  Style[
                  "season ties", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season ties"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season ties"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season rank ties", 
                  Style[
                  "season rank ties", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season rank ties"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season rank ties"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season winrate", 
                  Style[
                  "season winrate", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season winrate"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season winrate"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season rank winrate", 
                  Style[
                  "season rank winrate", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season rank winrate"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season rank winrate"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season goal average", 
                  Style[
                  "season goal average", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season goal average"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season goal average"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season rank goal average", 
                  Style[
                  "season rank goal average", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season rank goal average"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season rank goal average"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["season assist average", 
                  Style[
                  "season assist average", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "season assist average"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "season assist average"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.666667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.333333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.714286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.57143"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.571429"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.666667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.44444"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.666667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.727273"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.81818"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.909091"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.666667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.916667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.615385"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.69231"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.846154"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.571429"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.64286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.785714"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.533333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.733333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5625"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6875"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.529412"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.52941"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.647059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.529412"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.58824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.647059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.611111"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.526316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.42105"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.736842"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season rank wins"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season rank losses"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season rank ties"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season rank winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season rank goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["season assist average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[72, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[72, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 77, 1], {1, 77 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 77, 1], {1, 77 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 51, "\[Dash]", 60, " of ", 
                    Style[77, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 51, "\[Dash]", 60, " of ", 
                    Style[77, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 77, 1], {1, 77 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 77, 1], {1, 77 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1149., {309.13403309800196`, 314.86596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1149., {309.13403309800196`, 314.86596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.926860563213823*^9, 3.926861180448837*^9, 
  3.926950212293907*^9, 3.9270153007067757`*^9, 3.9270230145056877`*^9, 
  3.9270280948841*^9, 3.9270286070814686`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"d7c2648f-ea65-5d41-a3d3-959dc496c471"]
}, Open  ]],

Cell["\<\
Najbolj nas bo zanimalo dogajanje v trenutni sezoni (februar 2024 - julij \
2024). Zato lahko datumsko gledamo le zapise, ki so mlaj\[SHacek]i od 1. \
januarja 2024. Bomo pa pogledali tudi dogajanje skozi celotno zgodovino \
zbiranja.\
\>", "Text",
 CellChangeTimes->{{3.9268557528656254`*^9, 3.926855901615076*^9}, {
  3.92685607264814*^9, 3.926856135209377*^9}, {3.926958744459959*^9, 
  3.926958751354517*^9}},ExpressionUUID->"f76597bf-a223-2b45-bd74-\
bf42b7fe396a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"obdobje", " ", "=", " ", 
   RowBox[{"DateRange", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2024", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2024", ",", "7", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PX", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2024", ",", "2", ",", "1"}], "}"}], "]"}], "<=", "#\"date\"", 
     "<=", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.926855925528393*^9, 3.926855929293358*^9}, {
  3.926856526283188*^9, 3.9268565510829716`*^9}, {3.926859797266012*^9, 
  3.9268597974377785`*^9}, {3.92686059157712*^9, 3.926860592118202*^9}, {
  3.926861158550808*^9, 3.926861158807883*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"aef036b4-a160-df4d-9c44-11449dacf41e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "date" -> DateObject[{2024, 2, 1}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 85, "matches played" -> 101, 
        "goals" -> 118, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.504950495049505, "goal average" -> 1.1683168316831682`, 
        "assist average" -> 0.7029702970297029, "auto goal average" -> 
        0.0297029702970297, "wins" -> 51, "losses" -> 33, "ties" -> 17, "MMR" -> 
        1176.125083306234, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-01-25", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 7, "debt" -> 
        33, "SR" -> 0., "rank SR" -> 1, "season rank" -> "Unranked", 
        "season goals" -> 0, "season rank goals" -> 1, "season assists" -> 0, 
        "season rank assists" -> 1, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 0, 
        "season rank attendance" -> 1, "season wins" -> 0, "season rank wins" -> 
        1, "season losses" -> 0, "season rank losses" -> 1, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0., 
        "season rank winrate" -> 1, "season goal average" -> 0., 
        "season rank goal average" -> 1, "season assist average" -> 0., 
        "season rank assist average" -> 1, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 0, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 1, "season highest SR" -> 0., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 1, 
        "season consecutive weeks on top" -> 1, "season best teammate" -> 
        "Miha.Matej.Bert.Kris.Judez.Domen.\[CapitalCHacek]rt.\[CapitalZHacek]\
an.Lan.Mark.Vid.\[CapitalZHacek]iga", "season worst teammate" -> 
        "Bla\[ZHacek].Danijel.Miha.Matej.Matev\[ZHacek].Bert.Kris.Judez.Domen.\
Luka.\[CapitalCHacek]rt.Luka. .Brin.Lan.\[CapitalZHacek]ak.Mark.Vid.\
\[CapitalZHacek]iga", "season change" -> Missing["Unrecognized", "U"]|>, <|
       "date" -> DateObject[{2024, 2, 15}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 86, "matches played" -> 102, 
        "goals" -> 118, "assists" -> 71, "auto goals" -> 3, "winrate" -> 0.5, 
        "goal average" -> 1.1568627450980393`, "assist average" -> 
        0.696078431372549, "auto goal average" -> 0.029411764705882353`, 
        "wins" -> 51, "losses" -> 34, "ties" -> 17, "MMR" -> 
        1175.8496347251803`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2024-02-01", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        35, "SR" -> 979., "rank SR" -> 11, "season rank" -> "Bronze", 
        "season goals" -> 0, "season rank goals" -> 3, "season assists" -> 0, 
        "season rank assists" -> 2, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 1, 
        "season rank attendance" -> 1, "season wins" -> 0, "season rank wins" -> 
        2, "season losses" -> 1, "season rank losses" -> 1, "season ties" -> 
        0, "season rank ties" -> 1, "season winrate" -> 0., 
        "season rank winrate" -> 2, "season goal average" -> 0., 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 2, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 1, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 979., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 2, 
        "season consecutive weeks on top" -> 0, "season best teammate" -> 
        "Miha.Matej.Bert.Kris.Judez.Domen.\[CapitalCHacek]rt.\[CapitalZHacek]\
an.Lan.Mark.Vid.\[CapitalZHacek]iga", "season worst teammate" -> 
        "\[CapitalZHacek]an", "season change" -> 
        Missing["Unrecognized", "N"]|>, <|
       "date" -> DateObject[{2024, 2, 29}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 87, "matches played" -> 103, 
        "goals" -> 119, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.49514563106796117`, "goal average" -> 1.1553398058252426`, 
        "assist average" -> 0.6893203883495146, "auto goal average" -> 
        0.02912621359223301, "wins" -> 51, "losses" -> 34, "ties" -> 18, 
        "MMR" -> 1175.6232723750295`, "winstreak" -> 0, "losing streak" -> 0, 
        "last match played" -> "2024-02-15", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        37, "SR" -> 989., "rank SR" -> 12, "season rank" -> "Bronze", 
        "season goals" -> 1, "season rank goals" -> 2, "season assists" -> 0, 
        "season rank assists" -> 3, "season auto goals" -> 0, 
        "season rank auto goals" -> 1, "season attendance" -> 2, 
        "season rank attendance" -> 1, "season wins" -> 0, "season rank wins" -> 
        2, "season losses" -> 1, "season rank losses" -> 1, "season ties" -> 
        1, "season rank ties" -> 1, "season winrate" -> 0., 
        "season rank winrate" -> 3, "season goal average" -> 0.5, 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 4, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 2, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 989., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 2, 
        "season consecutive weeks on top" -> 0, "season best teammate" -> 
        "Miha.Matej.Bert.Kris.Judez.Domen.\[CapitalCHacek]rt.\[CapitalZHacek]\
an.Lan.Mark.Vid.\[CapitalZHacek]iga", "season worst teammate" -> 
        "\[CapitalZHacek]an", "season change" -> -1|>, <|
       "date" -> DateObject[{2024, 3, 7}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 88, "matches played" -> 104, 
        "goals" -> 120, "assists" -> 71, "auto goals" -> 3, "winrate" -> 
        0.49038461538461536`, "goal average" -> 1.1538461538461537`, 
        "assist average" -> 0.6826923076923077, "auto goal average" -> 
        0.028846153846153848`, "wins" -> 51, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1175.3597983888667`, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2024-02-29", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        39, "SR" -> 983.8222971204058, "rank SR" -> 16, "season rank" -> 
        "Bronze", "season goals" -> 2, "season rank goals" -> 2, 
        "season assists" -> 0, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 3, "season rank attendance" -> 1, 
        "season wins" -> 0, "season rank wins" -> 3, "season losses" -> 2, 
        "season rank losses" -> 1, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0., "season rank winrate" -> 5, 
        "season goal average" -> 0.6666666666666666, 
        "season rank goal average" -> 3, "season assist average" -> 0., 
        "season rank assist average" -> 4, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 1, "season matches played" -> 3, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 2, "season highest SR" -> 989., 
        "season tournaments won" -> 0, "season rank tournaments won" -> 1, 
        "season weeks on top" -> 1, "season rank weeks on top" -> 3, 
        "season consecutive weeks on top" -> 0, "season best teammate" -> 
        "Miha.Matej.Bert.Kris.Judez.Domen.\[CapitalCHacek]rt.\[CapitalZHacek]\
an.Lan.Mark.Vid.\[CapitalZHacek]iga", "season worst teammate" -> 
        "\[CapitalZHacek]an", "season change" -> -4|>, <|
       "date" -> DateObject[{2024, 3, 14}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 89, "matches played" -> 105, 
        "goals" -> 122, "assists" -> 72, "auto goals" -> 3, "winrate" -> 
        0.49523809523809526`, "goal average" -> 1.161904761904762, 
        "assist average" -> 0.6857142857142857, "auto goal average" -> 
        0.02857142857142857, "wins" -> 52, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1175.689598912582, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2024-03-07", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 4, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 7, "debt" -> 
        41, "SR" -> 1031.6937242626122`, "rank SR" -> 7, "season rank" -> 
        "Silver", "season goals" -> 4, "season rank goals" -> 1, 
        "season assists" -> 1, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 1, 
        "season attendance" -> 4, "season rank attendance" -> 1, 
        "season wins" -> 1, "season rank wins" -> 3, "season losses" -> 2, 
        "season rank losses" -> 1, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.25, "season rank winrate" -> 6, 
        "season goal average" -> 1., "season rank goal average" -> 2, 
        "season assist average" -> 0.25, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        1, "season matches played" -> 4, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1031.6937242626122`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        9|>, <|"date" -> DateObject[{2024, 3, 21}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 90, "matches played" -> 106, 
        "goals" -> 123, "assists" -> 73, "auto goals" -> 3, "winrate" -> 0.5, 
        "goal average" -> 1.1603773584905661`, "assist average" -> 
        0.6886792452830188, "auto goal average" -> 0.02830188679245283, 
        "wins" -> 53, "losses" -> 35, "ties" -> 18, "MMR" -> 
        1107.1109128003761`, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2024-03-14", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 3, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        43, "SR" -> 1068.5141034600138`, "rank SR" -> 4, "season rank" -> 
        "Silver", "season goals" -> 5, "season rank goals" -> 2, 
        "season assists" -> 2, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 5, "season rank attendance" -> 1, 
        "season wins" -> 2, "season rank wins" -> 2, "season losses" -> 2, 
        "season rank losses" -> 2, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.4, "season rank winrate" -> 6, 
        "season goal average" -> 1., "season rank goal average" -> 3, 
        "season assist average" -> 0.4, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 5, "season rank matches played" -> 1, 
        "season MVP goal" -> 0, "season rank MVP goal" -> 2, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1068.5141034600138`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        0, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "\[CapitalZHacek]an", "season change" -> 
        3|>, <|"date" -> DateObject[{2024, 3, 28}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 91, "matches played" -> 107, 
        "goals" -> 124, "assists" -> 73, "auto goals" -> 3, "winrate" -> 
        0.5046728971962616, "goal average" -> 1.158878504672897, 
        "assist average" -> 0.6822429906542056, "auto goal average" -> 
        0.028037383177570093`, "wins" -> 54, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1144.563874415614, "winstreak" -> 3, "losing streak" -> 0, 
        "last match played" -> "2024-03-21", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 3, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        45, "SR" -> 1105.4003495671116`, "rank SR" -> 3, "season rank" -> 
        "Gold", "season goals" -> 6, "season rank goals" -> 2, 
        "season assists" -> 2, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 6, "season rank attendance" -> 1, 
        "season wins" -> 3, "season rank wins" -> 2, "season losses" -> 2, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 4, 
        "season goal average" -> 1., "season rank goal average" -> 3, 
        "season assist average" -> 0.3333333333333333, 
        "season rank assist average" -> 6, "season auto goal average" -> 0., 
        "season rank auto goal average" -> 2, "season matches played" -> 6, 
        "season rank matches played" -> 1, "season MVP goal" -> 0, 
        "season rank MVP goal" -> 2, "season MVP assist" -> 0, 
        "season rank MVP assist" -> 3, "season highest SR" -> 
        1105.4003495671116`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 1, 
        "season rank weeks on top" -> 4, "season consecutive weeks on top" -> 
        0, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "", "season change" -> 1|>, <|
       "date" -> DateObject[{2024, 4, 4}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 92, "matches played" -> 108, 
        "goals" -> 129, "assists" -> 76, "auto goals" -> 3, "winrate" -> 
        0.5092592592592593, "goal average" -> 1.1944444444444444`, 
        "assist average" -> 0.7037037037037037, "auto goal average" -> 
        0.027777777777777776`, "wins" -> 55, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1146.6829920522669`, "winstreak" -> 4, "losing streak" -> 0, 
        "last match played" -> "2024-03-28", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        47, "SR" -> 1225.8613062430065`, "rank SR" -> 1, "season rank" -> 
        "Platinum", "season goals" -> 11, "season rank goals" -> 1, 
        "season assists" -> 5, "season rank assists" -> 3, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 7, "season rank attendance" -> 1, 
        "season wins" -> 4, "season rank wins" -> 2, "season losses" -> 2, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5714285714285714, "season rank winrate" -> 5,
         "season goal average" -> 1.5714285714285714`, 
        "season rank goal average" -> 3, "season assist average" -> 
        0.7142857142857143, "season rank assist average" -> 4, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 7, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1225.8613062430065`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 2, 
        "season rank weeks on top" -> 3, "season consecutive weeks on top" -> 
        1, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "", "season change" -> 2|>, <|
       "date" -> DateObject[{2024, 4, 11}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 93, "matches played" -> 109, 
        "goals" -> 132, "assists" -> 77, "auto goals" -> 3, "winrate" -> 
        0.5137614678899083, "goal average" -> 1.2110091743119267`, 
        "assist average" -> 0.7064220183486238, "auto goal average" -> 
        0.027522935779816515`, "wins" -> 56, "losses" -> 35, "ties" -> 18, 
        "MMR" -> 1147.7788832364058`, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-04-04", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 2, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        49, "SR" -> 1301.3281445148002`, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 14, "season rank goals" -> 1, 
        "season assists" -> 6, "season rank assists" -> 2, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 8, "season rank attendance" -> 1, 
        "season wins" -> 5, "season rank wins" -> 1, "season losses" -> 2, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.625, "season rank winrate" -> 3, 
        "season goal average" -> 1.75, "season rank goal average" -> 1, 
        "season assist average" -> 0.75, "season rank assist average" -> 5, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 8, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1301.3281445148002`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 3, 
        "season rank weeks on top" -> 2, "season consecutive weeks on top" -> 
        2, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 4, 18}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 94, "matches played" -> 110, 
        "goals" -> 135, "assists" -> 77, "auto goals" -> 3, "winrate" -> 
        0.509090909090909, "goal average" -> 1.2272727272727273`, 
        "assist average" -> 0.7, "auto goal average" -> 0.02727272727272727, 
        "wins" -> 56, "losses" -> 36, "ties" -> 18, "MMR" -> 
        1147.750055674562, "winstreak" -> 0, "losing streak" -> 1, 
        "last match played" -> "2024-04-11", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 2, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 3, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        51, "SR" -> 1321.5914111032416`, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 17, "season rank goals" -> 1, 
        "season assists" -> 6, "season rank assists" -> 4, 
        "season auto goals" -> 0, "season rank auto goals" -> 2, 
        "season attendance" -> 9, "season rank attendance" -> 1, 
        "season wins" -> 5, "season rank wins" -> 2, "season losses" -> 3, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5555555555555556, "season rank winrate" -> 5,
         "season goal average" -> 1.8888888888888888`, 
        "season rank goal average" -> 1, "season assist average" -> 
        0.6666666666666666, "season rank assist average" -> 6, 
        "season auto goal average" -> 0., "season rank auto goal average" -> 
        2, "season matches played" -> 9, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1321.5914111032416`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 4, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        3, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 4, 25}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 95, "matches played" -> 111, 
        "goals" -> 136, "assists" -> 80, "auto goals" -> 4, "winrate" -> 
        0.5045045045045045, "goal average" -> 1.2252252252252251`, 
        "assist average" -> 0.7207207207207207, "auto goal average" -> 
        0.036036036036036036`, "wins" -> 56, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1147.4098050462865`, "winstreak" -> 0, "losing streak" -> 2, 
        "last match played" -> "2024-04-18", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 4, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        53, "SR" -> 1351.484910104925, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 18, "season rank goals" -> 1, 
        "season assists" -> 9, "season rank assists" -> 3, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 10, "season rank attendance" -> 1, 
        "season wins" -> 5, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 2, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5, "season rank winrate" -> 6, 
        "season goal average" -> 1.8, "season rank goal average" -> 3, 
        "season assist average" -> 0.9, "season rank assist average" -> 6, 
        "season auto goal average" -> 0.1, "season rank auto goal average" -> 
        2, "season matches played" -> 10, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 0, "season rank MVP assist" -> 4, 
        "season highest SR" -> 1351.484910104925, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 5, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        4, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 9}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 96, "matches played" -> 112, 
        "goals" -> 137, "assists" -> 82, "auto goals" -> 4, "winrate" -> 
        0.5089285714285714, "goal average" -> 1.2232142857142858`, 
        "assist average" -> 0.7321428571428571, "auto goal average" -> 
        0.03571428571428571, "wins" -> 57, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1148.0023047822133`, "winstreak" -> 1, "losing streak" -> 0, 
        "last match played" -> "2024-04-25", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 4, 
        "rank assist average" -> 4, "rank auto goal average" -> 8, "debt" -> 
        55, "SR" -> 1389.617808634477, "rank SR" -> 1, "season rank" -> 
        "Saphire", "season goals" -> 19, "season rank goals" -> 1, 
        "season assists" -> 11, "season rank assists" -> 3, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 11, "season rank attendance" -> 1, 
        "season wins" -> 6, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5454545454545454, "season rank winrate" -> 7,
         "season goal average" -> 1.7272727272727273`, 
        "season rank goal average" -> 3, "season assist average" -> 1., 
        "season rank assist average" -> 5, "season auto goal average" -> 
        0.09090909090909091, "season rank auto goal average" -> 2, 
        "season matches played" -> 11, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 1, "season rank MVP assist" -> 3, 
        "season highest SR" -> 1389.617808634477, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 6, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        5, "season best teammate" -> "Danijel.Matev\[ZHacek].Luka. .Brin", 
        "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 16}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 97, "matches played" -> 113, 
        "goals" -> 138, "assists" -> 86, "auto goals" -> 4, "winrate" -> 
        0.5132743362831859, "goal average" -> 1.2212389380530972`, 
        "assist average" -> 0.7610619469026548, "auto goal average" -> 
        0.035398230088495575`, "wins" -> 58, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1148.884550834122, "winstreak" -> 2, "losing streak" -> 0, 
        "last match played" -> "2024-05-09", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 5, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        57, "SR" -> 1466.9585845439526`, "rank SR" -> 1, "season rank" -> 
        "Ruby", "season goals" -> 20, "season rank goals" -> 1, 
        "season assists" -> 15, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 12, "season rank attendance" -> 1, 
        "season wins" -> 7, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.5833333333333334, "season rank winrate" -> 5,
         "season goal average" -> 1.6666666666666667`, 
        "season rank goal average" -> 4, "season assist average" -> 1.25, 
        "season rank assist average" -> 5, "season auto goal average" -> 
        0.08333333333333333, "season rank auto goal average" -> 3, 
        "season matches played" -> 12, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 2, "season rank MVP assist" -> 2, 
        "season highest SR" -> 1466.9585845439526`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 7, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        6, "season best teammate" -> 
        "Danijel.Matev\[ZHacek].Luka. .Brin.Evgen.Filip Jakob", 
        "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 23}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 98, "matches played" -> 114, 
        "goals" -> 141, "assists" -> 86, "auto goals" -> 4, "winrate" -> 
        0.5175438596491229, "goal average" -> 1.236842105263158, 
        "assist average" -> 0.7543859649122807, "auto goal average" -> 
        0.03508771929824561, "wins" -> 59, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1149.7445386886957`, "winstreak" -> 3, "losing streak" -> 0, 
        "last match played" -> "2024-05-16", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 4, "rank ties" -> 1, "rank MMR" -> 5, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 5, 
        "rank assist average" -> 4, "rank auto goal average" -> 9, "debt" -> 
        59, "SR" -> 1523.4875277166352`, "rank SR" -> 1, "season rank" -> 
        "Diamond", "season goals" -> 23, "season rank goals" -> 1, 
        "season assists" -> 15, "season rank assists" -> 2, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 13, "season rank attendance" -> 1, 
        "season wins" -> 8, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 3, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6153846153846154, "season rank winrate" -> 3,
         "season goal average" -> 1.7692307692307692`, 
        "season rank goal average" -> 5, "season assist average" -> 
        1.1538461538461537`, "season rank assist average" -> 4, 
        "season auto goal average" -> 0.07692307692307693, 
        "season rank auto goal average" -> 3, "season matches played" -> 13, 
        "season rank matches played" -> 1, "season MVP goal" -> 1, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 2, 
        "season rank MVP assist" -> 2, "season highest SR" -> 
        1523.4875277166352`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 8, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        7, "season best teammate" -> 
        "Danijel.Matev\[ZHacek].Luka. .Brin.Evgen.Filip Jakob", 
        "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 5, 30}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 99, "matches played" -> 115, 
        "goals" -> 141, "assists" -> 89, "auto goals" -> 4, "winrate" -> 
        0.5217391304347826, "goal average" -> 1.2260869565217392`, 
        "assist average" -> 0.7739130434782608, "auto goal average" -> 
        0.034782608695652174`, "wins" -> 60, "losses" -> 37, "ties" -> 18, 
        "MMR" -> 1150.1426602595711`, "winstreak" -> 4, "losing streak" -> 0, 
        "last match played" -> "2024-05-23", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1569.043056480874, "highest MMR" -> 
        1176.125083306234, "rank goals" -> 1, "rank assists" -> 1, 
        "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 5, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 6, 
        "rank assist average" -> 3, "rank auto goal average" -> 9, "debt" -> 
        61, "SR" -> 1564.3917203529359`, "rank SR" -> 1, "season rank" -> 
        "Diamond", "season goals" -> 23, "season rank goals" -> 1, 
        "season assists" -> 18, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 14, "season rank attendance" -> 1, 
        "season wins" -> 9, "season rank wins" -> 2, "season losses" -> 4, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6428571428571429, "season rank winrate" -> 3,
         "season goal average" -> 1.6428571428571428`, 
        "season rank goal average" -> 5, "season assist average" -> 
        1.2857142857142858`, "season rank assist average" -> 4, 
        "season auto goal average" -> 0.07142857142857142, 
        "season rank auto goal average" -> 3, "season matches played" -> 14, 
        "season rank matches played" -> 1, "season MVP goal" -> 1, 
        "season rank MVP goal" -> 1, "season MVP assist" -> 3, 
        "season rank MVP assist" -> 1, "season highest SR" -> 
        1564.3917203529359`, "season tournaments won" -> 0, 
        "season rank tournaments won" -> 1, "season weeks on top" -> 9, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        8, "season best teammate" -> 
        "Danijel.Matev\[ZHacek].Luka. .Brin.Evgen.Filip Jakob", 
        "season worst teammate" -> "Miha", "season change" -> 0|>, <|
       "date" -> DateObject[{2024, 6, 6}, "Day"], "id" -> 8, "name" -> 
        "Ga\[SHacek]per", "attendance" -> 100, "matches played" -> 116, 
        "goals" -> 145, "assists" -> 91, "auto goals" -> 4, "winrate" -> 
        0.5258620689655172, "goal average" -> 1.25, "assist average" -> 
        0.7844827586206896, "auto goal average" -> 0.034482758620689655`, 
        "wins" -> 61, "losses" -> 37, "ties" -> 18, "MMR" -> 
        1151.5447446229637`, "winstreak" -> 5, "losing streak" -> 0, 
        "last match played" -> "2024-05-30", "tournaments won" -> 3, 
        "weeks on top" -> 5, "highest SR" -> 1673.0077518975959`, 
        "highest MMR" -> 1176.125083306234, "rank goals" -> 1, "rank assists" -> 
        1, "rank auto goals" -> 1, "rank winrate" -> 2, "rank wins" -> 1, 
        "rank losses" -> 3, "rank ties" -> 1, "rank MMR" -> 4, 
        "rank tournaments won" -> 1, "rank attendance" -> 1, 
        "rank matches played" -> 1, "rank goal average" -> 5, 
        "rank assist average" -> 3, "rank auto goal average" -> 9, "debt" -> 
        63, "SR" -> 1673.0077518975959`, "rank SR" -> 1, "season rank" -> 
        "Diamond", "season goals" -> 27, "season rank goals" -> 1, 
        "season assists" -> 20, "season rank assists" -> 1, 
        "season auto goals" -> 1, "season rank auto goals" -> 2, 
        "season attendance" -> 15, "season rank attendance" -> 1, 
        "season wins" -> 10, "season rank wins" -> 1, "season losses" -> 4, 
        "season rank losses" -> 4, "season ties" -> 1, "season rank ties" -> 
        1, "season winrate" -> 0.6666666666666666, "season rank winrate" -> 3,
         "season goal average" -> 1.8, "season rank goal average" -> 5, 
        "season assist average" -> 1.3333333333333333`, 
        "season rank assist average" -> 3, "season auto goal average" -> 
        0.06666666666666667, "season rank auto goal average" -> 3, 
        "season matches played" -> 15, "season rank matches played" -> 1, 
        "season MVP goal" -> 1, "season rank MVP goal" -> 1, 
        "season MVP assist" -> 4, "season rank MVP assist" -> 1, 
        "season highest SR" -> 1673.0077518975959`, "season tournaments won" -> 
        0, "season rank tournaments won" -> 1, "season weeks on top" -> 10, 
        "season rank weeks on top" -> 1, "season consecutive weeks on top" -> 
        9, "season best teammate" -> 
        "Danijel.Matev\[ZHacek].Luka. .Brin.Evgen.Filip Jakob", 
        "season worst teammate" -> "Miha", "season change" -> 0|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "date"} -> 1, {All, "id"} -> 
        1, {All, "name"} -> 1, {All, "attendance"} -> 
        1, {All, "matches played"} -> 1, {All, "goals"} -> 
        1, {All, "assists"} -> 1, {All, "auto goals"} -> 1, {All, "winrate"} -> 
        1, {All, "goal average"} -> 1, {All, "assist average"} -> 
        1, {All, "auto goal average"} -> 1, {All, "wins"} -> 
        1, {All, "losses"} -> 1, {All, "ties"} -> 1, {All, "MMR"} -> 
        1, {All, "winstreak"} -> 1, {All, "losing streak"} -> 
        1, {All, "last match played"} -> 1, {All, "tournaments won"} -> 
        1, {All, "weeks on top"} -> 1, {All, "highest SR"} -> 
        1, {All, "highest MMR"} -> 1, {All, "rank goals"} -> 
        1, {All, "rank assists"} -> 1, {All, "rank auto goals"} -> 
        1, {All, "rank winrate"} -> 1, {All, "rank wins"} -> 
        1, {All, "rank losses"} -> 1, {All, "rank ties"} -> 
        1, {All, "rank MMR"} -> 1, {All, "rank tournaments won"} -> 
        1, {All, "rank attendance"} -> 1, {All, "rank matches played"} -> 
        1, {All, "rank goal average"} -> 1, {All, "rank assist average"} -> 
        1, {All, "rank auto goal average"} -> 1, {All, "debt"} -> 
        1, {All, "SR"} -> 1, {All, "rank SR"} -> 1, {All, "season rank"} -> 
        1, {All, "season goals"} -> 1, {All, "season rank goals"} -> 
        1, {All, "season assists"} -> 1, {All, "season rank assists"} -> 
        1, {All, "season auto goals"} -> 1, {All, "season rank auto goals"} -> 
        1, {All, "season attendance"} -> 1, {All, "season rank attendance"} -> 
        1, {All, "season wins"} -> 1, {All, "season rank wins"} -> 
        1, {All, "season losses"} -> 1, {All, "season rank losses"} -> 
        1, {All, "season ties"} -> 1, {All, "season rank ties"} -> 
        1, {All, "season winrate"} -> 1, {All, "season rank winrate"} -> 
        1, {All, "season goal average"} -> 
        1, {All, "season rank goal average"} -> 
        1, {All, "season assist average"} -> 
        1, {All, "season rank assist average"} -> 
        1, {All, "season auto goal average"} -> 
        1, {All, "season rank auto goal average"} -> 
        1, {All, "season matches played"} -> 
        1, {All, "season rank matches played"} -> 1, {All, "season MVP goal"} -> 
        1, {All, "season rank MVP goal"} -> 1, {All, "season MVP assist"} -> 
        1, {All, "season rank MVP assist"} -> 1, {All, "season highest SR"} -> 
        1, {All, "season tournaments won"} -> 
        1, {All, "season rank tournaments won"} -> 
        1, {All, "season weeks on top"} -> 
        1, {All, "season rank weeks on top"} -> 
        1, {All, "season consecutive weeks on top"} -> 
        1, {All, "season best teammate"} -> 1, {All, "season worst teammate"} -> 
        1, {All, "season change"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "date" -> TypeSystem`PackageScope`AtomShape[75], "id" -> 
            TypeSystem`PackageScope`AtomShape[34], "name" -> 
            TypeSystem`PackageScope`AtomShape[63.], "attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "assists" -> 
            TypeSystem`PackageScope`AtomShape[34], "auto goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "winrate" -> 
            TypeSystem`PackageScope`AtomShape[60], "goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], "auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "wins" -> 
            TypeSystem`PackageScope`AtomShape[34], "losses" -> 
            TypeSystem`PackageScope`AtomShape[34], "ties" -> 
            TypeSystem`PackageScope`AtomShape[34], "MMR" -> 
            TypeSystem`PackageScope`AtomShape[60], "winstreak" -> 
            TypeSystem`PackageScope`AtomShape[34], "losing streak" -> 
            TypeSystem`PackageScope`AtomShape[34], "last match played" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "tournaments won" -> TypeSystem`PackageScope`AtomShape[34], 
            "weeks on top" -> TypeSystem`PackageScope`AtomShape[34], 
            "highest SR" -> TypeSystem`PackageScope`AtomShape[60], 
            "highest MMR" -> TypeSystem`PackageScope`AtomShape[60], 
            "rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank ties" -> TypeSystem`PackageScope`AtomShape[34], "rank MMR" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "debt" -> 
            TypeSystem`PackageScope`AtomShape[34], "SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "rank SR" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "season goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank auto goals" -> TypeSystem`PackageScope`AtomShape[34],
             "season attendance" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank attendance" -> TypeSystem`PackageScope`AtomShape[34],
             "season wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season winrate" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "season goal average" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season highest SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "season tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "season weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season consecutive weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season best teammate" -> 
            TypeSystem`PackageScope`AtomShape[609.], "season worst teammate" -> 
            TypeSystem`PackageScope`AtomShape[997.5], "season change" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "date", "id", "name", "attendance", "matches played", "goals", 
         "assists", "auto goals", "winrate", "goal average", "assist average",
          "auto goal average", "wins", "losses", "ties", "MMR", "winstreak", 
         "losing streak", "last match played", "tournaments won", 
         "weeks on top", "highest SR", "highest MMR", "rank goals", 
         "rank assists", "rank auto goals", "rank winrate", "rank wins", 
         "rank losses", "rank ties", "rank MMR", "rank tournaments won", 
         "rank attendance", "rank matches played", "rank goal average", 
         "rank assist average", "rank auto goal average", "debt", "SR", 
         "rank SR", "season rank", "season goals", "season rank goals", 
         "season assists", "season rank assists", "season auto goals", 
         "season rank auto goals", "season attendance", 
         "season rank attendance", "season wins", "season rank wins", 
         "season losses", "season rank losses", "season ties", 
         "season rank ties", "season winrate", "season rank winrate", 
         "season goal average", "season rank goal average", 
         "season assist average", "season rank assist average", 
         "season auto goal average", "season rank auto goal average", 
         "season matches played", "season rank matches played", 
         "season MVP goal", "season rank MVP goal", "season MVP assist", 
         "season rank MVP assist", "season highest SR", 
         "season tournaments won", "season rank tournaments won", 
         "season weeks on top", "season rank weeks on top", 
         "season consecutive weeks on top", "season best teammate", 
         "season worst teammate", "season change"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Ga\[SHacek]per"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Danijel.Matev\[ZHacek].Luka. .Brin", 
           "Danijel.Matev\[ZHacek].Luka. .Brin.Evgen.Filip Jakob", 
           "Miha.Matej.Bert.Kris.Judez.Domen.\[CapitalCHacek]rt.\
\[CapitalZHacek]an.Lan.Mark.Vid.\[CapitalZHacek]iga"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "", "Bla\[ZHacek].Danijel.Miha.Matej.Matev\[ZHacek].Bert.Kris.Judez.\
Domen.Luka.\[CapitalCHacek]rt.Luka. .Brin.Lan.\[CapitalZHacek]ak.Mark.Vid.\
\[CapitalZHacek]iga", "Miha", "\[CapitalZHacek]an"]], 
         TypeSystem`Atom[Integer]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "date"} -> 1, {All, "id"} -> 
        1, {All, "name"} -> 1, {All, "attendance"} -> 
        1, {All, "matches played"} -> 1, {All, "goals"} -> 
        1, {All, "assists"} -> 1, {All, "auto goals"} -> 1, {All, "winrate"} -> 
        1, {All, "goal average"} -> 1, {All, "assist average"} -> 
        1, {All, "auto goal average"} -> 1, {All, "wins"} -> 
        1, {All, "losses"} -> 1, {All, "ties"} -> 1, {All, "MMR"} -> 
        1, {All, "winstreak"} -> 1, {All, "losing streak"} -> 
        1, {All, "last match played"} -> 1, {All, "tournaments won"} -> 
        1, {All, "weeks on top"} -> 1, {All, "highest SR"} -> 
        1, {All, "highest MMR"} -> 1, {All, "rank goals"} -> 
        1, {All, "rank assists"} -> 1, {All, "rank auto goals"} -> 
        1, {All, "rank winrate"} -> 1, {All, "rank wins"} -> 
        1, {All, "rank losses"} -> 1, {All, "rank ties"} -> 
        1, {All, "rank MMR"} -> 1, {All, "rank tournaments won"} -> 
        1, {All, "rank attendance"} -> 1, {All, "rank matches played"} -> 
        1, {All, "rank goal average"} -> 1, {All, "rank assist average"} -> 
        1, {All, "rank auto goal average"} -> 1, {All, "debt"} -> 
        1, {All, "SR"} -> 1, {All, "rank SR"} -> 1, {All, "season rank"} -> 
        1, {All, "season goals"} -> 1, {All, "season rank goals"} -> 
        1, {All, "season assists"} -> 1, {All, "season rank assists"} -> 
        1, {All, "season auto goals"} -> 1, {All, "season rank auto goals"} -> 
        1, {All, "season attendance"} -> 1, {All, "season rank attendance"} -> 
        1, {All, "season wins"} -> 1, {All, "season rank wins"} -> 
        1, {All, "season losses"} -> 1, {All, "season rank losses"} -> 
        1, {All, "season ties"} -> 1, {All, "season rank ties"} -> 
        1, {All, "season winrate"} -> 1, {All, "season rank winrate"} -> 
        1, {All, "season goal average"} -> 
        1, {All, "season rank goal average"} -> 
        1, {All, "season assist average"} -> 
        1, {All, "season rank assist average"} -> 
        1, {All, "season auto goal average"} -> 
        1, {All, "season rank auto goal average"} -> 
        1, {All, "season matches played"} -> 
        1, {All, "season rank matches played"} -> 1, {All, "season MVP goal"} -> 
        1, {All, "season rank MVP goal"} -> 1, {All, "season MVP assist"} -> 
        1, {All, "season rank MVP assist"} -> 1, {All, "season highest SR"} -> 
        1, {All, "season tournaments won"} -> 
        1, {All, "season rank tournaments won"} -> 
        1, {All, "season weeks on top"} -> 
        1, {All, "season rank weeks on top"} -> 
        1, {All, "season consecutive weeks on top"} -> 
        1, {All, "season best teammate"} -> 1, {All, "season worst teammate"} -> 
        1, {All, "season change"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "date" -> TypeSystem`PackageScope`AtomShape[75], "id" -> 
            TypeSystem`PackageScope`AtomShape[34], "name" -> 
            TypeSystem`PackageScope`AtomShape[63.], "attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "assists" -> 
            TypeSystem`PackageScope`AtomShape[34], "auto goals" -> 
            TypeSystem`PackageScope`AtomShape[34], "winrate" -> 
            TypeSystem`PackageScope`AtomShape[60], "goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], "auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], "wins" -> 
            TypeSystem`PackageScope`AtomShape[34], "losses" -> 
            TypeSystem`PackageScope`AtomShape[34], "ties" -> 
            TypeSystem`PackageScope`AtomShape[34], "MMR" -> 
            TypeSystem`PackageScope`AtomShape[60], "winstreak" -> 
            TypeSystem`PackageScope`AtomShape[34], "losing streak" -> 
            TypeSystem`PackageScope`AtomShape[34], "last match played" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "tournaments won" -> TypeSystem`PackageScope`AtomShape[34], 
            "weeks on top" -> TypeSystem`PackageScope`AtomShape[34], 
            "highest SR" -> TypeSystem`PackageScope`AtomShape[60], 
            "highest MMR" -> TypeSystem`PackageScope`AtomShape[60], 
            "rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "rank ties" -> TypeSystem`PackageScope`AtomShape[34], "rank MMR" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank attendance" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "debt" -> 
            TypeSystem`PackageScope`AtomShape[34], "SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "rank SR" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "season goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank assists" -> TypeSystem`PackageScope`AtomShape[34], 
            "season auto goals" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank auto goals" -> TypeSystem`PackageScope`AtomShape[34],
             "season attendance" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank attendance" -> TypeSystem`PackageScope`AtomShape[34],
             "season wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank wins" -> TypeSystem`PackageScope`AtomShape[34], 
            "season losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank losses" -> TypeSystem`PackageScope`AtomShape[34], 
            "season ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season rank ties" -> TypeSystem`PackageScope`AtomShape[34], 
            "season winrate" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank winrate" -> TypeSystem`PackageScope`AtomShape[34], 
            "season goal average" -> TypeSystem`PackageScope`AtomShape[60], 
            "season rank goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season assist average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank assist average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "season rank auto goal average" -> 
            TypeSystem`PackageScope`AtomShape[34], "season matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank matches played" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP goal" -> 
            TypeSystem`PackageScope`AtomShape[34], "season MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank MVP assist" -> 
            TypeSystem`PackageScope`AtomShape[34], "season highest SR" -> 
            TypeSystem`PackageScope`AtomShape[60], "season tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season rank tournaments won" -> 
            TypeSystem`PackageScope`AtomShape[34], "season weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season rank weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "season consecutive weeks on top" -> 
            TypeSystem`PackageScope`AtomShape[34], "season best teammate" -> 
            TypeSystem`PackageScope`AtomShape[609.], "season worst teammate" -> 
            TypeSystem`PackageScope`AtomShape[997.5], "season change" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "date", "id", "name", "attendance", "matches played", "goals", 
         "assists", "auto goals", "winrate", "goal average", "assist average",
          "auto goal average", "wins", "losses", "ties", "MMR", "winstreak", 
         "losing streak", "last match played", "tournaments won", 
         "weeks on top", "highest SR", "highest MMR", "rank goals", 
         "rank assists", "rank auto goals", "rank winrate", "rank wins", 
         "rank losses", "rank ties", "rank MMR", "rank tournaments won", 
         "rank attendance", "rank matches played", "rank goal average", 
         "rank assist average", "rank auto goal average", "debt", "SR", 
         "rank SR", "season rank", "season goals", "season rank goals", 
         "season assists", "season rank assists", "season auto goals", 
         "season rank auto goals", "season attendance", 
         "season rank attendance", "season wins", "season rank wins", 
         "season losses", "season rank losses", "season ties", 
         "season rank ties", "season winrate", "season rank winrate", 
         "season goal average", "season rank goal average", 
         "season assist average", "season rank assist average", 
         "season auto goal average", "season rank auto goal average", 
         "season matches played", "season rank matches played", 
         "season MVP goal", "season rank MVP goal", "season MVP assist", 
         "season rank MVP assist", "season highest SR", 
         "season tournaments won", "season rank tournaments won", 
         "season weeks on top", "season rank weeks on top", 
         "season consecutive weeks on top", "season best teammate", 
         "season worst teammate", "season change"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Ga\[SHacek]per"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Danijel.Matev\[ZHacek].Luka. .Brin", 
           "Danijel.Matev\[ZHacek].Luka. .Brin.Evgen.Filip Jakob", 
           "Miha.Matej.Bert.Kris.Judez.Domen.\[CapitalCHacek]rt.\
\[CapitalZHacek]an.Lan.Mark.Vid.\[CapitalZHacek]iga"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "", "Bla\[ZHacek].Danijel.Miha.Matej.Matev\[ZHacek].Bert.Kris.Judez.\
Domen.Luka.\[CapitalCHacek]rt.Luka. .Brin.Lan.\[CapitalZHacek]ak.Mark.Vid.\
\[CapitalZHacek]iga", "Miha", "\[CapitalZHacek]an"]], 
         TypeSystem`Atom[Integer]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 10, "DataRowCount" -> 16, 
     "DataColumnCount" -> 78, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["attendance", 
                  Style[
                  "attendance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "attendance"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "attendance"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["matches played", 
                  Style[
                  "matches played", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "matches played"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "matches played"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["goals", 
                  Style[
                  "goals", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "goals"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "goals"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["assists", 
                  Style[
                  "assists", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "assists"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "assists"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["auto goals", 
                  Style[
                  "auto goals", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "auto goals"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "auto goals"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["winrate", 
                  Style[
                  "winrate", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "winrate"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "winrate"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["goal average", 
                  Style[
                  "goal average", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "goal average"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "goal average"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 1 Feb 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["118"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.50495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.16832"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 15 Feb 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["102"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["118"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.15686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 29 Feb 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["103"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.495146"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.15534"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 7 Mar 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.490385"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.15385"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 14 Mar 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["105"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["122"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.495238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1619"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 21 Mar 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["106"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["123"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.16038"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 28 Mar 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["107"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.504673"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.15888"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 4 Apr 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["129"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.509259"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.19444"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 11 Apr 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["109"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["132"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.513761"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.21101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 18 Apr 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["110"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["135"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.509091"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22727"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 25 Apr 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["111"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["136"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.504505"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 9 May 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.508929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22321"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 16 May 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["113"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["138"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.513274"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22124"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 23 May 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["114"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["141"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.517544"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23684"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 30 May 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["115"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["141"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.521739"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22609"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2024\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ga\[SHacek]per", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["attendance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["116"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["matches played"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["145"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["assists"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["auto goals"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.525862"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["winrate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["goal average"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 78, 1], {1, 78 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 78, 1], {1, 78 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[78, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[78, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 78, 1], {1, 78 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 78, 1], {1, 78 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{704., {255.13403309800196`, 260.86596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{704., {255.13403309800196`, 260.86596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9268596029820824`*^9, 3.926859806328518*^9, 3.926859899503341*^9, 
   3.926860179219291*^9, {3.926860570936645*^9, 3.926860596989401*^9}, {
   3.926861174836239*^9, 3.926861185225197*^9}, 3.926950213961378*^9, 
   3.927015301873516*^9, 3.927023016548006*^9, 3.927028095885126*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"afa5b09b-66d2-e345-bbab-a457fd25fe05"]
}, Open  ]],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"P0", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload0"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P1", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload1"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P3", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload3"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P4", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload4"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P7", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload7"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P8", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload8"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P10", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload10"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P11", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload11"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P12", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload12"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P13", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload13"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P14", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload14"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P16", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload16"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P28", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload28"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"P29", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
           RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
       "@", " ", "Upload29"}], ")"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
        "#\"date\"", "<=", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}], 
     "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"P33", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"Delete", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
            RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
            RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
            RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
            RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}],
         "@", " ", "Upload33"}], ")"}], "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "2", ",", "3"}], "}"}], "]"}], "<=", 
         "#\"date\"", "<=", 
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "7", ",", "1"}], "}"}], "]"}]}], "&"}], "]"}],
       "]"}]}], ";"}],
   FontSize->10], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeasonalFilter", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<id\>\"", ",", " ", "\"\<name\>\"", ",", "\"\<date\>\"", ",", 
     "\"\<SR\>\"", ",", "\"\<rank SR\>\"", ",", "\"\<season rank\>\"", ",", 
     "\"\<season goals\>\"", ",", "\"\<season rank goals\>\"", ",", 
     "\"\<season assists\>\"", ",", "\"\<season rank assists\>\"", ",", 
     "\"\<season auto goals\>\"", ",", "\"\<season rank auto goals\>\"", ",", 
     "\"\<season attendance\>\"", ",", "\"\<season rank attendance\>\"", ",", 
     "\"\<season wins\>\"", ",", "\"\<season rank wins\>\"", ",", 
     "\"\<season losses\>\"", ",", "\"\<season rank losses\>\"", ",", 
     "\"\<season ties\>\"", ",", "\"\<season rank ties\>\"", ",", 
     "\"\<season winrate\>\"", ",", "\"\<season rank winrate\>\"", ",", 
     "\"\<season goal average\>\"", ",", "\"\<season rank goal average\>\"", 
     ",", "\"\<season assist average\>\"", ",", 
     "\"\<season rank assist average\>\"", ",", 
     "\"\<season auto goal average\>\"", ",", 
     "\"\<season rank auto goal average\>\"", ",", 
     "\"\<season matches played\>\"", ",", 
     "\"\<season rank matches played\>\"", ",", "\"\<season MVP goal\>\"", 
     ",", "\"\<season rank MVP goal\>\"", ",", "\"\<season MVP assist\>\"", 
     ",", "\"\<season rank MVP assist\>\"", ",", "\"\<season highest SR\>\"", 
     ",", "\"\<season tournaments won\>\"", ",", 
     "\"\<season rank tournaments won\>\"", ",", 
     "\"\<season weeks on top\>\"", ",", "\"\<season rank weeks on top\>\"", 
     ",", "\"\<season consecutive weeks on top\>\"", ",", 
     "\"\<season change\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S0", " ", "=", " ", 
    RowBox[{
     RowBox[{"P0", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S1", " ", "=", " ", 
    RowBox[{
     RowBox[{"P1", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S3", " ", "=", " ", 
    RowBox[{
     RowBox[{"P3", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S4", " ", "=", " ", 
    RowBox[{
     RowBox[{"P4", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S7", " ", "=", " ", 
    RowBox[{
     RowBox[{"P7", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S8", " ", "=", " ", 
    RowBox[{
     RowBox[{"P8", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S10", " ", "=", " ", 
    RowBox[{
     RowBox[{"P10", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S11", " ", "=", " ", 
    RowBox[{
     RowBox[{"P11", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S12", " ", "=", " ", 
    RowBox[{
     RowBox[{"P12", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S13", " ", "=", " ", 
    RowBox[{
     RowBox[{"P13", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S14", " ", "=", " ", 
    RowBox[{
     RowBox[{"P14", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S16", " ", "=", " ", 
    RowBox[{
     RowBox[{"P16", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S28", " ", "=", " ", 
    RowBox[{
     RowBox[{"P28", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S29", " ", "=", " ", 
    RowBox[{
     RowBox[{"P29", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"S33", " ", "=", " ", 
    RowBox[{
     RowBox[{"P33", "[", 
      RowBox[{"All", ",", " ", "SeasonalFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10]}], "Input",
 CellChangeTimes->{{3.839505853354637*^9, 3.83950589455431*^9}, 
   3.839505958514421*^9, {3.8395887324436707`*^9, 3.839588761880923*^9}, {
   3.9268559173563747`*^9, 3.9268559215114174`*^9}, {3.926856167766943*^9, 
   3.9268562652852*^9}, {3.926856304701685*^9, 3.926856491640947*^9}, {
   3.926859250871187*^9, 3.926859258169527*^9}, {3.9268607493895187`*^9, 
   3.926860763806265*^9}, {3.926860909428146*^9, 3.926860934281252*^9}, {
   3.9268611654770126`*^9, 3.926861170841591*^9}, {3.926861509744142*^9, 
   3.926861669858551*^9}, {3.9268618098521576`*^9, 3.9268618153134823`*^9}, {
   3.92686185112669*^9, 3.92686216639673*^9}, {3.9268622077743683`*^9, 
   3.926862310579186*^9}, {3.9268623485060024`*^9, 3.9268625461431503`*^9}, {
   3.9268626622051525`*^9, 3.926862943432598*^9}, {3.9268630258733463`*^9, 
   3.926863062769167*^9}, {3.9268631045887*^9, 3.9268631242472363`*^9}, {
   3.9268632745163994`*^9, 3.926863306894256*^9}, {3.926909365925413*^9, 
   3.926909416264242*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"8a938246-2eb3-4a97-8020-03a61f8a12cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MMRFilter", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<id\>\"", ",", " ", "\"\<MMR\>\"", ",", "\"\<date\>\"", ",", " ", 
     "\"\<SR\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR0",
     FontWeight->"Bold"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload0"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR1",
     FontWeight->"Bold"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload1"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR3",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload3"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR4",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload4"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR7",
     FontWeight->"Bold"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload7"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR8",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload8"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR10",
     FontWeight->"Bold"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload10"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR11",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload11"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR12",
     FontWeight->"Bold"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload12"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR13",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload13"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR14",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload14"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR16",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload16"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR28",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload28"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR29",
     FontWeight->"Bold"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload29"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["MMR33",
     FontWeight->"Bold"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
             RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], 
          "]"}], "@", " ", "Upload33"}], ")"}], "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", "MMRFilter"}], "]"}], "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#\"SR\"", ">", "0"}], " ", "&"}], "]"}], "]"}]}], ";"}],
  FontSize->10], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.926927111241972*^9, 3.926927343288407*^9}, {
  3.926927625112078*^9, 3.926927627170599*^9}, {3.926949962978151*^9, 
  3.926949965620754*^9}, {3.926950002433817*^9, 3.926950102577551*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"f4d65961-5acf-434c-b894-cc0af8be7e2b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analiza podatkov", "Section",
 CellChangeTimes->{{3.8395145604294443`*^9, 3.839514567808257*^9}, {
  3.926858447903965*^9, 
  3.926858451228224*^9}},ExpressionUUID->"f5f2e843-577c-46bd-98a8-\
1bd63503ce2e"],

Cell[TextData[StyleBox["Najbolj nas zanimajo \[SHacek]tevilke, ki dolo\
\[CHacek]ajo oziroma predstavljajo u\[CHacek]inkovitost igralca - sezonska \
ocena / seasonal rating (SR).  Pogledali si bomo spreminjanje le-teh skozi \
\[CHacek]as od za\[CHacek]etka sezone pa vse do sedaj.",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8393470147867947`*^9, 3.839347014818797*^9}, 
   3.8393470452965403`*^9, {3.8394012018939085`*^9, 3.839401247418768*^9}, {
   3.839401282150918*^9, 3.839401284512053*^9}, {3.839401485589923*^9, 
   3.839401488288728*^9}, {3.8394367371870775`*^9, 3.8394367379370785`*^9}, {
   3.8394368479112697`*^9, 3.839436979256492*^9}, {3.8395727854321003`*^9, 
   3.8395727885209055`*^9}, {3.839588832455446*^9, 3.839588838289857*^9}, {
   3.839588875651922*^9, 3.8395889144959903`*^9}, {3.839589912404744*^9, 
   3.83958992126556*^9}, {3.926858456242552*^9, 
   3.926858750506279*^9}},ExpressionUUID->"6742afe0-1123-4aa6-9b87-\
99d6049036d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nabor", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S0", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S1", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S3", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S4", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S7", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S8", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S10", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S11", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S12", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S13", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S14", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S16", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S28", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S29", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"S33", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{"nabor", ",", "  ", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Seasonal Rating (SR)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", ",", "15"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", ",", "29"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "7"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "14"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "21"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "28"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "18"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "16"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "23"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "30"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "6", ",", "6"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1000", ",", "1050", ",", " ", "1100", ",", "1150", ",", " ", "1200", 
        ",", "1250", ",", " ", "1300", ",", "1350", ",", " ", "1400", ",", 
        "1450", ",", " ", "1500", ",", "1550", ",", " ", "1600", ",", "1650", 
        ",", " ", "1700", ",", " ", "1750"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Player ID: 0          \>\"", ",", "\"\<Player ID: 1\>\"", ",", 
      "\"\<Player ID: 3\>\"", ",", "\"\<Player ID: 4\>\"", ",", 
      "\"\<Player ID: 7\>\"", ",", "\"\<Player ID: 8\>\"", ",", 
      "\"\<Player ID: 10\>\"", ",", "\"\<Player ID: 11\>\"", ",", 
      "\"\<Player ID: 12\>\"", ",", "\"\<Player ID: 13\>\"", ",", 
      "\"\<Player ID: 14\>\"", ",", "\"\<Player ID: 16\>\"", ",", 
      "\"\<Player ID: 28\>\"", ",", "\"\<Player ID: 29\>\"", ",", 
      "\"\<Player ID: 33\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"Scaled", "[", "0.75", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Player ID: 0 \>\"", ",", "\"\<Player ID: 1 \>\"", ",", 
        "\"\<Player ID: 3 \>\"", ",", "\"\<Player ID: 4 \>\"", ",", 
        "\"\<Player ID: 7 \>\"", ",", "\"\<Player ID: 8 \>\"", ",", 
        "\"\<Player ID: 10\>\"", ",", "\"\<Player ID: 11\>\"", ",", 
        "\"\<Player ID: 12\>\"", ",", "\"\<Player ID: 13\>\"", ",", 
        "\"\<Player ID: 14\>\"", ",", "\"\<Player ID: 16\>\"", ",", 
        "\"\<Player ID: 28\>\"", ",", "\"\<Player ID: 29\>\"", ",", 
        "\"\<Player ID: 33\>\""}], "}"}], ",", " ", "Below"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Spreminjaje SR skozi \[CHacek]as za obdobje februar - junij \
2024\>\""}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
     "Red", ",", " ", "Green", ",", " ", "Blue", ",", " ", "Black", ",", " ", 
      "Gray", ",", " ", "Cyan", ",", " ", "Magenta", ",", " ", "Yellow", ",", 
      " ", "Brown", ",", " ", "Orange", ",", " ", "Pink", ",", " ", "Purple", 
      ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3", ",", "0", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3", ",", "0.3", ",", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.6", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", " ", "]"}]}], "Input",
 CellChangeTimes->{{3.9268588400160923`*^9, 3.926858865854286*^9}, {
   3.926859081127268*^9, 3.926859103306076*^9}, {3.926859144203255*^9, 
   3.926859176288563*^9}, {3.926860884903988*^9, 3.926860892988993*^9}, {
   3.926860954703541*^9, 3.926861091810951*^9}, {3.926862982768719*^9, 
   3.926862998351192*^9}, {3.926863320188297*^9, 3.926863321018505*^9}, {
   3.926907757362932*^9, 3.926907790050047*^9}, {3.926907844213049*^9, 
   3.9269080102664165`*^9}, {3.92690810262187*^9, 3.926908193425983*^9}, {
   3.926908332750471*^9, 3.926908335121586*^9}, {3.926908764718641*^9, 
   3.926908778165715*^9}, {3.926909080782627*^9, 3.9269092690156517`*^9}, {
   3.926909466402691*^9, 3.926909494844183*^9}, {3.926909576983734*^9, 
   3.926909633012186*^9}, {3.926909752731449*^9, 3.9269098320459385`*^9}, {
   3.926909868909024*^9, 3.92690992177609*^9}, {3.926909973989519*^9, 
   3.9269101724484673`*^9}, {3.926910236041624*^9, 3.926910307130848*^9}, {
   3.926910353548675*^9, 3.9269103544838867`*^9}, {3.926910389146723*^9, 
   3.926910421550703*^9}, {3.9269104550300827`*^9, 3.9269104997307*^9}, {
   3.9269105616072006`*^9, 3.9269105727498913`*^9}, {3.9269106239745827`*^9, 
   3.9269106850569286`*^9}, 3.9269107396557713`*^9, {3.926910773002226*^9, 
   3.926910773651371*^9}, {3.9269109776587143`*^9, 3.9269110056745815`*^9}, {
   3.926911348224077*^9, 3.926911507483052*^9}, {3.926911585701534*^9, 
   3.926911597279812*^9}, {3.926911628756912*^9, 3.926911632366728*^9}, {
   3.926911714971178*^9, 3.926911727055569*^9}, {3.9269118098991947`*^9, 
   3.926912038079944*^9}, {3.9269121048745174`*^9, 3.926912163790868*^9}, {
   3.926912249598522*^9, 3.9269122529381065`*^9}, {3.9269125558721085`*^9, 
   3.926912557234415*^9}, 3.926912665066578*^9, {3.926913878626116*^9, 
   3.926913983286627*^9}, {3.926914083320017*^9, 3.926914110890753*^9}, {
   3.926914173214803*^9, 3.926914261428318*^9}, {3.926915471055441*^9, 
   3.9269155112789593`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"ef85a732-3a9d-6645-bb8b-ea94165d679e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         LineBox[{{3.916944*^9, 999.8008008008009}, {3.9181536*^9, 
          999.8008008008009}, {3.9187584*^9, 1025.7993383541088`}, {
          3.9193632*^9, 1066.7948930236023`}, {3.919968*^9, 
          1066.7948930236023`}, {3.9205728*^9, 1112.2938565451125`}, {
          3.9211776*^9, 1141.280367699451}, {3.9217824*^9, 
          1118.4623551260706`}, {3.9223872*^9, 1156.2557079444155`}, {
          3.922992*^9, 1250.8668632003162`}, {3.9242016*^9, 
          1252.449837930669}, {3.9248064*^9, 1252.449837930669}, {
          3.9254112*^9, 1252.449837930669}, {3.926016*^9, 
          1252.449837930669}, {3.9266208*^9, 1252.449837930669}}]}, 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 0]], 
         LineBox[{{3.916944*^9, 981.2779461556552}, {3.9181536*^9, 
          991.2779461556552}, {3.9187584*^9, 991.2779461556552}, {
          3.9193632*^9, 991.2779461556552}, {3.919968*^9, 
          991.2779461556552}, {3.9205728*^9, 979.6621470768692}, {
          3.9211776*^9, 979.6621470768692}, {3.9217824*^9, 
          1031.0295699160329`}, {3.9223872*^9, 1116.1682829784118`}, {
          3.922992*^9, 1116.1682829784118`}, {3.9242016*^9, 
          1134.2433722651674`}, {3.9248064*^9, 1118.7126631002313`}, {
          3.9254112*^9, 1130.5667624538119`}, {3.926016*^9, 
          1135.5567443085486`}, {3.9266208*^9, 1132.0865860023202`}}]}, 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         LineBox[{{3.9193632*^9, 984.1202761349042}, {3.919968*^9, 
          984.1202761349042}, {3.9205728*^9, 984.1202761349042}, {
          3.9211776*^9, 1014.4644719091527`}, {3.9217824*^9, 
          1014.4644719091527`}, {3.9223872*^9, 1014.4644719091527`}, {
          3.922992*^9, 1014.4644719091527`}, {3.9242016*^9, 
          1014.4644719091527`}, {3.9248064*^9, 1014.4644719091527`}, {
          3.9254112*^9, 1078.7668658018092`}, {3.926016*^9, 
          1093.1474615289462`}, {3.9266208*^9, 1155.7917435219665`}}]}, 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[{
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          GrayLevel[0]], 
         LineBox[{{3.916944*^9, 1011.0984279323186`}, {3.9181536*^9, 
          1011.0984279323186`}, {3.9187584*^9, 1027.622259628236}, {
          3.9193632*^9, 1061.9589539919468`}, {3.919968*^9, 
          1058.1606669231116`}, {3.9205728*^9, 1076.8869588517598`}, {
          3.9211776*^9, 1147.7936297025258`}, {3.9217824*^9, 
          1135.9836337854993`}, {3.9223872*^9, 1238.244401181769}, {
          3.922992*^9, 1316.953704412642}, {3.9242016*^9, 
          1334.5493879141181`}, {3.9248064*^9, 1334.5493879141181`}, {
          3.9254112*^9, 1374.4981692526362`}, {3.926016*^9, 
          1397.0487700190254`}, {3.9266208*^9, 1393.544616792629}}]}, 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[{
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          GrayLevel[0.5]], 
         LineBox[{{3.9181536*^9, 1009.}, {3.9187584*^9, 1051.300532312812}, {
          3.9193632*^9, 1100.121639627422}, {3.919968*^9, 
          1166.2300088769184`}, {3.9205728*^9, 1166.2300088769184`}, {
          3.9211776*^9, 1166.2300088769184`}, {3.9217824*^9, 
          1166.2300088769184`}, {3.9223872*^9, 1166.2300088769184`}, {
          3.922992*^9, 1166.2300088769184`}, {3.9242016*^9, 
          1161.2877446698412`}, {3.9248064*^9, 1161.2877446698412`}, {
          3.9254112*^9, 1161.2877446698412`}, {3.926016*^9, 
          1161.2877446698412`}, {3.9266208*^9, 1161.2877446698412`}}]}, 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[{
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 1]], 
         LineBox[{{3.916944*^9, 979.}, {3.9181536*^9, 989.}, {3.9187584*^9, 
          983.8222971204058}, {3.9193632*^9, 1031.6937242626122`}, {
          3.919968*^9, 1068.5141034600138`}, {3.9205728*^9, 
          1105.4003495671116`}, {3.9211776*^9, 1225.8613062430065`}, {
          3.9217824*^9, 1301.3281445148002`}, {3.9223872*^9, 
          1321.5914111032416`}, {3.922992*^9, 1351.484910104925}, {
          3.9242016*^9, 1389.617808634477}, {3.9248064*^9, 
          1466.9585845439526`}, {3.9254112*^9, 1523.4875277166352`}, {
          3.926016*^9, 1564.3917203529359`}, {3.9266208*^9, 
          1673.0077518975959`}}]}, Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[{
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 1]], 
         LineBox[{{3.916944*^9, 1046.0124620988254`}, {3.9181536*^9, 
          1046.0124620988254`}, {3.9187584*^9, 1041.15004299608}, {
          3.9193632*^9, 1041.15004299608}, {3.919968*^9, 
          1033.4917724495072`}, {3.9205728*^9, 1021.230299492654}, {
          3.9211776*^9, 1021.230299492654}, {3.9217824*^9, 
          1021.230299492654}, {3.9223872*^9, 1028.339217682972}, {3.922992*^9,
           1028.339217682972}, {3.9242016*^9, 1042.940956224372}, {
          3.9248064*^9, 1119.621350817849}, {3.9254112*^9, 
          1111.2400257928264`}, {3.926016*^9, 1107.6885080614913`}, {
          3.9266208*^9, 1150.8807222469823`}}]}, 
        Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[{
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 1, 0]], 
         LineBox[{{3.9181536*^9, 1021.}, {3.9187584*^9, 1021.}, {3.9193632*^9,
           1021.}, {3.919968*^9, 1021.}, {3.9205728*^9, 1021.}, {3.9211776*^9,
           1021.}, {3.9217824*^9, 1049.5695403218704`}, {3.9223872*^9, 
          1049.5695403218704`}, {3.922992*^9, 1049.5695403218704`}, {
          3.9242016*^9, 1049.5695403218704`}, {3.9248064*^9, 
          1049.5695403218704`}, {3.9254112*^9, 1040.991762465686}, {
          3.926016*^9, 1040.991762465686}, {3.9266208*^9, 
          1040.991762465686}}]}, Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[{
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[{{3.916944*^9, 1033.9796598962816`}, {3.9181536*^9, 
          1033.9796598962816`}, {3.9187584*^9, 1019.3052233598728`}, {
          3.9193632*^9, 1003.6361483805308`}, {3.919968*^9, 
          1005.2904785710278`}, {3.9205728*^9, 1035.1049352942646`}, {
          3.9211776*^9, 1035.1049352942646`}, {3.9217824*^9, 
          1060.8443335662753`}, {3.9223872*^9, 1060.8443335662753`}, {
          3.922992*^9, 1093.1632864544683`}, {3.9242016*^9, 
          1088.357915269465}, {3.9248064*^9, 1078.3766410754313`}, {
          3.9254112*^9, 1069.753087680394}, {3.926016*^9, 
          1069.753087680394}, {3.9266208*^9, 1069.753087680394}}]}, 
        Annotation[#, "Charting`Private`Tag#9"]& ], 
       TagBox[{
         Hue[0.7946117974981064, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0]], 
         LineBox[{{3.916944*^9, 1030.72110583411}, {3.9181536*^9, 
          1030.72110583411}, {3.9187584*^9, 1030.72110583411}, {3.9193632*^9, 
          1030.72110583411}, {3.919968*^9, 1030.72110583411}, {3.9205728*^9, 
          1030.72110583411}, {3.9211776*^9, 1030.72110583411}, {3.9217824*^9, 
          1030.72110583411}, {3.9223872*^9, 1030.72110583411}, {3.922992*^9, 
          1030.72110583411}, {3.9242016*^9, 1051.8661254993049`}, {
          3.9248064*^9, 1051.8661254993049`}, {3.9254112*^9, 
          1074.7136056463505`}, {3.926016*^9, 1090.7995874055919`}, {
          3.9266208*^9, 1090.7995874055919`}}]}, 
        Annotation[#, "Charting`Private`Tag#10"]& ], 
       TagBox[{
         Hue[0.030679774997896203`, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[{{3.9181536*^9, 999.}, {3.9187584*^9, 999.}, {3.9193632*^9, 
          993.9272268406029}, {3.919968*^9, 1023.5679633700164`}, {
          3.9205728*^9, 1011.7656298445899`}, {3.9211776*^9, 
          1053.176155259989}, {3.9217824*^9, 1053.176155259989}, {
          3.9223872*^9, 1053.176155259989}, {3.922992*^9, 
          1053.176155259989}, {3.9242016*^9, 1048.6332999733754`}, {
          3.9248064*^9, 1048.6332999733754`}, {3.9254112*^9, 
          1052.1544276350237`}, {3.926016*^9, 1100.8981104944014`}, {
          3.9266208*^9, 1148.384371495527}}]}, 
        Annotation[#, "Charting`Private`Tag#11"]& ], 
       TagBox[{
         Hue[0.266747752497686, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[{{3.916944*^9, 1014.4792686208237`}, {3.9181536*^9, 
          1050.4792686208239`}, {3.9187584*^9, 1079.3888640883513`}, {
          3.9193632*^9, 1075.3414849527644`}, {3.919968*^9, 
          1075.3414849527644`}, {3.9205728*^9, 1075.3414849527644`}, {
          3.9211776*^9, 1075.3414849527644`}, {3.9217824*^9, 
          1111.1677881921394`}, {3.9223872*^9, 1170.3601134158466`}, {
          3.922992*^9, 1229.2735594582082`}, {3.9242016*^9, 
          1267.4048942963195`}, {3.9248064*^9, 1298.8427577374994`}, {
          3.9254112*^9, 1300.2589849757792`}, {3.926016*^9, 
          1300.2589849757792`}, {3.9266208*^9, 1302.891497470552}}]}, 
        Annotation[#, "Charting`Private`Tag#12"]& ], 
       TagBox[{
         Hue[0.5028157299974758, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.3, 0, 0]], 
         LineBox[{{3.916944*^9, 1054.8600088706903`}, {3.9181536*^9, 
          1054.8600088706903`}, {3.9187584*^9, 1054.8600088706903`}, {
          3.9193632*^9, 1048.9666566669894`}, {3.919968*^9, 
          1082.0751956921356`}, {3.9205728*^9, 1102.8943583347811`}, {
          3.9211776*^9, 1124.58393149571}, {3.9217824*^9, 
          1110.2362646848717`}, {3.9223872*^9, 1110.2362646848717`}, {
          3.922992*^9, 1110.2362646848717`}, {3.9242016*^9, 
          1136.0078327806395`}, {3.9248064*^9, 1136.0078327806395`}, {
          3.9254112*^9, 1136.0078327806395`}, {3.926016*^9, 
          1153.569853738395}, {3.9266208*^9, 1153.569853738395}}]}, 
        Annotation[#, "Charting`Private`Tag#13"]& ], 
       TagBox[{
         Hue[0.7388837074972656, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.3, 0.3, 0.5]], 
         LineBox[{{3.916944*^9, 979.7687367046726}, {3.9181536*^9, 
          979.7687367046726}, {3.9187584*^9, 1007.7387798552995`}, {
          3.9193632*^9, 1007.7387798552995`}, {3.919968*^9, 
          999.3321263561097}, {3.9205728*^9, 1011.3811736870649`}, {
          3.9211776*^9, 1043.1607359483455`}, {3.9217824*^9, 
          1043.1607359483455`}, {3.9223872*^9, 1061.8646765754672`}, {
          3.922992*^9, 1061.8646765754672`}, {3.9242016*^9, 
          1061.8646765754672`}, {3.9248064*^9, 1061.8646765754672`}, {
          3.9254112*^9, 1079.0879340274637`}, {3.926016*^9, 
          1079.0879340274637`}, {3.9266208*^9, 1079.0879340274637`}}]}, 
        Annotation[#, "Charting`Private`Tag#14"]& ], 
       TagBox[{
         Hue[0.9749516849970554, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.6, 0.6, 0]], 
         LineBox[{{3.916944*^9, 980.5387572570381}, {3.9181536*^9, 
          980.5387572570381}, {3.9187584*^9, 966.4316387944871}, {
          3.9193632*^9, 994.8482489280271}, {3.919968*^9, 
          986.7514904856065}, {3.9205728*^9, 994.7910650206766}, {
          3.9211776*^9, 999.5101857065395}, {3.9217824*^9, 
          977.547265558784}, {3.9223872*^9, 977.547265558784}, {3.922992*^9, 
          977.547265558784}, {3.9242016*^9, 972.8749956723227}, {3.9248064*^9,
           972.8749956723227}, {3.9254112*^9, 989.63037017061}, {3.926016*^9, 
          989.63037017061}, {3.9266208*^9, 989.63037017061}}]}, 
        Annotation[#, "Charting`Private`Tag#15"]& ]}}, {{{{{{}, {
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1252.449837930669}], 
                
                Offset[{0.775593054984672, 2.8980088704245786`}, {
                 3.927015936*^9, 1252.449837930669}], 
                Offset[{0, 0}, {3.927596544*^9, 1522.998092682167}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1522.998092682167}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1522.998092682167}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1522.998092682167}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1252.449837930669}], 
                
                Offset[{0.775593054984672, 2.8980088704245786`}, {
                 3.927015936*^9, 1252.449837930669}], 
                Offset[{0, 0}, {3.927596544*^9, 1522.998092682167}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1522.998092682167}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1522.998092682167}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1522.998092682167}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{96., 7.000000000000021}, {3.927596544*^9, 
                 1522.998092682167}], 
                
                Offset[{96., -6.999999999999979}, {3.927596544*^9, 
                 1522.998092682167}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1522.998092682167}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1522.998092682167}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 0          \"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{53., 1.176836406102666*^-14}, {3.927596544*^9, 
               1522.998092682167}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1132.0865860023202`}], 
                
                Offset[{2.3467710204157175`, 1.868867512087727}, {
                 3.927015936*^9, 1132.0865860023202`}], 
                Offset[{0, 0}, {3.927596544*^9, 1189.748192188594}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1189.748192188594}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1189.748192188594}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1189.748192188594}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1132.0865860023202`}], 
                
                Offset[{2.3467710204157175`, 1.868867512087727}, {
                 3.927015936*^9, 1132.0865860023202`}], 
                Offset[{0, 0}, {3.927596544*^9, 1189.748192188594}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1189.748192188594}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1189.748192188594}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1189.748192188594}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.927596544*^9, 
                 1189.748192188594}], 
                
                Offset[{68., -6.999999999999985}, {3.927596544*^9, 
                 1189.748192188594}], 
                
                Offset[{10., -6.999999999999997}, {3.927596544*^9, 
                 1189.748192188594}], 
                
                Offset[{10., 7.000000000000003}, {3.927596544*^9, 
                 1189.748192188594}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 1\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.927596544*^9, 
               1189.748192188594}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1155.7917435219665`}], 
                
                Offset[{0.816122872410999, 2.8868570205549875`}, {
                 3.927015936*^9, 1155.7917435219665`}], 
                Offset[{0, 0}, {3.927596544*^9, 1411.9147925149312`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1411.9147925149312`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1411.9147925149312`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1411.9147925149312`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1155.7917435219665`}], 
                
                Offset[{0.816122872410999, 2.8868570205549875`}, {
                 3.927015936*^9, 1155.7917435219665`}], 
                Offset[{0, 0}, {3.927596544*^9, 1411.9147925149312`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1411.9147925149312`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1411.9147925149312`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1411.9147925149312`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.927596544*^9, 
                 1411.9147925149312`}], 
                
                Offset[{68., -6.999999999999985}, {3.927596544*^9, 
                 1411.9147925149312`}], 
                
                Offset[{10., -6.999999999999997}, {3.927596544*^9, 
                 1411.9147925149312`}], 
                
                Offset[{10., 7.000000000000003}, {3.927596544*^9, 
                 1411.9147925149312`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 3\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.927596544*^9, 
               1411.9147925149312`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1393.544616792629}], 
                
                Offset[{0.8647353022294014, 2.8726699874991253`}, {
                 3.927015936*^9, 1393.544616792629}], 
                Offset[{0, 0}, {3.927596544*^9, 1634.0813928658552`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1634.0813928658552`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1634.0813928658552`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1634.0813928658552`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1393.544616792629}], 
                
                Offset[{0.8647353022294014, 2.8726699874991253`}, {
                 3.927015936*^9, 1393.544616792629}], 
                Offset[{0, 0}, {3.927596544*^9, 1634.0813928658552`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1634.0813928658552`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1634.0813928658552`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1634.0813928658552`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.927596544*^9, 
                 1634.0813928658552`}], 
                
                Offset[{68., -6.999999999999985}, {3.927596544*^9, 
                 1634.0813928658552`}], 
                
                Offset[{10., -6.999999999999997}, {3.927596544*^9, 
                 1634.0813928658552`}], 
                
                Offset[{10., 7.000000000000003}, {3.927596544*^9, 
                 1634.0813928658552`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 4\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.927596544*^9, 
               1634.0813928658552`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1161.2877446698412`}], 
                
                Offset[{0.6904338357997268, 2.919469321363538}, {
                 3.927015936*^9, 1161.2877446698412`}], 
                Offset[{0, 0}, {3.927596544*^9, 1467.4564425977685`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1467.4564425977685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1467.4564425977685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1467.4564425977685`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1161.2877446698412`}], 
                
                Offset[{0.6904338357997268, 2.919469321363538}, {
                 3.927015936*^9, 1161.2877446698412`}], 
                Offset[{0, 0}, {3.927596544*^9, 1467.4564425977685`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1467.4564425977685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1467.4564425977685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1467.4564425977685`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.927596544*^9, 
                 1467.4564425977685`}], 
                
                Offset[{68., -6.999999999999985}, {3.927596544*^9, 
                 1467.4564425977685`}], 
                
                Offset[{10., -6.999999999999997}, {3.927596544*^9, 
                 1467.4564425977685`}], 
                
                Offset[{10., 7.000000000000003}, {3.927596544*^9, 
                 1467.4564425977685`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 7\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.927596544*^9, 
               1467.4564425977685`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1673.0077518975959`}], 
                
                Offset[{2.924002670932, 0.6709756928403072}, {3.927015936*^9, 
                 1673.0077518975959`}], 
                Offset[{0, 0}, {3.927596544*^9, 1689.6230432181685`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1689.6230432181685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1689.6230432181685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1689.6230432181685`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1673.0077518975959`}], 
                Offset[{2.924002670932, 0.6709756928403072}, {3.927015936*^9, 
                 1673.0077518975959`}], 
                Offset[{0, 0}, {3.927596544*^9, 1689.6230432181685`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1689.6230432181685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1689.6230432181685`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1689.6230432181685`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.927596544*^9, 
                 1689.6230432181685`}], 
                
                Offset[{68., -6.999999999999985}, {3.927596544*^9, 
                 1689.6230432181685`}], 
                
                Offset[{10., -6.999999999999997}, {3.927596544*^9, 
                 1689.6230432181685`}], 
                
                Offset[{10., 7.000000000000003}, {3.927596544*^9, 
                 1689.6230432181685`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 8\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.927596544*^9, 
               1689.6230432181685`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1150.8807222469823`}], 
                
                Offset[{1.304491248309507, 2.7015370778658405`}, {
                 3.927015936*^9, 1150.8807222469823`}], 
                Offset[{0, 0}, {3.927596544*^9, 1300.831492351224}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1300.831492351224}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1300.831492351224}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1300.831492351224}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1150.8807222469823`}], 
                
                Offset[{1.304491248309507, 2.7015370778658405`}, {
                 3.927015936*^9, 1150.8807222469823`}], 
                Offset[{0, 0}, {3.927596544*^9, 1300.831492351224}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1300.831492351224}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1300.831492351224}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1300.831492351224}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1300.831492351224}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1300.831492351224}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1300.831492351224}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1300.831492351224}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 10\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1300.831492351224}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1040.991762465686}], 
                
                Offset[{2.1066725821514773`, -2.1358676531122494`}, {
                 3.927015936*^9, 1040.991762465686}], 
                Offset[{0, 0}, {3.927596544*^9, 967.5815918640294}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 967.5815918640294}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 967.5815918640294}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 967.5815918640294}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1040.991762465686}], 
                
                Offset[{2.1066725821514773`, -2.1358676531122494`}, {
                 3.927015936*^9, 1040.991762465686}], 
                Offset[{0, 0}, {3.927596544*^9, 967.5815918640294}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 967.5815918640294}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 967.5815918640294}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 967.5815918640294}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 967.5815918640294}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 967.5815918640294}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 967.5815918640294}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 967.5815918640294}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 11\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               967.5815918640294}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1069.753087680394}], 
                
                Offset[{2.5222248170706716`, -1.624309690961923}, {
                 3.927015936*^9, 1069.753087680394}], 
                Offset[{0, 0}, {3.927596544*^9, 1023.1232419452015`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1023.1232419452015`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1232419452015`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1232419452015`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1069.753087680394}], 
                
                Offset[{2.5222248170706716`, -1.624309690961923}, {
                 3.927015936*^9, 1069.753087680394}], 
                Offset[{0, 0}, {3.927596544*^9, 1023.1232419452015`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1023.1232419452015`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1232419452015`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1232419452015`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1023.1232419452015`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1023.1232419452015`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1023.1232419452015`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1023.1232419452015`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 12\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1023.1232419452015`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1090.7995874055919`}], 
                
                Offset[{2.573059981969413, 1.5425181779115484`}, {
                 3.927015936*^9, 1090.7995874055919`}], 
                Offset[{0, 0}, {3.927596544*^9, 1134.2065421074265`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1134.2065421074265`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1134.2065421074265`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1134.2065421074265`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1090.7995874055919`}], 
                
                Offset[{2.573059981969413, 1.5425181779115484`}, {
                 3.927015936*^9, 1090.7995874055919`}], 
                Offset[{0, 0}, {3.927596544*^9, 1134.2065421074265`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1134.2065421074265`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1134.2065421074265`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1134.2065421074265`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1134.2065421074265`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1134.2065421074265`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1134.2065421074265`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1134.2065421074265`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 13\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1134.2065421074265`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1148.384371495527}], 
                
                Offset[{1.7956740141759, 2.4032384057378513`}, {
                 3.927015936*^9, 1148.384371495527}], 
                Offset[{0, 0}, {3.927596544*^9, 1245.2898422698383`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1245.2898422698383`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1245.2898422698383`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1245.2898422698383`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1148.384371495527}], 
                
                Offset[{1.7956740141759, 2.4032384057378513`}, {
                 3.927015936*^9, 1148.384371495527}], 
                Offset[{0, 0}, {3.927596544*^9, 1245.2898422698383`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1245.2898422698383`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1245.2898422698383`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1245.2898422698383`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1245.2898422698383`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1245.2898422698383`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1245.2898422698383`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1245.2898422698383`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 14\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1245.2898422698383`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1302.891497470552}], 
                
                Offset[{0.7621775666408659, 2.9015660180167204`}, {
                 3.927015936*^9, 1302.891497470552}], 
                Offset[{0, 0}, {3.927596544*^9, 1578.5397427694386`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1578.5397427694386`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1578.5397427694386`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1578.5397427694386`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1302.891497470552}], 
                
                Offset[{0.7621775666408659, 2.9015660180167204`}, {
                 3.927015936*^9, 1302.891497470552}], 
                Offset[{0, 0}, {3.927596544*^9, 1578.5397427694386`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1578.5397427694386`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1578.5397427694386`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1578.5397427694386`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1578.5397427694386`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1578.5397427694386`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1578.5397427694386`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1578.5397427694386`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 16\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1578.5397427694386`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1153.569853738395}], 
                
                Offset[{1.0087248208099542`, 2.8253272794283366`}, {
                 3.927015936*^9, 1153.569853738395}], 
                Offset[{0, 0}, {3.927596544*^9, 1356.3731424328623`}], 
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1356.3731424328623`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1356.3731424328623`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1356.3731424328623`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1153.569853738395}], 
                
                Offset[{1.0087248208099542`, 2.8253272794283366`}, {
                 3.927015936*^9, 1153.569853738395}], 
                Offset[{0, 0}, {3.927596544*^9, 1356.3731424328623`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1356.3731424328623`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1356.3731424328623`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1356.3731424328623`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1356.3731424328623`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1356.3731424328623`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1356.3731424328623`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1356.3731424328623`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 28\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1356.3731424328623`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1079.0879340274637`}], 
                
                Offset[{2.9999487977270354`, -0.017527436096466023`}, {
                 3.927015936*^9, 1079.0879340274637`}], 
                Offset[{0, 0}, {3.927596544*^9, 1078.6648920263142`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1078.6648920263142`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1078.6648920263142`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1078.6648920263142`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1079.0879340274637`}], 
                
                Offset[{2.9999487977270354`, -0.017527436096466023`}, {
                 3.927015936*^9, 1079.0879340274637`}], 
                Offset[{0, 0}, {3.927596544*^9, 1078.6648920263142`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1078.6648920263142`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1078.6648920263142`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1078.6648920263142`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1078.6648920263142`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1078.6648920263142`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1078.6648920263142`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1078.6648920263142`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 29\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1078.6648920263142`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 989.63037017061}], 
                
                Offset[{2.0467885225884457`, -2.1933209395344333`}, {
                 3.927015936*^9, 989.63037017061}], 
                Offset[{0, 0}, {3.927596544*^9, 912.039941782758}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 912.039941782758}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 912.039941782758}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 912.039941782758}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 989.63037017061}], 
                
                Offset[{2.0467885225884457`, -2.1933209395344333`}, {
                 3.927015936*^9, 989.63037017061}], 
                Offset[{0, 0}, {3.927596544*^9, 912.039941782758}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 912.039941782758}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 912.039941782758}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 912.039941782758}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 912.039941782758}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 912.039941782758}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 912.039941782758}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 912.039941782758}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 33\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               912.039941782758}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.916944*^9, 927.1774102887609}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Seasonal Rating (SR)\"", HoldForm], TraditionalForm], 
        None}, {None, None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {{3.9157344*^9, 3.916944*^9, 3.9181536*^9, 3.9187584*^9, 
       3.9193632*^9, 3.919968*^9, 3.9205728*^9, 3.9211776*^9, 3.9217824*^9, 
       3.9217824*^9, 3.9223872*^9, 3.922992*^9, 3.9242016*^9, 3.9248064*^9, 
       3.9254112*^9, 3.926016*^9, 3.9266208*^9}, {1000, 1050, 1100, 1150, 
       1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 
       1750}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, 140.8}, {All, All}}, 
     ImageSize -> Scaled[0.75], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& )}}, PlotLabel -> 
     FormBox["\"Spreminjaje SR skozi \[CHacek]as za obdobje februar - junij \
2024\"", TraditionalForm], 
     PlotRange -> {{3.916944*^9, 3.9266208*^9}, {927.1774102887609, 
      1673.0077518975959`}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Player ID: 0 \"", "\"Player ID: 1 \"", "\"Player ID: 3 \"", 
       "\"Player ID: 4 \"", "\"Player ID: 7 \"", "\"Player ID: 8 \"", 
       "\"Player ID: 10\"", "\"Player ID: 11\"", "\"Player ID: 12\"", 
       "\"Player ID: 13\"", "\"Player ID: 14\"", "\"Player ID: 16\"", 
       "\"Player ID: 28\"", "\"Player ID: 29\"", "\"Player ID: 33\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #10, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #11, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #13, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0.3, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0.3, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #14, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.6, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.6, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0.5]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.6, 0.4, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.3, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.3, 0.3, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.6, 0.6, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.926908712937088*^9, {3.926909244984173*^9, 3.926909272080857*^9}, 
   3.926909422161621*^9, 3.926909479575187*^9, {3.926909600019321*^9, 
   3.926909635078193*^9}, 3.9269098205064487`*^9, {3.9269098757617493`*^9, 
   3.9269099249303207`*^9}, {3.926909984089802*^9, 3.926910001385868*^9}, 
   3.926910071961857*^9, 3.926910102246998*^9, {3.9269101578247986`*^9, 
   3.926910174900503*^9}, {3.9269102459158554`*^9, 3.926910265679825*^9}, {
   3.9269102983928604`*^9, 3.926910309375357*^9}, {3.926910395398819*^9, 
   3.926910423902233*^9}, 3.926910459072996*^9, 3.926910503340517*^9, 
   3.926910639527443*^9, 3.926910687484476*^9, 3.9269107431721897`*^9, 
   3.926910776689059*^9, 3.9269110090312347`*^9, {3.926911363741635*^9, 
   3.9269113931616936`*^9}, 3.926911442022988*^9, 3.9269115106947784`*^9, {
   3.92691161801775*^9, 3.9269116385739784`*^9}, 3.926911861904774*^9, {
   3.9269119062551517`*^9, 3.926911925204029*^9}, {3.926911955265852*^9, 
   3.926911984135254*^9}, 3.9269120420448513`*^9, {3.9269121154494743`*^9, 
   3.9269121480035877`*^9}, 3.926912559705973*^9, {3.9269139687238674`*^9, 
   3.92691398614678*^9}, 3.926914113313803*^9, {3.92691417958886*^9, 
   3.926914199493591*^9}, 3.926914229742607*^9, 3.926914264119929*^9, 
   3.92691551446668*^9, 3.9269502203525906`*^9, 3.92701530469825*^9, 
   3.927023024176262*^9, 3.9270280985723743`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"2742f9fe-8c45-e945-ae2b-6df942e76e59"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analiza sezonskega ratinga (SR)", "Subsection",
 CellChangeTimes->{{3.9269187783692436`*^9, 3.9269187845806828`*^9}, {
  3.9269267223331356`*^9, 
  3.926926729865313*^9}},ExpressionUUID->"a5ed5845-ecb5-b14d-810a-\
6b2b83dff7b5"],

Cell["\<\
Vidimo, da je ve\[CHacek]ina igralcev ob za\[CHacek]etku junija ocenjena s \
\[SHacek]tevilom med 1000 in 1200. Kar pa povpre\[CHacek]nemu bralcu ne pove \
prav veliko, zato bom na hitro razlo\[ZHacek]il od kje te \[SHacek]tevilke \
pridejo. Osnovni rating s katerim vsi za\[CHacek]nejo sezono je 1000 (prvi \
vpis podatkov je po prvi tekmi, ko imajo igralci \[ZHacek]e rating razli\
\[CHacek]en od 1000). Na dvig in padec ratinga vpliva rezultat njegove ekipe \
(te so narejene \[SHacek]e s pomo\[CHacek]jo drugega ratinga, o  tem v \
nadaljevanju analize) in samega igral\[CHacek]evega vlo\[ZHacek]ka. Zmaga \
ekipe vsakemu igralcu prinese med 15 in 25 to\[CHacek]k. Manj, \[CHacek]e je \
bila njihova ekipa favorit \[ZHacek]e pred samo tekmo oz. ve\[CHacek], \
\[CHacek]e so bili favoriti nasprotniki. Potem pa vsakemu igralcu prinesejo \
to\[CHacek]ke \[SHacek]e goli in asistence. En gol pribli\[ZHacek]no 10, \
asistenca pribli\[ZHacek]no 5, s tem da je vsak naslednji gol oz. asistenca \
vredna ve\[CHacek], tj. dva gola na tekmo prineseta recimo 10 + 11 = 21 to\
\[CHacek]k. Za piko na i sta tu \[SHacek]e nagradi za najve\[CHacek] golov in \
najve\[CHacek] asistenc, ki jih prejmeta igralca z najve\[CHacek] goli oz. \
asistencami. To jima (ali mu, \[CHacek]e je to en sam igralec) doda \
\[SHacek]e manj\[SHacek]i bonus. 

Vrnimo s k grafu. V prepletanju \[CHacek]rt opazimo, da se nekaterim igralcev \
sezonski rating (v nadaljevanju SR) ne spreminja. To je posledica tega, da \
rekreacije v tistem \[CHacek]asovnem obdobju niso obiskovali. V prvih nekaj \
sezonah smo sicer imeli druga\[CHacek]no formulo za izra\[CHacek]unavanje SR, \
ki pa se je izkazal za preve\[CHacek] komplicirano in je na dolgi rok bila \
slab pokazatelj igral\[CHacek]eve uspe\[SHacek]nosti. Poleg tega je \
rekreacija prostovoljna, to pa je nekako sililo ljudi, da so prihajali.\
\[LineSeparator]\[LineSeparator]Hkrati lahko opazimo, da se rating nekaterih \
igralcev za\[CHacek]ne \[SHacek]ele nekje na sredini (\[CHacek]etrtini, \
\[CHacek]e smo natan\[CHacek]nej\[SHacek]i) sezone. Gre za igralce, ki so se \
sezoni priklju\[CHacek]ili \[SHacek]ele v kasnej\[SHacek]em terminu, torej \
niso bili prisotni od za\[CHacek]etka. \[LineSeparator]\[LineSeparator]Zdaj, \
ko smo argumentirali anomalije, se posvetimo dejanski vsebini. Najprej moram \
poudariti, da sezone \[SHacek]e ni konec in to je pravzaprav cilj analize - \
da poskusimo napovedati kon\[CHacek]ni izid. \[LineSeparator]Na prvi pogled \
lahko lo\[CHacek]imo igralce na dve skupini. Igralci 0, 4, 8 in 16 (recimo \
jim skupina \[OpenCurlyDoubleQuote]Nad 1200\[CloseCurlyDoubleQuote]) se \
\[ZHacek]e od za\[CHacek]etka borijo za vi\[SHacek]ja mesta. Igralec 0 iz te \
skupine je proti konce sezone prenehal z obiskovanjem rekreacije, kar mu je \
odvzelo mo\[ZHacek]nost za zmago. Igralec 16 pa je dvakrat izpustil in nato \
ne preve\[CHacek] blestel na zadnji tekmi. S tem si je nabral \
pribli\[ZHacek]no 100 to\[CHacek]k zaostanka za trenutno drugim po \
razvrstitvi. Vidimo tudi, da je ob za\[CHacek]etku sezone bil prisoten \
\[SHacek]e en igralec, ki bi najverjetneje pasal v to skupino, a je prav tako \
prenehal z obiskovanjem. Preostala dva igralca (4 in 8) sta veliko bolj \
aktivna. V za\[CHacek]etku maja sta bila sorazmerno blizu, lo\[CHacek]ilo ju \
je kak\[SHacek]nih 30 to\[CHacek]k. Se pa je igralec 8 kaj kmalu odlepil in \
sedaj sedi na prednosti 275 to\[CHacek]k. Ta prednost je zelo velika in \
razen, \[CHacek]e bo igralec \[SHacek]tevilka 8 res popolnoma nerazpolo\
\[ZHacek]en in ne prispeva ni\[CHacek]esar, ter izgubi vse preostale tekme, \
mu to zbije maksimalno nekje 50 to\[CHacek]k. Torej mora trenutno drugouvr\
\[SHacek]\[CHacek]eni pridobiti nekje 200 to\[CHacek]k na lastno pest. To je \
okoli100to\[CHacek]k na tekmo. Ta dose\[ZHacek]ek sicer ni neizvedljiv a je \
zanj treba pokazati zelo dobro igro. Glede na formo, ki jo prikazuje igralec \
8 v zadnjem mesecu lahko s kar precej\[SHacek]no verjetnostjo re\[CHacek]emo, \
da je edini kandidat za zmago. 
Po drugi strani pa boja za drugo mesto ne smemo odpisati. Razlika 100 to\
\[CHacek]k je v lahko dosegljiva v treh tekmah. Igralec 16 bo moral v zadnjih \
tekmah pokazati ve\[CHacek], \[CHacek]e \[ZHacek]eli se\[CHacek]i po drugem \
mestu. Glede na formo obeh sicer ka\[ZHacek]e, da bo igralec 4 vednarle uspel \
obdr\[ZHacek]ati drugo mesto, ampak hitro se lahko stvari obrnejo.
\[LineSeparator]
V drugi skupini so preostali igralci, ki se gibljejo med 1000 in 1200 \
ratinga. Ker je dogajanje malce neberljivo si ga poglejmo od bli\[ZHacek]je:

\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQPaV5/+2/jm8de+qc7oNomUXznoLoPVuEjf8BaQmW
XgsQfcB3kheILth3xQ9EN0irhIDoOev5IkC0zPqodLD4uqlzQXRIV8A8EG2z
4+gSEK2SnbgCRL8RTFoDoj16UteD9bW+2gyib+xesxVE12zdfxxEJ/ifugui
A86eeQiiNfj8XoPoPybm70F0z0nPryDaIo1N9j/IfQuv6YPoiLg8KxBtUJ/r
B6JFRGYGgWiXLVsjQbTE1yuxYPFlFiUgeo7zNw0GJ6A7XbsNQPQRWc1ZINrj
jAGYvlLiMx9En5mQDKZTtnEvAdEHDDXOgugQgx1dZkC6QeoWmL6wcdECEC3g
V7IQRAMAU/G21A==
  "],ExpressionUUID->"2f6d2b6b-dba1-8a4c-baed-84c03bd1ad05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"nabor", ",", "  ", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Seasonal Rating (SR)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", ",", "15"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", ",", "29"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "7"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "14"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "21"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "28"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "18"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", ",", "25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "16"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "23"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "30"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "6", ",", "6"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1000", ",", "1050", ",", " ", "1100", ",", "1150", ",", " ", "1200", 
        ",", "1250", ",", " ", "1300", ",", "1350", ",", " ", "1400", ",", 
        "1450", ",", " ", "1500", ",", "1550", ",", " ", "1600", ",", "1650", 
        ",", " ", "1700", ",", " ", "1750"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"900", ",", " ", "1200"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "None", ",", "\"\<Player ID: 1          \>\"", ",", 
      "\"\<Player ID: 3\>\"", ",", "None", ",", "\"\<Player ID: 7\>\"", ",", 
      "None", ",", "\"\<Player ID: 10\>\"", ",", "\"\<Player ID: 11\>\"", 
      ",", "\"\<Player ID: 12\>\"", ",", "\"\<Player ID: 13\>\"", ",", 
      "\"\<Player ID: 14\>\"", ",", "None", ",", "\"\<Player ID: 28\>\"", 
      ",", "\"\<Player ID: 29\>\"", ",", "\"\<Player ID: 33\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"Scaled", "[", "0.75", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Player ID: 0 \>\"", ",", "\"\<Player ID: 1 \>\"", ",", 
        "\"\<Player ID: 3 \>\"", ",", "\"\<Player ID: 4 \>\"", ",", 
        "\"\<Player ID: 7 \>\"", ",", "\"\<Player ID: 8 \>\"", ",", 
        "\"\<Player ID: 10\>\"", ",", "\"\<Player ID: 11\>\"", ",", 
        "\"\<Player ID: 12\>\"", ",", "\"\<Player ID: 13\>\"", ",", 
        "\"\<Player ID: 14\>\"", ",", "\"\<Player ID: 16\>\"", ",", 
        "\"\<Player ID: 28\>\"", ",", "\"\<Player ID: 29\>\"", ",", 
        "\"\<Player ID: 33\>\""}], "}"}], ",", " ", "Below"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Spreminjaje SR skozi \[CHacek]as za obdobje februar - junij \
2024\>\""}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
     "Red", ",", " ", "Green", ",", " ", "Blue", ",", " ", "Black", ",", " ", 
      "Gray", ",", " ", "Cyan", ",", " ", "Magenta", ",", " ", "Yellow", ",", 
      " ", "Brown", ",", " ", "Orange", ",", " ", "Pink", ",", " ", "Purple", 
      ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3", ",", "0", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3", ",", "0.3", ",", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.6", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", " ", "]"}]], "Input",
 CellChangeTimes->{{3.926917529473861*^9, 3.926917532546561*^9}, {
  3.9269175660544586`*^9, 3.92691756949946*^9}, {3.926917603041748*^9, 
  3.926917650762369*^9}, {3.926917712219998*^9, 3.9269177216891403`*^9}, {
  3.926917772048456*^9, 3.926917786006611*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"51a39825-672e-ea4d-8468-fc61e7a8cc36"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         LineBox[{{3.916944*^9, 999.8008008008009}, {3.9181536*^9, 
          999.8008008008009}, {3.9187584*^9, 1025.7993383541088`}, {
          3.9193632*^9, 1066.7948930236023`}, {3.919968*^9, 
          1066.7948930236023`}, {3.9205728*^9, 1112.2938565451125`}, {
          3.9211776*^9, 1141.280367699451}, {3.9217824*^9, 
          1118.4623551260706`}, {3.9223872*^9, 1156.2557079444155`}, {
          3.9226668345501084`*^9, 1200.}}]}, 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 0]], 
         LineBox[{{3.916944*^9, 981.2779461556552}, {3.9181536*^9, 
          991.2779461556552}, {3.9187584*^9, 991.2779461556552}, {
          3.9193632*^9, 991.2779461556552}, {3.919968*^9, 
          991.2779461556552}, {3.9205728*^9, 979.6621470768692}, {
          3.9211776*^9, 979.6621470768692}, {3.9217824*^9, 
          1031.0295699160329`}, {3.9223872*^9, 1116.1682829784118`}, {
          3.922992*^9, 1116.1682829784118`}, {3.9242016*^9, 
          1134.2433722651674`}, {3.9248064*^9, 1118.7126631002313`}, {
          3.9254112*^9, 1130.5667624538119`}, {3.926016*^9, 
          1135.5567443085486`}, {3.9266208*^9, 1132.0865860023202`}}]}, 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         LineBox[{{3.9193632*^9, 984.1202761349042}, {3.919968*^9, 
          984.1202761349042}, {3.9205728*^9, 984.1202761349042}, {
          3.9211776*^9, 1014.4644719091527`}, {3.9217824*^9, 
          1014.4644719091527`}, {3.9223872*^9, 1014.4644719091527`}, {
          3.922992*^9, 1014.4644719091527`}, {3.9242016*^9, 
          1014.4644719091527`}, {3.9248064*^9, 1014.4644719091527`}, {
          3.9254112*^9, 1078.7668658018092`}, {3.926016*^9, 
          1093.1474615289462`}, {3.9266208*^9, 1155.7917435219665`}}]}, 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[{
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          GrayLevel[0]], 
         LineBox[{{3.916944*^9, 1011.0984279323186`}, {3.9181536*^9, 
          1011.0984279323186`}, {3.9187584*^9, 1027.622259628236}, {
          3.9193632*^9, 1061.9589539919468`}, {3.919968*^9, 
          1058.1606669231116`}, {3.9205728*^9, 1076.8869588517598`}, {
          3.9211776*^9, 1147.7936297025258`}, {3.9217824*^9, 
          1135.9836337854993`}, {3.922161011458454*^9, 1200.}}]}, 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[{
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          GrayLevel[0.5]], 
         LineBox[{{3.9181536*^9, 1009.}, {3.9187584*^9, 1051.300532312812}, {
          3.9193632*^9, 1100.121639627422}, {3.919968*^9, 
          1166.2300088769184`}, {3.9205728*^9, 1166.2300088769184`}, {
          3.9211776*^9, 1166.2300088769184`}, {3.9217824*^9, 
          1166.2300088769184`}, {3.9223872*^9, 1166.2300088769184`}, {
          3.922992*^9, 1166.2300088769184`}, {3.9242016*^9, 
          1161.2877446698412`}, {3.9248064*^9, 1161.2877446698412`}, {
          3.9254112*^9, 1161.2877446698412`}, {3.926016*^9, 
          1161.2877446698412`}, {3.9266208*^9, 1161.2877446698412`}}]}, 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[{
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 1]], 
         LineBox[{{3.916944*^9, 979.}, {3.9181536*^9, 989.}, {3.9187584*^9, 
          983.8222971204058}, {3.9193632*^9, 1031.6937242626122`}, {
          3.919968*^9, 1068.5141034600138`}, {3.9205728*^9, 
          1105.4003495671116`}, {3.9210477577801857`*^9, 1200.}}]}, 
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[{
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 1]], 
         LineBox[{{3.916944*^9, 1046.0124620988254`}, {3.9181536*^9, 
          1046.0124620988254`}, {3.9187584*^9, 1041.15004299608}, {
          3.9193632*^9, 1041.15004299608}, {3.919968*^9, 
          1033.4917724495072`}, {3.9205728*^9, 1021.230299492654}, {
          3.9211776*^9, 1021.230299492654}, {3.9217824*^9, 
          1021.230299492654}, {3.9223872*^9, 1028.339217682972}, {3.922992*^9,
           1028.339217682972}, {3.9242016*^9, 1042.940956224372}, {
          3.9248064*^9, 1119.621350817849}, {3.9254112*^9, 
          1111.2400257928264`}, {3.926016*^9, 1107.6885080614913`}, {
          3.9266208*^9, 1150.8807222469823`}}]}, 
        Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[{
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 1, 0]], 
         LineBox[{{3.9181536*^9, 1021.}, {3.9187584*^9, 1021.}, {3.9193632*^9,
           1021.}, {3.919968*^9, 1021.}, {3.9205728*^9, 1021.}, {3.9211776*^9,
           1021.}, {3.9217824*^9, 1049.5695403218704`}, {3.9223872*^9, 
          1049.5695403218704`}, {3.922992*^9, 1049.5695403218704`}, {
          3.9242016*^9, 1049.5695403218704`}, {3.9248064*^9, 
          1049.5695403218704`}, {3.9254112*^9, 1040.991762465686}, {
          3.926016*^9, 1040.991762465686}, {3.9266208*^9, 
          1040.991762465686}}]}, Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[{
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[{{3.916944*^9, 1033.9796598962816`}, {3.9181536*^9, 
          1033.9796598962816`}, {3.9187584*^9, 1019.3052233598728`}, {
          3.9193632*^9, 1003.6361483805308`}, {3.919968*^9, 
          1005.2904785710278`}, {3.9205728*^9, 1035.1049352942646`}, {
          3.9211776*^9, 1035.1049352942646`}, {3.9217824*^9, 
          1060.8443335662753`}, {3.9223872*^9, 1060.8443335662753`}, {
          3.922992*^9, 1093.1632864544683`}, {3.9242016*^9, 
          1088.357915269465}, {3.9248064*^9, 1078.3766410754313`}, {
          3.9254112*^9, 1069.753087680394}, {3.926016*^9, 
          1069.753087680394}, {3.9266208*^9, 1069.753087680394}}]}, 
        Annotation[#, "Charting`Private`Tag#9"]& ], 
       TagBox[{
         Hue[0.7946117974981064, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0]], 
         LineBox[{{3.916944*^9, 1030.72110583411}, {3.9181536*^9, 
          1030.72110583411}, {3.9187584*^9, 1030.72110583411}, {3.9193632*^9, 
          1030.72110583411}, {3.919968*^9, 1030.72110583411}, {3.9205728*^9, 
          1030.72110583411}, {3.9211776*^9, 1030.72110583411}, {3.9217824*^9, 
          1030.72110583411}, {3.9223872*^9, 1030.72110583411}, {3.922992*^9, 
          1030.72110583411}, {3.9242016*^9, 1051.8661254993049`}, {
          3.9248064*^9, 1051.8661254993049`}, {3.9254112*^9, 
          1074.7136056463505`}, {3.926016*^9, 1090.7995874055919`}, {
          3.9266208*^9, 1090.7995874055919`}}]}, 
        Annotation[#, "Charting`Private`Tag#10"]& ], 
       TagBox[{
         Hue[0.030679774997896203`, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[{{3.9181536*^9, 999.}, {3.9187584*^9, 999.}, {3.9193632*^9, 
          993.9272268406029}, {3.919968*^9, 1023.5679633700164`}, {
          3.9205728*^9, 1011.7656298445899`}, {3.9211776*^9, 
          1053.176155259989}, {3.9217824*^9, 1053.176155259989}, {
          3.9223872*^9, 1053.176155259989}, {3.922992*^9, 
          1053.176155259989}, {3.9242016*^9, 1048.6332999733754`}, {
          3.9248064*^9, 1048.6332999733754`}, {3.9254112*^9, 
          1052.1544276350237`}, {3.926016*^9, 1100.8981104944014`}, {
          3.9266208*^9, 1148.384371495527}}]}, 
        Annotation[#, "Charting`Private`Tag#11"]& ], 
       TagBox[{
         Hue[0.266747752497686, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[{{3.916944*^9, 1014.4792686208237`}, {3.9181536*^9, 
          1050.4792686208239`}, {3.9187584*^9, 1079.3888640883513`}, {
          3.9193632*^9, 1075.3414849527644`}, {3.919968*^9, 
          1075.3414849527644`}, {3.9205728*^9, 1075.3414849527644`}, {
          3.9211776*^9, 1075.3414849527644`}, {3.9217824*^9, 
          1111.1677881921394`}, {3.9223872*^9, 1170.3601134158466`}, {
          3.9226914803402333`*^9, 1200.}}]}, 
        Annotation[#, "Charting`Private`Tag#12"]& ], 
       TagBox[{
         Hue[0.5028157299974758, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.3, 0, 0]], 
         LineBox[{{3.916944*^9, 1054.8600088706903`}, {3.9181536*^9, 
          1054.8600088706903`}, {3.9187584*^9, 1054.8600088706903`}, {
          3.9193632*^9, 1048.9666566669894`}, {3.919968*^9, 
          1082.0751956921356`}, {3.9205728*^9, 1102.8943583347811`}, {
          3.9211776*^9, 1124.58393149571}, {3.9217824*^9, 
          1110.2362646848717`}, {3.9223872*^9, 1110.2362646848717`}, {
          3.922992*^9, 1110.2362646848717`}, {3.9242016*^9, 
          1136.0078327806395`}, {3.9248064*^9, 1136.0078327806395`}, {
          3.9254112*^9, 1136.0078327806395`}, {3.926016*^9, 
          1153.569853738395}, {3.9266208*^9, 1153.569853738395}}]}, 
        Annotation[#, "Charting`Private`Tag#13"]& ], 
       TagBox[{
         Hue[0.7388837074972656, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.3, 0.3, 0.5]], 
         LineBox[{{3.916944*^9, 979.7687367046726}, {3.9181536*^9, 
          979.7687367046726}, {3.9187584*^9, 1007.7387798552995`}, {
          3.9193632*^9, 1007.7387798552995`}, {3.919968*^9, 
          999.3321263561097}, {3.9205728*^9, 1011.3811736870649`}, {
          3.9211776*^9, 1043.1607359483455`}, {3.9217824*^9, 
          1043.1607359483455`}, {3.9223872*^9, 1061.8646765754672`}, {
          3.922992*^9, 1061.8646765754672`}, {3.9242016*^9, 
          1061.8646765754672`}, {3.9248064*^9, 1061.8646765754672`}, {
          3.9254112*^9, 1079.0879340274637`}, {3.926016*^9, 
          1079.0879340274637`}, {3.9266208*^9, 1079.0879340274637`}}]}, 
        Annotation[#, "Charting`Private`Tag#14"]& ], 
       TagBox[{
         Hue[0.9749516849970554, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0.6, 0.6, 0]], 
         LineBox[{{3.916944*^9, 980.5387572570381}, {3.9181536*^9, 
          980.5387572570381}, {3.9187584*^9, 966.4316387944871}, {
          3.9193632*^9, 994.8482489280271}, {3.919968*^9, 
          986.7514904856065}, {3.9205728*^9, 994.7910650206766}, {
          3.9211776*^9, 999.5101857065395}, {3.9217824*^9, 
          977.547265558784}, {3.9223872*^9, 977.547265558784}, {3.922992*^9, 
          977.547265558784}, {3.9242016*^9, 972.8749956723227}, {3.9248064*^9,
           972.8749956723227}, {3.9254112*^9, 989.63037017061}, {3.926016*^9, 
          989.63037017061}, {3.9266208*^9, 989.63037017061}}]}, 
        Annotation[#, "Charting`Private`Tag#15"]& ]}}, {{{{{{}, {
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1132.0865860023202`}], 
                
                Offset[{2.3001719816752293`, -1.9259306463931272`}, {
                 3.927015936*^9, 1132.0865860023202`}], 
                Offset[{0, 0}, {3.927596544*^9, 1107.7005910106525`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1107.7005910106525`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1107.7005910106525`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1107.7005910106525`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1132.0865860023202`}], 
                
                Offset[{2.3001719816752293`, -1.9259306463931272`}, {
                 3.927015936*^9, 1132.0865860023202`}], 
                Offset[{0, 0}, {3.927596544*^9, 1107.7005910106525`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1107.7005910106525`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1107.7005910106525`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1107.7005910106525`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{96., 7.000000000000021}, {3.927596544*^9, 
                 1107.7005910106525`}], 
                
                Offset[{96., -6.999999999999979}, {3.927596544*^9, 
                 1107.7005910106525`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1107.7005910106525`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1107.7005910106525`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 1          \"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{53., 1.176836406102666*^-14}, {3.927596544*^9, 
               1107.7005910106525`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1155.7917435219665`}], 
                
                Offset[{1.8739260542839125`, 2.3427336901739233`}, {
                 3.927015936*^9, 1155.7917435219665`}], 
                Offset[{0, 0}, {3.927596544*^9, 1192.2025768711574`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1192.2025768711574`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1192.2025768711574`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1192.2025768711574`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1155.7917435219665`}], 
                
                Offset[{1.8739260542839125`, 2.3427336901739233`}, {
                 3.927015936*^9, 1155.7917435219665`}], 
                Offset[{0, 0}, {3.927596544*^9, 1192.2025768711574`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1192.2025768711574`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1192.2025768711574`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1192.2025768711574`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                Offset[{68., 7.000000000000015}, {3.927596544*^9, 
                 1192.2025768711574`}], 
                
                Offset[{68., -6.999999999999985}, {3.927596544*^9, 
                 1192.2025768711574`}], 
                
                Offset[{10., -6.999999999999997}, {3.927596544*^9, 
                 1192.2025768711574`}], 
                
                Offset[{10., 7.000000000000003}, {3.927596544*^9, 
                 1192.2025768711574`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 3\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.927596544*^9, 
               1192.2025768711574`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1161.2877446698412`}], 
                
                Offset[{1.465121794475679, 2.617903383884204}, {
                 3.927015936*^9, 1161.2877446698412`}], 
                Offset[{0, 0}, {3.927596544*^9, 1213.3280733759423`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1213.3280733759423`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1213.3280733759423`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1213.3280733759423`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1161.2877446698412`}], 
                
                Offset[{1.465121794475679, 2.617903383884204}, {
                 3.927015936*^9, 1161.2877446698412`}], 
                Offset[{0, 0}, {3.927596544*^9, 1213.3280733759423`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1213.3280733759423`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1213.3280733759423`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1213.3280733759423`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.927596544*^9, 
                 1213.3280733759423`}], 
                
                Offset[{68., -6.999999999999985}, {3.927596544*^9, 
                 1213.3280733759423`}], 
                
                Offset[{10., -6.999999999999997}, {3.927596544*^9, 
                 1213.3280733759423`}], 
                
                Offset[{10., 7.000000000000003}, {3.927596544*^9, 
                 1213.3280733759423`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 7\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.927596544*^9, 
               1213.3280733759423`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1150.8807222469823`}], 
                
                Offset[{2.9984745416634784`, -0.09565784335846104}, {
                 3.927015936*^9, 1150.8807222469823`}], 
                Offset[{0, 0}, {3.927596544*^9, 1149.9515839419907`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1149.9515839419907`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1149.9515839419907`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1149.9515839419907`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1150.8807222469823`}], 
                
                Offset[{2.9984745416634784`, -0.09565784335846104}, {
                 3.927015936*^9, 1150.8807222469823`}], 
                Offset[{0, 0}, {3.927596544*^9, 1149.9515839419907`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1149.9515839419907`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1149.9515839419907`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1149.9515839419907`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1149.9515839419907`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1149.9515839419907`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1149.9515839419907`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1149.9515839419907`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 10\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1149.9515839419907`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1040.991762465686}], 
                
                Offset[{2.560049488817143, -1.5640161811206061`}, {
                 3.927015936*^9, 1040.991762465686}], 
                Offset[{0, 0}, {3.927596544*^9, 1023.1986048259124`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1023.1986048259124`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1986048259124`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1986048259124`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1040.991762465686}], 
                
                Offset[{2.560049488817143, -1.5640161811206061`}, {
                 3.927015936*^9, 1040.991762465686}], 
                Offset[{0, 0}, {3.927596544*^9, 1023.1986048259124`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1023.1986048259124`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1986048259124`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1023.1986048259124`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1023.1986048259124`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1023.1986048259124`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1023.1986048259124`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1023.1986048259124`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 11\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1023.1986048259124`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1069.753087680394}], 
                
                Offset[{2.259845582773784, -1.9730934955084662`}, {
                 3.927015936*^9, 1069.753087680394}], 
                Offset[{0, 0}, {3.927596544*^9, 1044.3241014988157`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1044.3241014988157`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1044.3241014988157`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1044.3241014988157`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1069.753087680394}], 
                
                Offset[{2.259845582773784, -1.9730934955084662`}, {
                 3.927015936*^9, 1069.753087680394}], 
                Offset[{0, 0}, {3.927596544*^9, 1044.3241014988157`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1044.3241014988157`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1044.3241014988157`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1044.3241014988157`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1044.3241014988157`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1044.3241014988157`}], 
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1044.3241014988157`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1044.3241014988157`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 12\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1044.3241014988157`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1090.7995874055919`}], 
                
                Offset[{2.968930630172575, -0.43064012031286414`}, {
                 3.927015936*^9, 1090.7995874055919`}], 
                Offset[{0, 0}, {3.927596544*^9, 1086.5750945188008`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1086.5750945188008`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1086.5750945188008`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1086.5750945188008`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1090.7995874055919`}], 
                
                Offset[{2.968930630172575, -0.43064012031286414`}, {
                 3.927015936*^9, 1090.7995874055919`}], 
                Offset[{0, 0}, {3.927596544*^9, 1086.5750945188008`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1086.5750945188008`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1086.5750945188008`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1086.5750945188008`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1086.5750945188008`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1086.5750945188008`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1086.5750945188008`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1086.5750945188008`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 13\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1086.5750945188008`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1148.384371495527}], 
                
                Offset[{2.4905372396055094`, -1.6724904358883999`}, {
                 3.927015936*^9, 1148.384371495527}], 
                Offset[{0, 0}, {3.927596544*^9, 1128.8260874812734`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1128.8260874812734`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1128.8260874812734`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1128.8260874812734`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1148.384371495527}], 
                
                Offset[{2.4905372396055094`, -1.6724904358883999`}, {
                 3.927015936*^9, 1148.384371495527}], 
                Offset[{0, 0}, {3.927596544*^9, 1128.8260874812734`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1128.8260874812734`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1128.8260874812734`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1128.8260874812734`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1128.8260874812734`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1128.8260874812734`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1128.8260874812734`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1128.8260874812734`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 14\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1128.8260874812734`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1153.569853738395}], 
                
                Offset[{2.5712136631157483`, 1.545593833646762}, {
                 3.927015936*^9, 1153.569853738395}], 
                Offset[{0, 0}, {3.927596544*^9, 1171.0770804023286`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1171.0770804023286`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1171.0770804023286`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1171.0770804023286`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1153.569853738395}], 
                
                Offset[{2.5712136631157483`, 1.545593833646762}, {
                 3.927015936*^9, 1153.569853738395}], 
                Offset[{0, 0}, {3.927596544*^9, 1171.0770804023286`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1171.0770804023286`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1171.0770804023286`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1171.0770804023286`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1171.0770804023286`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1171.0770804023286`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1171.0770804023286`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1171.0770804023286`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 28\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1171.0770804023286`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1079.0879340274637`}], 
                
                Offset[{2.7168722546029542`, -1.272244140158901}, {
                 3.927015936*^9, 1079.0879340274637`}], 
                Offset[{0, 0}, {3.927596544*^9, 1065.4495980214206`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1065.4495980214206`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1065.4495980214206`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1065.4495980214206`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1079.0879340274637`}], 
                
                Offset[{2.7168722546029542`, -1.272244140158901}, {
                 3.927015936*^9, 1079.0879340274637`}], 
                Offset[{0, 0}, {3.927596544*^9, 1065.4495980214206`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 1065.4495980214206`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1065.4495980214206`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 1065.4495980214206`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 1065.4495980214206`}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 1065.4495980214206`}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 1065.4495980214206`}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 1065.4495980214206`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 29\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               1065.4495980214206`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 989.63037017061}], 
                
                Offset[{2.9999999999999996`, -4.565050559790333*^-8}, {
                 3.927015936*^9, 989.63037017061}], 
                Offset[{0, 0}, {3.927596544*^9, 989.6303697274258}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 989.6303697274258}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 989.6303697274258}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 989.6303697274258}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 989.63037017061}], 
                
                Offset[{2.9999999999999996`, -4.565050559790333*^-8}, {
                 3.927015936*^9, 989.63037017061}], 
                Offset[{0, 0}, {3.927596544*^9, 989.6303697274258}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.927596544*^9, 
                 989.6303697274258}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 989.6303697274258}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.927596544*^9, 
                 989.6303697274258}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.927596544*^9, 
                 989.6303697274258}], 
                
                Offset[{73., -6.999999999999984}, {3.927596544*^9, 
                 989.6303697274258}], 
                
                Offset[{10., -6.999999999999998}, {3.927596544*^9, 
                 989.6303697274258}], 
                
                Offset[{10., 7.000000000000002}, {3.927596544*^9, 
                 989.6303697274258}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 33\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.927596544*^9, 
               989.6303697274258}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.916944*^9, 900.000000000002},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"Seasonal Rating (SR)\"", HoldForm], TraditionalForm], 
        None}, {None, None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {{3.9157344*^9, 3.916944*^9, 3.9181536*^9, 3.9187584*^9, 
       3.9193632*^9, 3.919968*^9, 3.9205728*^9, 3.9211776*^9, 3.9217824*^9, 
       3.9217824*^9, 3.9223872*^9, 3.922992*^9, 3.9242016*^9, 3.9248064*^9, 
       3.9254112*^9, 3.926016*^9, 3.9266208*^9}, {1000, 1050, 1100, 1150, 
       1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 
       1750}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, 140.8}, {All, All}}, 
     ImageSize -> Scaled[0.75], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& )}}, PlotLabel -> 
     FormBox["\"Spreminjaje SR skozi \[CHacek]as za obdobje februar - junij \
2024\"", TraditionalForm], 
     PlotRange -> {{3.916944*^9, 3.9266208*^9}, {900., 1200.}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Player ID: 0 \"", "\"Player ID: 1 \"", "\"Player ID: 3 \"", 
       "\"Player ID: 4 \"", "\"Player ID: 7 \"", "\"Player ID: 8 \"", 
       "\"Player ID: 10\"", "\"Player ID: 11\"", "\"Player ID: 12\"", 
       "\"Player ID: 13\"", "\"Player ID: 14\"", "\"Player ID: 16\"", 
       "\"Player ID: 28\"", "\"Player ID: 29\"", "\"Player ID: 33\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #10, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #11, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #13, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0.3, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0.3, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #14, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.6, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.6, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0.5]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.6, 0.4, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.3, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.3, 0.3, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.6, 0.6, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.926917574097044*^9, 3.926917693355846*^9, 
  3.926917789572451*^9, 3.926950221565554*^9, 3.927015305849552*^9, 
  3.92702302573193*^9, 3.927028099313244*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"9a9538d7-a5e6-9942-888c-6e2d76dfc0c3"]
}, Open  ]],

Cell["\<\
Tu pa je boj za mesta \[SHacek]e veliko bolj odprt. Kar 5 igralcev (7, 3, 28, \
10, 14) se neposredno bori za 5. mesto, jim je pa igralec 1 takoj za petami. \
Njegova krivulja se sicer obra\[CHacek]a navzdol, a to \[SHacek]e ne pomeni, \
da ne bo presenetil naslednji\[CHacek]. Vsi te igralci se nahajajo znotraj \
dobrih 30 to\[CHacek]k. Glede na formo iz prej\[SHacek]nje tekme so glavni \
kandidati igralci 3, 10 in 14, kjer izstopa konsistenca igralca 10, ki je v \
primerjavi z preostalima bolj nihajo\[CHacek]a. Po drugi strani tudi igralec \
28 vztrajno pleza. Njegovo nadvlado nad to skupino prepre\[CHacek]ujejo \
pogoste odsotnosti, je veliko bolj konsisten\[CHacek]en od prej omenjenih in \
v primeru, da bo do konca sezone redno obiskoval rekreacijo, je prav oni \
najresnej\[SHacek]i kandidat za kon\[CHacek]no 5. mesto. Vseeno pa ne smemo \
pozabiti, da se lahko kljub vsem \[SHacek]e vedno spoprimerjo tudi za 4. \
mesto, ki je trenutno oddaljeno slabih 100 to\[CHacek]k.

Podobno bitko bijejo igralci 13, 29, 12, 11, le da kak\[SHacek]nih 50 to\
\[CHacek]k ni\[ZHacek]je. Glede na njihovo igro se verjetno ne bodo uspeli \
potegovati za 5. mesto. Verjetno bo razmak med njimi in tekmeci za 5.mesto le \
\[SHacek]e narastel. Igralec 33 pa se bolj kot s komurkoli bori z magi\
\[CHacek]no mejo 1000 to\[CHacek]k. 

Za kon\[CHacek]en pogled a SR razvrstitev pa si lahko pomagamo \[SHacek]e s \
podatki iz prej\[SHacek]nih sezon:
\
\>", "Text",
 CellChangeTimes->{{3.926917920501137*^9, 3.926918295026264*^9}, {
  3.926918801336485*^9, 3.926918944105137*^9}, {3.9269189893277435`*^9, 
  3.9269190586816387`*^9}, {3.9269194306932793`*^9, 3.926919663793604*^9}, {
  3.926919948236767*^9, 3.926919948638857*^9}, {3.926920086386137*^9, 
  3.9269200872033234`*^9}},ExpressionUUID->"93858a96-a57a-444a-b2c4-\
b8807a37b432"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeasonsFinal", " ", "=", " ", 
   RowBox[{"UploadSF", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<id\>\"", ",", " ", "\"\<SR season 1\>\"", ",", " ", 
       "\"\<SR season 2\>\"", ",", " ", "\"\<SR season 3\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Season1Final", " ", "=", " ", 
   RowBox[{"UploadSF", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", " ", "\"\<SR season 1\>\"", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Season2Final", " ", "=", " ", 
   RowBox[{"UploadSF", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", "\"\<SR season 2\>\"", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Season3Final", " ", "=", " ", 
   RowBox[{"UploadSF", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", "\"\<SR season 3\>\"", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Season123Final", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Season1Final", ",", " ", "Season2Final", ",", " ", "Season3Final"}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.926920094012377*^9, 3.926920139002428*^9}, {
   3.9269201791966515`*^9, 3.926920211292738*^9}, {3.926920287957077*^9, 
   3.926920317550431*^9}, {3.926921488938085*^9, 3.9269214982247353`*^9}, {
   3.926921643313734*^9, 3.926921650298321*^9}, {3.926921840408747*^9, 
   3.926921843541561*^9}, {3.926922079839599*^9, 3.926922104270826*^9}, {
   3.926924234125538*^9, 3.926924234452896*^9}, {3.9269251279726505`*^9, 
   3.926925151438553*^9}, {3.926925192134124*^9, 3.926925228482149*^9}, {
   3.926925554446701*^9, 3.926925652535988*^9}, {3.92692574536991*^9, 
   3.926925776597071*^9}, {3.926925890184414*^9, 3.9269259224267273`*^9}, {
   3.9269260450651245`*^9, 3.926926077203108*^9}, {3.926926110360815*^9, 
   3.926926122683626*^9}, 3.9269262177838535`*^9, {3.9269263757075443`*^9, 
   3.926926381781431*^9}, {3.9269265357635193`*^9, 3.926926537392887*^9}, 
   3.92692656796431*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"da32ee8c-4291-cf42-914a-81515bf4e70f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"SeasonsFinal", ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<0\>\"", ",", " ", "\"\<1\>\"", ",", " ", "\"\<3\>\"", ",", " ", 
          "\"\<4\>\"", ",", "\"\<7\>\"", ",", "\"\<8\>\"", ",", "\"\<10\>\"", 
          ",", " ", "\"\<11\>\"", ",", " ", "\"\<12\>\"", ",", " ", 
          "\"\<13\>\"", ",", " ", "\"\<14\>\"", ",", " ", "\"\<16\>\"", ",", 
          " ", "\"\<28\>\"", ",", " ", "\"\<29\>\"", ",", " ", "\"\<33\>\""}],
          "}"}], ",", " ", "Above"}], "]"}], ",", " ", "None"}], "}"}]}], ",",
    " ", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"950", ",", " ", "1700"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", " ", "->", " ", 
    RowBox[{"Scaled", "[", "0.5", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "1000", ",", " ", "1050", ",", " ", "1100", ",", " ", "1150", ",", " ",
         "1200", ",", " ", "1250", ",", " ", "1300", ",", " ", "1350", ",", 
        " ", "1400", ",", " ", "1450", ",", " ", "1500", ",", " ", "1550", 
        ",", " ", "1600", ",", " ", "1650", ",", " ", "1700"}], "}"}]}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "None", ",", " ", "\"\<SR season 1\>\"", ",", " ", "\"\<SR season 2\>\"",
       ",", " ", "\"\<SR season 3\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<SR igralcev ob koncih prej\[SHacek]njih sezon\>\""}], " ", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Seasonal Rating (SR)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BarSpacing", "->", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926920218263315*^9, 3.926920249540085*^9}, {
   3.926920320964229*^9, 3.9269203651712704`*^9}, {3.92692045387323*^9, 
   3.926920534195036*^9}, {3.926920770721001*^9, 3.9269208059634953`*^9}, {
   3.926920877450215*^9, 3.926921007933371*^9}, {3.926921109880018*^9, 
   3.926921150774723*^9}, {3.92692120554587*^9, 3.926921371435236*^9}, {
   3.9269214450062313`*^9, 3.926921470954721*^9}, {3.926921614720821*^9, 
   3.926921618572724*^9}, {3.926921861667591*^9, 3.926921932391054*^9}, {
   3.9269220619436607`*^9, 3.926922063214327*^9}, {3.926922120017496*^9, 
   3.9269221608503118`*^9}, {3.9269222181796246`*^9, 
   3.9269224469871655`*^9}, {3.926923570782934*^9, 3.926923595992737*^9}, {
   3.926923732940914*^9, 3.926923739871598*^9}, {3.926923801000049*^9, 
   3.926923846350128*^9}, {3.926923920132025*^9, 3.926923924782076*^9}, {
   3.926924087831724*^9, 3.926924088481882*^9}, {3.92692424335165*^9, 
   3.926924301434593*^9}, {3.926924395237095*^9, 3.9269244326129436`*^9}, {
   3.926924488022484*^9, 3.9269245912721596`*^9}, {3.926924912377741*^9, 
   3.926924941648201*^9}, {3.926925200535343*^9, 3.926925205077366*^9}, {
   3.926925235247053*^9, 3.92692523536907*^9}, {3.9269252707151375`*^9, 
   3.9269252908618507`*^9}, {3.926925634893446*^9, 3.9269256682554646`*^9}, {
   3.926925725366207*^9, 3.926925742642294*^9}, {3.9269257846484222`*^9, 
   3.926925797402895*^9}, {3.926925930027479*^9, 3.926925930681629*^9}, {
   3.926926054786351*^9, 3.9269260555085106`*^9}, 3.92692623477372*^9, {
   3.926926545609015*^9, 3.926926557138777*^9}, {3.926950128274805*^9, 
   3.926950157339327*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"5985681e-9406-b744-aad0-b869634edf45"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.504799999999999, 950.}, {59.91999999999996, 
       950.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{0.6800000000000002, 0.}, {1.4800000000000002`, 
               0.}, "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> 
              "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{1.6800000000000002`, 0.}, {2.4800000000000004`, 
               998.}, "RoundingRadius" -> 0], StatusArea[#, 998]& , 
              TagBoxNote -> "998"], 
             StyleBox["998", {}, StripOnInput -> False]], Annotation[#, 
             Style[998, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{2.6800000000000006`, 0.}, {3.4800000000000004`, 
               1019.}, "RoundingRadius" -> 0], StatusArea[#, 1019]& , 
              TagBoxNote -> "1019"], 
             StyleBox["1019", {}, StripOnInput -> False]], Annotation[#, 
             Style[1019, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{3.6800000000000006`, 0.}, {4.48, 1223.}, 
               "RoundingRadius" -> 0], StatusArea[#, 1223]& , TagBoxNote -> 
              "1223"], 
             StyleBox["1223", {}, StripOnInput -> False]], Annotation[#, 
             Style[1223, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{4.640000000000001, 0.}, {5.44, 1.}, 
               "RoundingRadius" -> 0], StatusArea[#, 1]& , TagBoxNote -> "1"], 
             StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{5.640000000000001, 0.}, {6.44, 1178.}, 
               "RoundingRadius" -> 0], StatusArea[#, 1178]& , TagBoxNote -> 
              "1178"], 
             StyleBox["1178", {}, StripOnInput -> False]], Annotation[#, 
             Style[1178, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{6.640000000000001, 0.}, {7.44, 1118.}, 
               "RoundingRadius" -> 0], StatusArea[#, 1118]& , TagBoxNote -> 
              "1118"], 
             StyleBox["1118", {}, StripOnInput -> False]], Annotation[#, 
             Style[1118, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{7.640000000000001, 0.}, {8.440000000000001, 
               1152.}, "RoundingRadius" -> 0], StatusArea[#, 1152]& , 
              TagBoxNote -> "1152"], 
             StyleBox["1152", {}, StripOnInput -> False]], Annotation[#, 
             Style[1152, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{8.600000000000001, 0.}, {9.400000000000002, 3.}, 
               "RoundingRadius" -> 0], StatusArea[#, 3]& , TagBoxNote -> "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{9.600000000000001, 0.}, {10.400000000000002`, 
               1172.}, "RoundingRadius" -> 0], StatusArea[#, 1172]& , 
              TagBoxNote -> "1172"], 
             StyleBox["1172", {}, StripOnInput -> False]], Annotation[#, 
             Style[1172, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{10.600000000000001`, 0.}, {11.400000000000002`, 
               1027.}, "RoundingRadius" -> 0], StatusArea[#, 1027]& , 
              TagBoxNote -> "1027"], 
             StyleBox["1027", {}, StripOnInput -> False]], Annotation[#, 
             Style[1027, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{11.600000000000001`, 0.}, {12.400000000000002`, 
               1082.}, "RoundingRadius" -> 0], StatusArea[#, 1082]& , 
              TagBoxNote -> "1082"], 
             StyleBox["1082", {}, StripOnInput -> False]], Annotation[#, 
             Style[1082, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{12.560000000000002`, 0.}, {13.360000000000003`, 
               4.}, "RoundingRadius" -> 0], StatusArea[#, 4]& , TagBoxNote -> 
              "4"], 
             StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
             Style[4, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{13.560000000000002`, 0.}, {14.360000000000003`, 
               1327.}, "RoundingRadius" -> 0], StatusArea[#, 1327]& , 
              TagBoxNote -> "1327"], 
             StyleBox["1327", {}, StripOnInput -> False]], Annotation[#, 
             Style[1327, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{14.560000000000002`, 0.}, {15.360000000000003`, 
               1222.}, "RoundingRadius" -> 0], StatusArea[#, 1222]& , 
              TagBoxNote -> "1222"], 
             StyleBox["1222", {}, StripOnInput -> False]], Annotation[#, 
             Style[1222, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{15.560000000000002`, 0.}, {16.360000000000003`, 
               1105.}, "RoundingRadius" -> 0], StatusArea[#, 1105]& , 
              TagBoxNote -> "1105"], 
             StyleBox["1105", {}, StripOnInput -> False]], Annotation[#, 
             Style[1105, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{16.520000000000003`, 0.}, {17.320000000000004`, 
               7.}, "RoundingRadius" -> 0], StatusArea[#, 7]& , TagBoxNote -> 
              "7"], 
             StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
             Style[7, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{17.520000000000003`, 0.}, {18.320000000000004`, 
               1337.}, "RoundingRadius" -> 0], StatusArea[#, 1337]& , 
              TagBoxNote -> "1337"], 
             StyleBox["1337", {}, StripOnInput -> False]], Annotation[#, 
             Style[1337, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{18.520000000000003`, 0.}, {19.320000000000004`, 
               1155.}, "RoundingRadius" -> 0], StatusArea[#, 1155]& , 
              TagBoxNote -> "1155"], 
             StyleBox["1155", {}, StripOnInput -> False]], Annotation[#, 
             Style[1155, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{19.520000000000003`, 0.}, {20.320000000000004`, 
               1318.}, "RoundingRadius" -> 0], StatusArea[#, 1318]& , 
              TagBoxNote -> "1318"], 
             StyleBox["1318", {}, StripOnInput -> False]], Annotation[#, 
             Style[1318, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{20.480000000000004`, 0.}, {21.280000000000005`, 
               8.}, "RoundingRadius" -> 0], StatusArea[#, 8]& , TagBoxNote -> 
              "8"], 
             StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
             Style[8, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{21.480000000000004`, 0.}, {22.280000000000005`, 
               1466.}, "RoundingRadius" -> 0], StatusArea[#, 1466]& , 
              TagBoxNote -> "1466"], 
             StyleBox["1466", {}, StripOnInput -> False]], Annotation[#, 
             Style[1466, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{22.480000000000004`, 0.}, {23.280000000000005`, 
               1569.}, "RoundingRadius" -> 0], StatusArea[#, 1569]& , 
              TagBoxNote -> "1569"], 
             StyleBox["1569", {}, StripOnInput -> False]], Annotation[#, 
             Style[1569, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{23.480000000000004`, 0.}, {24.280000000000005`, 
               1508.}, "RoundingRadius" -> 0], StatusArea[#, 1508]& , 
              TagBoxNote -> "1508"], 
             StyleBox["1508", {}, StripOnInput -> False]], Annotation[#, 
             Style[1508, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{24.440000000000005`, 0.}, {25.240000000000006`, 
               10.}, "RoundingRadius" -> 0], StatusArea[#, 10]& , TagBoxNote -> 
              "10"], 
             StyleBox["10", {}, StripOnInput -> False]], Annotation[#, 
             Style[10, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{25.440000000000005`, 0.}, {26.240000000000006`, 
               1250.}, "RoundingRadius" -> 0], StatusArea[#, 1250]& , 
              TagBoxNote -> "1250"], 
             StyleBox["1250", {}, StripOnInput -> False]], Annotation[#, 
             Style[1250, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{26.440000000000005`, 0.}, {27.240000000000006`, 
               1278.}, "RoundingRadius" -> 0], StatusArea[#, 1278]& , 
              TagBoxNote -> "1278"], 
             StyleBox["1278", {}, StripOnInput -> False]], Annotation[#, 
             Style[1278, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{27.440000000000005`, 0.}, {28.240000000000006`, 
               1033.}, "RoundingRadius" -> 0], StatusArea[#, 1033]& , 
              TagBoxNote -> "1033"], 
             StyleBox["1033", {}, StripOnInput -> False]], Annotation[#, 
             Style[1033, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{28.400000000000006`, 0.}, {29.200000000000006`, 
               11.}, "RoundingRadius" -> 0], StatusArea[#, 11]& , TagBoxNote -> 
              "11"], 
             StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
             Style[11, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{29.400000000000006`, 0.}, {30.200000000000006`, 
               1101.}, "RoundingRadius" -> 0], StatusArea[#, 1101]& , 
              TagBoxNote -> "1101"], 
             StyleBox["1101", {}, StripOnInput -> False]], Annotation[#, 
             Style[1101, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{30.400000000000006`, 0.}, {31.200000000000006`, 
               1013.}, "RoundingRadius" -> 0], StatusArea[#, 1013]& , 
              TagBoxNote -> "1013"], 
             StyleBox["1013", {}, StripOnInput -> False]], Annotation[#, 
             Style[1013, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{31.400000000000006`, 0.}, {32.2, 1142.}, 
               "RoundingRadius" -> 0], StatusArea[#, 1142]& , TagBoxNote -> 
              "1142"], 
             StyleBox["1142", {}, StripOnInput -> False]], Annotation[#, 
             Style[1142, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{32.36, 0.}, {33.16, 12.}, "RoundingRadius" -> 0], 
              StatusArea[#, 12]& , TagBoxNote -> "12"], 
             StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
             Style[12, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{33.36, 0.}, {34.16, 1050.}, "RoundingRadius" -> 
               0], StatusArea[#, 1050]& , TagBoxNote -> "1050"], 
             StyleBox["1050", {}, StripOnInput -> False]], Annotation[#, 
             Style[1050, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{34.36, 0.}, {35.16, 1201.}, "RoundingRadius" -> 
               0], StatusArea[#, 1201]& , TagBoxNote -> "1201"], 
             StyleBox["1201", {}, StripOnInput -> False]], Annotation[#, 
             Style[1201, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{35.36, 0.}, {36.16, 1097.}, "RoundingRadius" -> 
               0], StatusArea[#, 1097]& , TagBoxNote -> "1097"], 
             StyleBox["1097", {}, StripOnInput -> False]], Annotation[#, 
             Style[1097, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{36.31999999999999, 0.}, {37.11999999999999, 13.}, 
               "RoundingRadius" -> 0], StatusArea[#, 13]& , TagBoxNote -> 
              "13"], 
             StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
             Style[13, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{37.31999999999999, 0.}, {38.11999999999999, 
               1148.}, "RoundingRadius" -> 0], StatusArea[#, 1148]& , 
              TagBoxNote -> "1148"], 
             StyleBox["1148", {}, StripOnInput -> False]], Annotation[#, 
             Style[1148, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{38.31999999999999, 0.}, {39.11999999999999, 
               1118.}, "RoundingRadius" -> 0], StatusArea[#, 1118]& , 
              TagBoxNote -> "1118"], 
             StyleBox["1118", {}, StripOnInput -> False]], Annotation[#, 
             Style[1118, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{39.31999999999999, 0.}, {40.11999999999999, 
               1320.}, "RoundingRadius" -> 0], StatusArea[#, 1320]& , 
              TagBoxNote -> "1320"], 
             StyleBox["1320", {}, StripOnInput -> False]], Annotation[#, 
             Style[1320, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{40.27999999999999, 0.}, {41.079999999999984`, 
               14.}, "RoundingRadius" -> 0], StatusArea[#, 14]& , TagBoxNote -> 
              "14"], 
             StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
             Style[14, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{41.27999999999999, 0.}, {42.079999999999984`, 
               1131.}, "RoundingRadius" -> 0], StatusArea[#, 1131]& , 
              TagBoxNote -> "1131"], 
             StyleBox["1131", {}, StripOnInput -> False]], Annotation[#, 
             Style[1131, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{42.27999999999999, 0.}, {43.079999999999984`, 
               1069.}, "RoundingRadius" -> 0], StatusArea[#, 1069]& , 
              TagBoxNote -> "1069"], 
             StyleBox["1069", {}, StripOnInput -> False]], Annotation[#, 
             Style[1069, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{43.27999999999999, 0.}, {44.079999999999984`, 
               1263.}, "RoundingRadius" -> 0], StatusArea[#, 1263]& , 
              TagBoxNote -> "1263"], 
             StyleBox["1263", {}, StripOnInput -> False]], Annotation[#, 
             Style[1263, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{44.23999999999998, 0.}, {45.03999999999998, 16.}, 
               "RoundingRadius" -> 0], StatusArea[#, 16]& , TagBoxNote -> 
              "16"], 
             StyleBox["16", {}, StripOnInput -> False]], Annotation[#, 
             Style[16, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{45.23999999999998, 0.}, {46.03999999999998, 
               1370.}, "RoundingRadius" -> 0], StatusArea[#, 1370]& , 
              TagBoxNote -> "1370"], 
             StyleBox["1370", {}, StripOnInput -> False]], Annotation[#, 
             Style[1370, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{46.23999999999998, 0.}, {47.03999999999998, 
               1102.}, "RoundingRadius" -> 0], StatusArea[#, 1102]& , 
              TagBoxNote -> "1102"], 
             StyleBox["1102", {}, StripOnInput -> False]], Annotation[#, 
             Style[1102, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{47.23999999999998, 0.}, {48.03999999999998, 
               1283.}, "RoundingRadius" -> 0], StatusArea[#, 1283]& , 
              TagBoxNote -> "1283"], 
             StyleBox["1283", {}, StripOnInput -> False]], Annotation[#, 
             Style[1283, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{48.199999999999974`, 0.}, {48.99999999999997, 
               28.}, "RoundingRadius" -> 0], StatusArea[#, 28]& , TagBoxNote -> 
              "28"], 
             StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
             Style[28, {}], "Tooltip"]& ]}, {}, {}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{51.199999999999974`, 0.}, {51.99999999999997, 
               1417.}, "RoundingRadius" -> 0], StatusArea[#, 1417]& , 
              TagBoxNote -> "1417"], 
             StyleBox["1417", {}, StripOnInput -> False]], Annotation[#, 
             Style[1417, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{52.15999999999997, 0.}, {52.959999999999965`, 
               29.}, "RoundingRadius" -> 0], StatusArea[#, 29]& , TagBoxNote -> 
              "29"], 
             StyleBox["29", {}, StripOnInput -> False]], Annotation[#, 
             Style[29, {}], "Tooltip"]& ]}, {}, {}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{55.15999999999997, 0.}, {55.959999999999965`, 
               1013.}, "RoundingRadius" -> 0], StatusArea[#, 1013]& , 
              TagBoxNote -> "1013"], 
             StyleBox["1013", {}, StripOnInput -> False]], Annotation[#, 
             Style[1013, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{56.11999999999996, 0.}, {56.91999999999996, 33.}, 
               "RoundingRadius" -> 0], StatusArea[#, 33]& , TagBoxNote -> 
              "33"], 
             StyleBox["33", {}, StripOnInput -> False]], Annotation[#, 
             Style[33, {}], "Tooltip"]& ]}, {}, {}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{59.11999999999996, 0.}, {59.91999999999996, 
               1005.}, "RoundingRadius" -> 0], StatusArea[#, 1005]& , 
              TagBoxNote -> "1005"], 
             StyleBox["1005", {}, StripOnInput -> False]], Annotation[#, 
             Style[1005, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2.58, 1223.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"1\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {6.540000000000001, 1178.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"3\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {10.500000000000002`, 1172.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"4\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {14.460000000000003`, 1327.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"7\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {18.42, 1337.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"8\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {22.380000000000003`, 1569.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"10\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {26.340000000000003`, 1278.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"11\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {30.300000000000004`, 1142.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"12\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {34.26, 1201.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"13\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {38.21999999999999, 1320.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"14\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {42.179999999999986`, 1263.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"16\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {46.13999999999998, 1370.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"28\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {50.09999999999997, 1417.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"29\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {54.05999999999997, 1013.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"33\"", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {58.01999999999996, 1005.}], 
       ImageScaled[{0.5, 0}]]}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          
          LineBox[{{-0.504799999999999, 950.0000000000001}, {
           61.12849599999996, 950.0000000000001}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.6800000000000003, 950.0000000000001}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.6800000000000003, 
              950.0000000000001}]}], 
           LineBox[{{59.919999999999966`, 950.0000000000001}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {59.919999999999966`, 
              950.0000000000001}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{4.48, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.48, 
                950.0000000000001}]}], 
             LineBox[{{4.640000000000001, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.640000000000001, 
                950.0000000000001}]}], 
             LineBox[{{8.440000000000001, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.440000000000001, 
                950.0000000000001}]}], 
             LineBox[{{8.600000000000001, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.600000000000001, 
                950.0000000000001}]}], 
             LineBox[{{12.400000000000002`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.400000000000002`, 
                950.0000000000001}]}], 
             LineBox[{{12.560000000000002`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.560000000000002`, 
                950.0000000000001}]}], 
             LineBox[{{16.360000000000003`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.360000000000003`, 
                950.0000000000001}]}], 
             LineBox[{{16.520000000000003`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.520000000000003`, 
                950.0000000000001}]}], 
             LineBox[{{20.320000000000004`, 950.0000000000001}, 
               Offset[{-1.102182119232618*^-15, -6.}, {20.320000000000004`, 
                950.0000000000001}]}], 
             LineBox[{{20.480000000000004`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {20.480000000000004`, 
                950.0000000000001}]}], 
             LineBox[{{24.280000000000005`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {24.280000000000005`, 
                950.0000000000001}]}], 
             LineBox[{{24.440000000000005`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {24.440000000000005`, 
                950.0000000000001}]}], 
             LineBox[{{28.240000000000006`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {28.240000000000006`, 
                950.0000000000001}]}], 
             LineBox[{{28.400000000000006`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {28.400000000000006`, 
                950.0000000000001}]}], 
             LineBox[{{32.2, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {32.2, 
                950.0000000000001}]}], 
             LineBox[{{32.36000000000001, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {32.36000000000001, 
                950.0000000000001}]}], 
             LineBox[{{36.160000000000004`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {36.160000000000004`, 
                950.0000000000001}]}], 
             LineBox[{{36.32, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {36.32, 
                950.0000000000001}]}], 
             LineBox[{{40.12, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {40.12, 
                950.0000000000001}]}], 
             LineBox[{{40.279999999999994`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {40.279999999999994`, 
                950.0000000000001}]}], 
             LineBox[{{44.07999999999999, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {44.07999999999999, 
                950.0000000000001}]}], 
             LineBox[{{44.23999999999999, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {44.23999999999999, 
                950.0000000000001}]}], 
             LineBox[{{48.039999999999985`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {48.039999999999985`, 
                950.0000000000001}]}], 
             LineBox[{{48.19999999999998, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {48.19999999999998, 
                950.0000000000001}]}], 
             LineBox[{{51.99999999999998, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {51.99999999999998, 
                950.0000000000001}]}], 
             LineBox[{{52.159999999999975`, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {52.159999999999975`, 
                950.0000000000001}]}], 
             LineBox[{{55.95999999999997, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {55.95999999999997, 
                950.0000000000001}]}], 
             LineBox[{{56.11999999999997, 950.0000000000001}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {56.11999999999997, 
                950.0000000000001}]}]}}}, 
          StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, {
         "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.504799999999999, 950.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{
        FormBox[
         TagBox["\"Seasonal Rating (SR)\"", HoldForm], TraditionalForm], 
        None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {
      None, {1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500,
        1550, 1600, 1650, 1700}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Scaled[0.5], PlotLabel -> 
     FormBox["\"SR igralcev ob koncih prej\[SHacek]njih sezon\"", 
       TraditionalForm], PlotRange -> {{All, All}, {950, 1700}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "None", "\"SR season 1\"", "\"SR season 2\"", "\"SR season 3\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.27999999999999997`]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.27999999999999997`]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.27999999999999997`]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.928, 0.5210666666666667, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7116405333333333, 0.4816, 0.5483194666666666]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "}"}], ",", 
           
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.92692129183058*^9, 3.926921373794769*^9}, {
   3.9269214728731575`*^9, 3.926921501212956*^9}, 3.9269216212208176`*^9, {
   3.92692184756299*^9, 3.9269218656184044`*^9}, 3.926921935358961*^9, 
   3.926922065956597*^9, {3.926922123487406*^9, 3.9269221636339397`*^9}, 
   3.926922284899107*^9, 3.926922318447958*^9, 3.926922364177603*^9, 
   3.92692245194186*^9, 3.926923601240507*^9, {3.926923735795138*^9, 
   3.926923741487986*^9}, 3.926923849284792*^9, 3.9269239263694344`*^9, 
   3.926924091356919*^9, {3.926924244888998*^9, 3.926924302600857*^9}, {
   3.9269244140584164`*^9, 3.926924435753654*^9}, {3.926924500790364*^9, 
   3.926924594373861*^9}, 3.926924943424671*^9, {3.926925206092594*^9, 
   3.926925235902191*^9}, 3.926925292071125*^9, 3.926925638237753*^9, {
   3.926925669121687*^9, 3.926925684624771*^9}, {3.926925779404726*^9, 
   3.9269257989472446`*^9}, {3.926925918637348*^9, 3.9269259257714825`*^9}, 
   3.926926273968956*^9, {3.926926372267767*^9, 3.926926395504045*^9}, {
   3.926926531537564*^9, 3.926926571198042*^9}, 3.926950221904337*^9, 
   3.926950914816812*^9, 3.926950954295589*^9, 3.927015306631727*^9, 
   3.9270230271158338`*^9, 3.9270280999930744`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"3bc0c933-da34-c646-a9a6-cfc35a897d92"]
}, Open  ]],

Cell["\<\
Podatki dosedaj\[SHacek]njih sezona ka\[ZHacek]ejo, daje ob koncu sezone a \
vrhu stal igralec 8. Opazimo pa, da je delni rezultat ob koncih sezone med \
igralcema 4 in 16, ki se na\[CHacek]eloma borita za drugo mesto 1:2 v korist \
igralca 16. Poleg tega je v zadnji sezoni prav tako bolj\[SHacek]i igralec 16. 
Poglejmo \[SHacek]e boj za 5. mesto: Glede na pretekle rezultate je konkreten \
favorit igralec 28.


\
\>", "Text",
 CellChangeTimes->{{3.9269237584469223`*^9, 3.926923797468956*^9}, {
   3.92692393710701*^9, 3.9269239598207417`*^9}, {3.926924000052761*^9, 
   3.9269240705725822`*^9}, {3.9269241046460133`*^9, 
   3.9269242056694355`*^9}, {3.9269265960900536`*^9, 3.926926652513691*^9}, 
   3.926926688816677*^9},ExpressionUUID->"67f7d863-d945-3a43-a078-\
1f83b255c73b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analiza Matchmaking rating in povezava z SR", "Subsection",
 CellChangeTimes->{{3.926926698884144*^9, 3.926926712060398*^9}, {
  3.926926754090611*^9, 3.926926773601559*^9}, {3.926951304074844*^9, 
  3.9269513072705917`*^9}},ExpressionUUID->"ea1c8f65-080d-154d-8f2a-\
992edca957e2"],

Cell["\<\
Matchmaking rating (v nadaljevanju MMR) je tako kot SR rating, ki je pripisan \
vsakemu igralcu. Za razliko od sezonskega naj vpliva celotna statistika \
rekreacije. Njegov namen je narediti kar se da pravi\[CHacek]ne ekipe. \
Temelji na povpre\[CHacek]nih podatkih, tj. povpre\[CHacek]no \[SHacek]tevilo \
igralca zadetkov in asistenc na tekmo, splo\[SHacek]en procent zmage ipd. Ker \
se povpre\[CHacek]je vsakokrat, ko igralec pride, manj spremeni, se tudi MMR \
s \[CHacek]asom vedno manj spreminja. Zato lahko pri\[CHacek]akujemo grafe, \
ki \[OpenCurlyDoubleQuote]konvergirajo\[CloseCurlyDoubleQuote]. \
\[LineSeparator]\[LineSeparator]Ogledali si bomo grafe MMR igralcev, ki smo \
jih opazovali \[ZHacek]e v prvem delu.  \
\>", "Text",
 CellChangeTimes->{{3.9269267852554245`*^9, 3.926927060530951*^9}, {
  3.926951314745825*^9, 
  3.926951325309761*^9}},ExpressionUUID->"064c30cf-2627-c84a-a6e6-\
b9475f984914"],

Cell[BoxData[
 RowBox[{
  RowBox[{"naborMMR", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MMR0", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR1", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR3", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR4", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR7", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR8", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR10", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR11", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR12", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR13", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR14", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR16", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR28", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR29", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"MMR33", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926927380490446*^9, 3.926927505467867*^9}, {
  3.926927563711737*^9, 3.9269276090211735`*^9}, {3.926955537565391*^9, 
  3.926955569538391*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"5db78c04-04d7-e14e-959f-003df2c97439"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"naborMMR", ",", "  ", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Matchmaking Rating (MMR)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"GridLines", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "990", ",", " ", "1000", ",", "1010", ",", " ", "1020", ",", "1030", 
        ",", "1040", ",", "1050", ",", "1060", ",", "1070", ",", "1080", ",", 
        "1090", ",", " ", "1100", ",", "1110", ",", "1120", ",", "1130", ",", 
        "1140", ",", "1150", ",", "1160", ",", "1170", ",", "1180", ",", " ", 
        "1190", ",", " ", "1200"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"975", ",", " ", "1200"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Player ID: 0          \>\"", ",", "\"\<Player ID: 1\>\"", ",", 
      "\"\<Player ID: 3\>\"", ",", "\"\<Player ID: 4\>\"", ",", 
      "\"\<Player ID: 7\>\"", ",", "\"\<Player ID: 8\>\"", ",", 
      "\"\<Player ID: 10\>\"", ",", "\"\<Player ID: 11\>\"", ",", 
      "\"\<Player ID: 12\>\"", ",", "\"\<Player ID: 13\>\"", ",", 
      "\"\<Player ID: 14\>\"", ",", "\"\<Player ID: 16\>\"", ",", 
      "\"\<Player ID: 28\>\"", ",", "\"\<Player ID: 29\>\"", ",", 
      "\"\<Player ID: 33\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"Scaled", "[", "0.75", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Player ID: 0 \>\"", ",", "\"\<Player ID: 1 \>\"", ",", 
        "\"\<Player ID: 3 \>\"", ",", "\"\<Player ID: 4 \>\"", ",", 
        "\"\<Player ID: 7 \>\"", ",", "\"\<Player ID: 8 \>\"", ",", 
        "\"\<Player ID: 10\>\"", ",", "\"\<Player ID: 11\>\"", ",", 
        "\"\<Player ID: 12\>\"", ",", "\"\<Player ID: 13\>\"", ",", 
        "\"\<Player ID: 14\>\"", ",", "\"\<Player ID: 16\>\"", ",", 
        "\"\<Player ID: 28\>\"", ",", "\"\<Player ID: 29\>\"", ",", 
        "\"\<Player ID: 33\>\""}], "}"}], ",", " ", "Below"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Spreminjaje MMR skozi \[CHacek]as za obdobje: september 2022 - junij \
2024\>\""}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
     "Red", ",", " ", "Green", ",", " ", "Blue", ",", " ", "Black", ",", " ", 
      "Gray", ",", " ", "Cyan", ",", " ", "Magenta", ",", " ", "Yellow", ",", 
      " ", "Brown", ",", " ", "Orange", ",", " ", "Pink", ",", " ", "Purple", 
      ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3", ",", "0", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3", ",", "0.3", ",", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.6", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "->", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}], ",", " ", "None"}], 
      "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateTicksFormat", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", " ", "\"\</\>\"", ",", " ", "\"\<Year\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", " ", "]"}]], "Input",
 CellChangeTimes->{{3.926927544923628*^9, 3.926927562165388*^9}, {
  3.926950473238041*^9, 3.926950777228882*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"bbf75447-ac2f-d844-b9e4-59c8639d2691"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxV0l1IU2EYwPFD9oGx2UoQKlnbsGmGpaXoRGnPRbQ+pCHVhbm5hIqo3Kh1
sYucZG7tIlwXUZmVRB9XyciLQUTKJlgXDrf1ZWWOxJXsPDqQXHMOO73vRT4H
DocfL+/L83856lZr4+lVgiDUS++/r/SUPxgXYdZZYmp3evWSO4a/EI8lvhKr
8ieIbbXfiYdOTRIrPDFi36cfxMLyFLFRO03c1xAnTtp/Eut7fxF7gzPE5ZtE
2qdD2meZpX035ui8R36LED2T/Za5xOe1LxAb76eI+wJ/iJMzaWL9xgyxt2ZJ
hLRb1tt1nDnWkhVBXjh/L1TH5+1fFqHMkHIGm/m8HwRcaVtRDoKjND4w2Mbv
//BqXHme4vIaYkvPWuJYYh2xYN6K0P32aI//Gu/rKkTIDbtw7hXviSoRAt3h
56onvCezDQHPxls9Ud6jUSOEc2STwXO32PkHNQgXlyKvPceYO+4WIVSMu1/q
HMxjg9sR/AE0L/J1W16JtD/fFJkG5qGqHQjV69tGPu5mVphKiS3XdyK8d1un
3imZvf2Sy+RXJ/x5zMbFXQihRK55s5w5aagg1tv2IGg+N4w2afn+O3sROk8c
crXv5/O/qURoeeR7fLuA/0/xKgTlM+3CqJX3yKsRBp6eHz5g5z2VNQgPZa4X
Gy4wq5p1CE3ZLQW+K7yvs1a63/mT6tBN3hOpQyguTo043LwnXU/sU+0jFgx6
YqMV/vsvUFKVCg==
          "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxV0ntIU1EcwPH1Ukt006GhiZsyn0VoujnNcL9EMLKY/hGF1qYh9JC2UElS
huIDDc1pUFqKZZBJaIL4QNHMRsZ6DXMuE3Ooc1PPWVZmPnK27vmnc+Fy+XAu
957v716/DEVK5k4WixVvP/9d7Ycx9zMC2UZ66PsytcTusMYJyoWaLwgUqr4g
z2uMdUuTlPncKQROSltZ+kXGypivlIfSpylzKoyUOwwzCMQDUxUzBYxZ27MI
VopujguzGUsDTQg8WyeLu2WMH56aR3D0HddVnsV4OcdMWdJgQaCt89laymOs
frWAoL7zyaLmFulzRwjC656C9BHpi8YImp9jlaCS9MmtlPnl3xAo72yxfB+T
/dt+IOhxdqzyNzCWB6wgsKSVpGQNkZ6kXwjy+/Wruc9IT84qgjZ9T7JLI+l5
8BsBb1rF7m4hPcNrCKyGG1E+naRnYZ2yxG3TPp9hrptST3rEfxC87vDj3H7L
2CjbQsD+meBs7SU97dvUuk7PwlCVwLku0JHvI9iF4fshrUk8SL7Pyd2UOdl7
MKxX3tVebSN99x0oG5ccKXMs+zH099U2TXwk97O9MNSGvPRNHSHzEHljCGBf
UYb1k3lcOIBBdTzYQUEsLfXBUGc6N6fpIf2ffDGcbb5cUk6eJ9nk4f971P5+
GNxiG2Y9zGQ/J/wxpO4b5w3YSH+dAMObUgPP30r6XwRgaKqxjllNpN81GINt
zFnau0b6hSEYfDMM26pl0nM+FIO3Q/EltYX0lBzEYKney+udIO9vt/tDR6ut
aJTsf+MwhpZAryCNhuw/MZyap0R5hLL6XgRl42AkBlmeuV46Xs38n/NCDNil
0L1LVMP0uERR1kWKMUjm8s39cYz5adEYYiebPLRJjJXFMZQ5o7EYxDMjmZrT
jOXrxzAkOcXvKCDrHfw4DBH8mOQzxKxECYY2EVfETmQsVQAGfpfQazGhRvIX
zFG3uw==
          "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQDQQPSm+8cfypvqFtKf8EByDfYO7NN44pHdafzJnB
/IYjt1D4F17fRuErCN994yjRtTHmkz6YX2B1D4V/IPH+G0ep2YV+fgFgvkDn
AxT+huuPUPgM/x+j8APUnqLwF/g+Q+F/KHmOwneY8wKFP+HwyzeOjl/lLn8P
gvhP6A0Kv8HyLQr/QsK7N47Jn/622zpB/Nfx/o1j41InVx8/iHkWf944yr/r
VHHIBPMfxP9F4Tes+4/Cv3CV4S0yv0CF+a3j3qe2b2+HQ8LHmwWFL1DMisJP
mMWGwn/wmh1V/Qvxt46+Z+1bwmsg6vklUfgbzKSA9r/3/WDeAQnfOGkUfkCr
DAr/w2U5FL7Db3kU/gQlRRT+A08lFH7DDBUU/oX9qij8Aj6Nt44XvhRoms2E
+N9UE4UvEKuFwk9o0X7ruLJm28n3/RD716Hxpxu/dVx9tJhrUS3EPftM3jpy
hblksW3qB8f3M9O3jhpcb5UeKk0Eu4/X/K3jB5v4iYaaYP4FEwsUvkKMJQq/
oNkKhS9wyQaFn/DTFoW/QcH+reOGRcWbxWzAfAYPh7eOc6YFTBJ0BfMD8h3f
Os72bbSvDpnoAABybV2b
          "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[{
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxV0n8slHEcwPEbolY4Z00hHZHETLjcoXWf68fYRVYt/UGuTL9OOVL47zYu
Ufn1jyLmj3apRuePbGe6QzIjc+Os0dL5EY7vF+n8Oo7O9/tPz7M9e/Z6fu15
fz+P982MS2k2LBZLaN13jtYtpGYYQc9LT8tcbtnOaXnnCILmJ/yxc1Ji3dwP
hrmuPxEYazfhXTSxLHKU4bYbvxDYzBaW8C4Ss4sMCBrcRT7Nt4hV38et70vJ
a0nOJGZtTyDIkUa5FZQQJxz9jWAmWZHNaSeui5tieDF7GkGXyptd0kssfD2D
oL5dL9YNEZd9MSJg3euOVdL7QziIYbkAM57XSeYZ5j5dYJi9tYQAea0eYnUQ
S/xMDKsuLCMIUgdmFH6mPdkrCFKdexQzH2hP9ap1ffvT1Nv0el3HGgKtyNg7
2UB7jOsMC102ECgrRuOLmmkPfxNB2ydZd28jsSHFgqBGMXkwjr5f3riNwFUQ
vSTV0p4hFobx3Cb9K2qZry0GTsMjTpaKzkdsh8F5RFQpHaR9D3dhqPg6rIyn
llTZ4//7DXMOGPrPClm2Ztp70h2DQ156a5hLOem97oEhxz61zZ9LnKDwZHhx
0AtDxN1Oe30osXDjMIYNQ4tDaQBxmY83hiMr5zXpvsSGWB8MmfsemN54EMtf
+lq/NzlRoN5LrNP6YVBNK1dvb9I+p2MY3v7VPgv9Q/t4ARiCrvQd0BtpX/Jx
DC8SS/oct2hfQSCGax+H9lSt0PVttNo5tGazdYbOyxyMYSCKt2Cap/OJOWHt
7zfP1o7R+chCMWi+aYTqafp8ZRiGYG9RsZeJrpcmHENiV5mlfr6U/H9TPAxn
7MR8pZj2OEZg4N+3DQ+5SnvC+Rgm/Mvz918m5iYJMDyOce/aLSGW5UdieG9w
S6qWErMHojGsiVSq5XRiyfophlXc0xgM5uc2TjI6nxghBpcmcXFYFp1PBmCw
oM476xnlwn/k8Kg7
          "]]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[{
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1:eJxV0l9IU1EcwPGLmpWQrVaLqdiUzVZ7aKaWzpn7+SBrOTAfjChzK8RoxW6l
RL00MK2V0JRI0QKJoFg0hAp6ydYWhD3E1pL1z7kc2mTn5IqcjlW27nmo34XL
5QMHzu/L7xYdsTa1ZXAcB+n37zf9hDvfEXh7yRoZL+zTpa2+9R7Z9uIDgan2
3v0hTrAv9hFZJp4kcLLufsnGHMG8JoTsNk8RuNGnTjxSChbZw8ijwWkCW+q7
r63KE8wtRwi8Nmj9EoPgxpIZ5BHjLIH5Tdet8mrB8Y4vyLqbUQKWfGUs3CzY
4Z1DVq8nyLYqSmC43uMMtrI+01dk2eV5AsEBu7T9Apv/93cCS3cfenMtgk2K
HwR6AtoW9z7W07CAzHUkCCzaj27372Y9w4vII54lAt6rpSGpmvXMJZF161IE
mo3R6YU61lP5Eznc+ouA8Y7YfIrNa3MtE5BEqr9N6FnPBEf/Ny/PpHBOoazJ
LmP72ZuFLDqzAtk0lE2hc5CvHTOz+2IrkU1rpRRON+RkqJ6w/p15FG7LnQcf
jLP+w/kUvL3P/U8J6+8uQI4HCim8gpdGfob1pjZTkB5znhdn9Qu9xUXI4T3F
yLZBObLvmQKZz1Uiuyu2UuhpShx/nClY1LIN2XRRhexwYcf1pRQ8kwnvpySb
l99Bof9AgYNbzc4PlKXv06hkVyRs3rFyClGL1PF5yCH8f7MVFFJtgQ0iF9vX
ml3IvvJKZNmhKmS+S4MseqOlcLbL4D9xj+0jWYM8KqtF5vQ65EYr/PMfiWOX
yw==
          "]]}, Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[{
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1:eJxV03tIU3EUB/CxpmVqmmaRzUfmxJKclo9lr3vS0LKH2INWltMyB5JOfFCQ
MajIoGhTKLMi0SwTMu0pVmalGEZkL+2BuZJM3e/MaWqmzVq/85cXLpcPv8P9
/b7n3Ds/OSM+RSwSiSKt9/+n9TLkfGBgNhYG+jbpBauDLn1kkNmSFD27l1vb
+ImBn9a+MnKQu9X4mUH2y+LKWpeC//Z27WAwRxqqt53HrYn4wuDRCfWrmgXc
DUmdDIY8p69578XtfNLA4KG49kbOWu7q9m8MdPHXOqSx3KK/XQwkm5rrnaK5
4/y+M/jq+PxTp8BdsrGbgbTxzNhgOLc5+wcDQ9qWDmUQt3Cxh0HUi8Oy5f7c
ume9DKY719XeDuQOcmEMrliyUkKXcmuXIYOm3L2Nd/24W1UmBt33IvKS5JQv
v5+BJrHU1ORD558YZDA8lNZnmsWtkg0xuJ162A7tKc+GYQZiU1T3dTHlyR5h
cNMl76MDrcdd+MWgq8I4UuhOeZ6OMtiekyX3cKA8vb8nWZg5zuBMWk7XqIX3
X6f4w2DmVielxYavGxItDERuKanvftG8qv4yyJP9WGgaoHm9FyFImhKNAyZu
je8UhD8tAeObqb4hVoKgN1cWqySUL8sGoe5AdEwpzVdVbItwufyQzzaan8E4
FeFOiDAcv57qe+Yg5KanNkdvo3qnuQgt++C6ehf1I8wdgW10X1eupH7smYeQ
esxerthJ/TguRVAbJqRPyOa3nggB0/JWvSML414Ip8W3XCVknc/8STas85lk
bZHvJLc+liEoI06FyXbQ9znDH+F+Z/iNSHJD6EKEgfyK9vMJlGf3IgTP4Ku5
Rbspz7EAhPq7pjbzHtq/yuqQs21uWhWdfywQ4bmi3HZ/Ip0/JhhB7Oix/AjV
C5olCDtklnQNvU93binC2bJwv6e0bqgPQYi18y7M3ED/X3coQvbBWDV8o3k6
hiNUPI5KftBH8wxRIDjL9YUe/dzeCcsQaqBohoisORqBIPPsLytDbuc3K6z9
j5MniM3cqt8rEVpLappP/uSu9l6NoChWqsdGuEUxAkLQ8Am3glHuuAyw5n2d
/3rxhF74B0cxpO8=
          "]]}, Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[{
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1:eJxV0m1IU1EYwPGhqfRBW9sHw0SvojEtSnMztcT7QJSly6EUQanTkqERDrMs
pBg5QyXUmZj0YtYiEcXWB40IzEwxNWgoMXt1Wk1t5+gIs5mZrXO+9Fy4XH4c
7jnPn3vD8oszC7wkEgl47n9Pz2U/O0FgpDl41Xm+XvQ45vZbZMPAO2Sr8z2y
IP9IIHS+OkIsZNYnfSLQ1Fmbp8xi7subRJZW25EttmlkydpnZM2Wr8itageB
mqz2imvpzK7SGQLOsCrzIb4u3polMJX6uqBcx1z/Yo5AlRCtcVTyPhkhoFOo
R6ZreF8iRbZq55GFqgXP/gNFXkITn//PdwJlp3YHGmuZtZGLnv7JSxt62nhP
+g8C+6ZFV38L7yldItDz6p7p6mPec/Mngf0TcNHcznv63QROWiwPs028Z24Z
Wdy4QiC/466/7ArvSfhNwN1j7W4rY7bnrhIouCOvO2zkPV1rBORDo4MXzvGe
NxL6v/UR3sh9aeuQpWd8KKjuH9Q18u+pveFLYdwVWLJYxM9z+lFoiHoecmyI
98YHUfBdyBsbnuW9OZuRNZXBFJ4EST/02njfeAiF+Cn3jkeTvG8lFLk+PAzZ
fiAc2dAcgWx9FomsD1Ag96mikKXZ0cha41Z8fpfHZllJUecCn//XdgqWgG8N
g34mNn9qLAWZqiPjwRKfX7+TwstKW2j4PH//ehyyvVdJITO5fL1mro79fw4V
hda63KNLItvP4L8L2apMQBaOJ1IQv5TPPE1h1lckIUvH9lDYlmaOvbyXWbuc
TKHwxCYffSazRUihIMSNtreomSWpIoUcReNwdwazphgoJJz2VsYcMYl/AbGn
sVM=
          "]]}, Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[{
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1:eJxV0m9Ik0EcB/CnP3MUaFNnYUpuombtzbStdGjt9yLQWjl805ulK5KgQOey
BINaNPv3xtGbZOUavjAxs4UOhdJWLhEkWElYZrUW2tbubGazlqmtuxf1e+A4
Ptxx9/0ej/xoXWXNakEQID7+zvHPf/o1AV3H5KD0fIs2bmXbG2SLd5KA+2xQ
PtrI7Au/JbBs7m1WWJllqe8IVC+Hrps7mE2a98ieIx+QJVf9yK6JALKw8olA
b23qXqmTWZ83TaBEmz4iczA7D8wgRxo+I2tvBQlknOi809/HbBsOEYgVJEf7
n/N+KQTZUkwJOGuKTz7x8H7GWWTZla8ERh5c8g0MMhtzvxNoLa3qfOjl+XVR
Au2KpF89bp6/YYGATOlw1Izx/Dd/EDj+qLZeyc9zPv1JYL5+/b65bp4/FEPW
Ji8i24p+I/urlwg0Fs6Guwd4/p4VAoa0iVTXfZ7/lUD/tylnDbJn/1oKQ+fI
mI6/j+SUCNloT6BwsKupKTTC7wuLkSXBTRTuie13E8f5/g3pyK6dm5GFqgxk
fXMmcmR8C4Xbx8Saj6O8/2IWhRb71mu7p3j/bDmFFPew1BnkecqzkS2tORSy
PeUGiPL+j3MpzK8LiGwh3j8pH9mj3kZhKq/vxcZVNtbn8HZko1VBIV+9ELgg
Zrb1YEfKCigUZs0tVYiYtaZCZNuNHcj+IRWFtISuL9/M/P+bUVM4065qywyw
dUviLmSfqoiC9Vml/FCYWWYoRjZd1CBLXpYgG2OlyC7ZHgrTYe9l5wyzUKZF
1tfBP/8BNq+wWA==
          "]]}, Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[{
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[CompressedData["
1:eJxV0m1IU1EYwPGrVqZhzVmJJTVNw7VyS7fmW21PhPhKOr9UZM1Iiiw2c5aU
hmED7UXnBzFmUpmYKawJrUKhSRkEg1hFmlpzGS3lnpPSLDMrW+cEcS5cLj+4
h/v8zz1Rh3SaYn+O43b67r9P3yVrHUbQlc2Xh0hMap+rB0YQ5E9Jb/btIHby
owiyei6ro7OIRWHvGOtTXAjspUb/5lTi/qIxBA7TQ4VLSyyocyMYtSTevnKG
2Do0jsBztqvAe4KYW/iAoPtpWXBbFXHexo+Mb+R6EAjD2t8bjxJPGz4haG2v
MDuKiNXXJhB4D3dENBYQm55MIlC9rdc1pBPLhIhxdTJm7NR+RuAKmeFv0fWi
2ikEkovjq4IK6fy/vyAYaDAY03YRa2NnGFtzviJos7crcpNpj+EbgrHVVZpU
Ke1pmUXAr+RrZEra8/g7gj1+Sc9HVbRnco6xOnQeQU6VMG76X0/STwTyDTW2
nExi98FfjKstC4ydrzkMz+o7A+L30f8TE4BBFapbiuh+9WcvYiwoW4zB3HGu
u+cU7TMvYezmAxkLJsIxyJedn6o4Sd9fEcHYum0NY+7AWsZ5xkjG06/WYZg9
VmJTHqH98+sZm6KjGLszozFoyiptvQbafzWGsdMey1i/PA7DpeuuTlct7VeI
GQsKNzHWXpBgGNR0RSpN9PsWn8WlxaEOM53/RzyG++WNMf5tdP6MrYzV+gQM
ffmB3uYmur45EUOlVSZ9U0fnfyTHEOY9HjxiayDn06PAILzn6p2RNJKeECVj
pzwJQ0n46XSLlFi0P5mxviYFw92gwb3iBGLByzQMdzyO3S+2EGvntmPwG24S
8ZuJrSIVBuOQET2II+Yy1IzzdPDffwDXBKQe
          "]]}, Annotation[#, "Charting`Private`Tag#9"]& ], 
       TagBox[{
         Hue[0.7946117974981064, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxV02tIk1EYwPG3aZaZsi6Ql7JN1DRNzTnv4h5L8koaKTJMl6jRRVxkhURl
mKlkuTCwvFBSERLK1KgvZcvEyiBnZZmXXKZr6jmaKy/TbM1zPtQZvIwfzwvP
8//wCjNy92XxOI4LNz3L/6ZfQXsfApuOEcskXbnEZPVEP4JdKU1dI2sVyxZs
GESAiwcNA+NkLg/+giCzJEQfYEbmqoNDCE6Gdq6pdyTml2oQGPssjfkexMpP
wwgOe/HOR4QSc8ZvjBNcR0370xbiB0TEt+O1CJxHZk9t8iT+kfcdwdcjKqtu
IbGkRodAW9c+Hkj3KV6MIag5m1JbISD2WY8YFwRhBG9xp6jDjVgtm0TgmiwV
HgumfSVTjPl/9Ag2Su1ivcXEMpdfCNJe3ozURdOeuBkEZcMeEmkk7cmbRWCu
X621ANpTPYcgl9+dw4ujPW3zCKp7PtfbetOeMQNjybpFxorA3whUx4t4lSHE
mvQlBINLebpEek9BoxFBfuaFFc10n7qHw/9b7mzGWBVrjsE6PU5jSKZ9J1Zi
qLOVZmel0L4qCwxlR/tTp+hcM7GKsdLfHkODfYTTo2zam+aA4dWeli34EO0t
2oxB3CAqNT9H+947Ysj2LOcmz9C+xa0YHg5FXdHl0z4nIQbPpN3b1Lfovmgn
DK/tntzpbaF9N5wx8H+Cr00r7XvmguH5pafXRU20z8YNQ4dSyL/6hvaJ3THs
+hjkf5m+zz+wHUPvjpnRZmrZRQ8M9vuzyiJ66P5Gk4utpj5YI3r/gheGCvfC
HO08vT9qJ4bKB3czYibo/XJfxopKEWNNqx+G2qqKx2HT5Pvw0YoxSH30c4KY
a6THOoCx2i+QsSA1iLG8MJgx/10ohgWu28FhL7HMEMZYKQjHYHdvsXw6kZiL
kmBQd52+30bnCbnwz38Bi9uRvg==
          "]]}, Annotation[#, "Charting`Private`Tag#10"]& ], 
       TagBox[{
         Hue[0.030679774997896203`, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQQGc2++cSwR5EhtVZ7gAOQ3HLn1xvHu/LlBznZg
/oXXt1H4CsJ33ziurKusfeMG5hdY3UPhH0i8/8YxtGDDbpV0MF+g8wEKf8P1
Ryh8hv+PUfgBak9R+At8n6HwP5Q8R+E7zHmBwp9w+OUbxwt9WUYhUWC+gdAb
FH6D5ds3jl4bexyUvCD+S3j3xlFb9fuld84Q/3W8R+EvOPQDyA8P772aArH/
5U8UvoPg7zeOa6WclLalQey3+PPGsfT2D86oXjD/QfxfFH7Duv9vHNN0+hne
VUPsv8rwFplfoML81rFEIm5nUhskPL1ZUPgCxaxvHYsYdZvYZ4H5CbPYUPgP
XrOjyvNLvnVcdLrvVtlBSPibSb11fHe93FxmMyT846RR+AGtMm8dnaZpMV+B
qP9wWQ6F7/BbHoU/QUkRhf/AU+mtY2Whi1Lceoh/Z6i8dezpv7he6xDEv/tV
3zrycPO9PrQF4l8+jbeO36dffX7hEcS/pppvHY/yntOTFp8I9m+sFtA8VQ1b
NmMwP6FF+62jxWshrZP2YP6Edaj8Dx6Gbx3b5cKm3tUC8x0KjFD4E6Ybv3V8
9jJ3B7sCmP9gn8lbx2vr+T51C0HSyzPTt47zepK9zWLA8g285m8dJeaIW9ul
gfkXTCxQ+Aoxlij8gmYrFL7AJZu3jo0/V4v0JUDc/9MWhb9BwR4YX7Iny7tj
wXwGD4e3jq6P5mVPzwTzA/Id3zreZ3rC11w40QEA10Jowg==
          "]]}, Annotation[#, "Charting`Private`Tag#11"]& ], 
       TagBox[{
         Hue[0.266747752497686, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxV0n8slHEcwPFHJZV+3HVLE+PuhonyoxyO6D7I3FLdrFKSxNhq86scaSYV
YUXHWlop2lRo42rFrIWdSs1WXMqPikPcyfd7hBQnur7fv55ne/bste/z/e7z
fvYIYpLC4pYxDBNovP8/jZdG3oMgKy3Gmh+okBjtdrcXwZJPlzo0njj7VR+C
uby1ZbmHiDvGvyAQdaaX58cR83nfEKi0tdXDYuJkn34Ehy/5n1PR81pODrDM
KdAg2BaRbmFCz1d2DyEQKHWZR24QM0vDLMscRhAED0kmVfeIK/aNIpi20lUG
FBJPpmqNjm8UvS4hlpTpEJg9M8vlXiVWtI4hyEgJEkbV0b6NiOVsMUZw7Xpn
nZOK9kXrEWTOaw+Kh2lf/gSCwj2cFLsOOv/iFIJ3rsWzMz3E0fYzCF5Ka4q9
22hP6C8ED0v69xfU057UWQQVZb7IvJn23PmNINFh8atzA+1R/UEACZ6rp6to
z9gcyxKuwXi+0wH3LiXt8V5A8EgabqurJtac+Mtydu0Sgu64K0cVT2jPJwZD
U+wFNzWdL9luOcste1ewzDlrikHB+VwY8IH23V7JsmbcjGWObjOGN0oBp6id
vr/BkmWl5xYMhqLyQcs++j2irFiW5VpjKLWNkQ98p/0fbViWGGxZVggFGDzV
g6YuOjqPVIihjZdjGj5L+2/ZYagN6+xixml/sz2Gt7ndtkI97V/vyHKLaCuG
hIDHDpvWFJOe404YVhmYRhcr4ugcZwyyWH9ehiOxotboKvmCdM6dWDbvgiGC
a3VM5UU8GeKO4YfBol4vJpYk78DAreGlnQ6m+0t3YmjonLoo9CfWNHlgYB44
bf/Jo//nqAjDi8WJYNdYsp69zovlDg9vDEFJNyufxxPzI8UY3tv4tukTiZMv
+2CIbFWUzMhpj3oXhjPSPKHJedoz54dBet+tqTeLWMnfbZwvdMTmVCYxEyJh
WZYEGPyemrdrjfv/AQBAsgY=
          "]]}, Annotation[#, "Charting`Private`Tag#12"]& ], 
       TagBox[{
         Hue[0.5028157299974758, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0.3, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQBs7+/cQSzHPodgGQCv+RbZP4GM6m3jrwczGHS
yZNAfIY4aRR+QKsMCv/DZTkUvsNveRT+BCVFFP4DTyUUfsMMFRT+hf2qKPwC
Pg0U/gFTTRS+QKwWCj+hRRvV/nWo/IBfeqju9zBEdX+BEar+6cYIvvjh2zvm
GUPD68AkBwCgVFff
          "]], 
         LineBox[{{3.9205553824521227`*^9, 1200.}, {3.9205728*^9, 
          1172.2844120856305`}, {3.9211776*^9, 1170.7978354751428`}, {
          3.9217824*^9, 1165.3461041399598`}, {3.9223872*^9, 
          1165.3461041399598`}, {3.922992*^9, 1165.3461041399598`}, {
          3.9242016*^9, 1162.6739099104389`}, {3.9248064*^9, 
          1162.6739099104389`}, {3.9254112*^9, 1162.6739099104389`}, {
          3.926016*^9, 1158.5874485560773`}, {3.9266208*^9, 
          1158.5874485560773`}}]}, 
        Annotation[#, "Charting`Private`Tag#13"]& ], 
       TagBox[{
         Hue[0.7388837074972656, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0.3, 0.3, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQQJ/JJvHcEsh34HILnBTAqFzxAn/dbx2AZFgb7T
E0D8gFYZFP6Hy3IofIff8ij8CUqKKPwHnkpvHTcLX28wNAPzG2aovHV8vVVk
QeUZsH0X9qui8Av4NFD4B0w1UfgCsVpvHWuvf9vw8hqYn9CijcKfsA6VH/BL
763j1pRVop86wPwPHoYofIcCo7eOQgF7A6zFIe6fbozCf7DP5K1ju5+whXky
WL3BM9O3jjbbGq81vYb4h9f8reOfhR3HeVQmgv1jYoHCV4ixfOt4+Miizbnm
YH5BsxUKX+CSDQo/4actCn+Dgv1bR4tHx1OP+IH5DB4OKPyAfEcEHwD5ZLtr

          "]]}, Annotation[#, "Charting`Private`Tag#14"]& ], 
       TagBox[{
         Hue[0.9749516849970554, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[2], 
          RGBColor[0.6, 0.6, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQX9qu+dQSzHPodgGQBn8ZbRz33qSdT0sH8A6aa
KHyBWC0UfkKL9lvHtWbOuWVOYP6EdUD+ZuHrDYZmE0D8gF96QH6esKvIArD8
Bw9DFP0OBUZvHZ+vX67LEAzRP934rWNm4e5FjavB/Af7TIB8PfGc4/5gvsEz
07eO/nfe3olbATa/gdf8raPs6fREkXVg/gUTi7eOElsUrs6aBuYrxFii8Aua
rVD4Apds3jq+Mb62+nwTmJ/w0xaFv0HB/q3j/PxmMcVVYD6DhwMKPyDfEcEH
ANGre/g=
          "]]}, Annotation[#, "Charting`Private`Tag#15"]& ]}}, {{{{{{}, {
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1121.8689268701216`}], 
                
                Offset[{1.371829020147291, 2.6679739765375756`}, {
                 3.928868136*^9, 1121.8689268701216`}], 
                Offset[{0, 0}, {3.932170344*^9, 1164.3507368540716`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1164.3507368540716`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1164.3507368540716`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1164.3507368540716`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1121.8689268701216`}], 
                
                Offset[{1.371829020147291, 2.6679739765375756`}, {
                 3.928868136*^9, 1121.8689268701216`}], 
                Offset[{0, 0}, {3.932170344*^9, 1164.3507368540716`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1164.3507368540716`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1164.3507368540716`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1164.3507368540716`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{96., 7.000000000000021}, {3.932170344*^9, 
                 1164.3507368540716`}], 
                
                Offset[{96., -6.999999999999979}, {3.932170344*^9, 
                 1164.3507368540716`}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1164.3507368540716`}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1164.3507368540716`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 0          \"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{53., 1.176836406102666*^-14}, {3.932170344*^9, 
               1164.3507368540716`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1105.478611792736}], 
                
                Offset[{0.9189660123735108, -2.855783862287608}, {
                 3.928868136*^9, 1105.478611792736}], 
                Offset[{0, 0}, {3.932170344*^9, 1037.5977582735713`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1037.5977582735713`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1037.5977582735713`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1037.5977582735713`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1105.478611792736}], 
                
                Offset[{0.9189660123735108, -2.855783862287608}, {
                 3.928868136*^9, 1105.478611792736}], 
                Offset[{0, 0}, {3.932170344*^9, 1037.5977582735713`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1037.5977582735713`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1037.5977582735713`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1037.5977582735713`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.932170344*^9, 
                 1037.5977582735713`}], 
                
                Offset[{68., -6.999999999999985}, {3.932170344*^9, 
                 1037.5977582735713`}], 
                
                Offset[{10., -6.999999999999997}, {3.932170344*^9, 
                 1037.5977582735713`}], 
                
                Offset[{10., 7.000000000000003}, {3.932170344*^9, 
                 1037.5977582735713`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 1\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.932170344*^9, 
               1037.5977582735713`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1109.1203594401948`}], 
                
                Offset[{2.019746882720883, -2.218247625883836}, {
                 3.928868136*^9, 1109.1203594401948`}], 
                Offset[{0, 0}, {3.932170344*^9, 1085.13012524527}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1085.13012524527}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1085.13012524527}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1085.13012524527}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1109.1203594401948`}], 
                
                Offset[{2.019746882720883, -2.218247625883836}, {
                 3.928868136*^9, 1109.1203594401948`}], 
                Offset[{0, 0}, {3.932170344*^9, 1085.13012524527}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1085.13012524527}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1085.13012524527}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1085.13012524527}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.932170344*^9, 
                 1085.13012524527}], 
                
                Offset[{68., -6.999999999999985}, {3.932170344*^9, 
                 1085.13012524527}], 
                
                Offset[{10., -6.999999999999997}, {3.932170344*^9, 
                 1085.13012524527}], 
                
                Offset[{10., 7.000000000000003}, {3.932170344*^9, 
                 1085.13012524527}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 3\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.932170344*^9, 
               1085.13012524527}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1115.9935637254378`}], 
                
                Offset[{2.997863572675303, 0.11319893827447965`}, {
                 3.928868136*^9, 1115.9935637254378`}], 
                Offset[{0, 0}, {3.932170344*^9, 1116.8183698881955`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1116.8183698881955`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1116.8183698881955`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1116.8183698881955`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1115.9935637254378`}], 
                
                Offset[{2.997863572675303, 0.11319893827447965`}, {
                 3.928868136*^9, 1115.9935637254378`}], 
                Offset[{0, 0}, {3.932170344*^9, 1116.8183698881955`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1116.8183698881955`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1116.8183698881955`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1116.8183698881955`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.932170344*^9, 
                 1116.8183698881955`}], 
                
                Offset[{68., -6.999999999999985}, {3.932170344*^9, 
                 1116.8183698881955`}], 
                
                Offset[{10., -6.999999999999997}, {3.932170344*^9, 
                 1116.8183698881955`}], 
                
                Offset[{10., 7.000000000000003}, {3.932170344*^9, 
                 1116.8183698881955`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 4\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.932170344*^9, 
               1116.8183698881955`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1130.1062671320667`}], 
                
                Offset[{1.199216207038476, 2.7498873592887856`}, {
                 3.928868136*^9, 1130.1062671320667`}], 
                Offset[{0, 0}, {3.932170344*^9, 1180.194859178317}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1180.194859178317}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1180.194859178317}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1180.194859178317}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1130.1062671320667`}], 
                
                Offset[{1.199216207038476, 2.7498873592887856`}, {
                 3.928868136*^9, 1130.1062671320667`}], 
                Offset[{0, 0}, {3.932170344*^9, 1180.194859178317}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1180.194859178317}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1180.194859178317}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1180.194859178317}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.932170344*^9, 
                 1180.194859178317}], 
                
                Offset[{68., -6.999999999999985}, {3.932170344*^9, 
                 1180.194859178317}], 
                
                Offset[{10., -6.999999999999997}, {3.932170344*^9, 
                 1180.194859178317}], 
                
                Offset[{10., 7.000000000000003}, {3.932170344*^9, 
                 1180.194859178317}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 7\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.932170344*^9, 
               1180.194859178317}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1151.5447446229637`}], 
                Offset[{1.322060220849851, 2.692982876374531}, {
                 3.928868136*^9, 1151.5447446229637`}], 
                Offset[{0, 0}, {3.932170344*^9, 1196.038981504985}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1196.038981504985}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1196.038981504985}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1196.038981504985}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1151.5447446229637`}], 
                
                Offset[{1.322060220849851, 2.692982876374531}, {
                 3.928868136*^9, 1151.5447446229637`}], 
                Offset[{0, 0}, {3.932170344*^9, 1196.038981504985}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1196.038981504985}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1196.038981504985}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1196.038981504985}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{68., 7.000000000000015}, {3.932170344*^9, 
                 1196.038981504985}], 
                
                Offset[{68., -6.999999999999985}, {3.932170344*^9, 
                 1196.038981504985}], 
                
                Offset[{10., -6.999999999999997}, {3.932170344*^9, 
                 1196.038981504985}], 
                
                Offset[{10., 7.000000000000003}, {3.932170344*^9, 
                 1196.038981504985}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 8\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{39., 8.659739592076221*^-15}, {3.932170344*^9, 
               1196.038981504985}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1109.5470734153187`}], 
                
                Offset[{2.792625594281067, -1.0960119936233894`}, {
                 3.928868136*^9, 1109.5470734153187`}], 
                Offset[{0, 0}, {3.932170344*^9, 1100.9742475668445`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1100.9742475668445`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1100.9742475668445`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1100.9742475668445`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1109.5470734153187`}], 
                
                Offset[{2.792625594281067, -1.0960119936233894`}, {
                 3.928868136*^9, 1109.5470734153187`}], 
                Offset[{0, 0}, {3.932170344*^9, 1100.9742475668445`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1100.9742475668445`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1100.9742475668445`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1100.9742475668445`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1100.9742475668445`}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1100.9742475668445`}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1100.9742475668445`}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1100.9742475668445`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 10\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1100.9742475668445`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1081.6567679184893`}], 
                
                Offset[{0.831246195966479, -2.8825387701974203`}, {
                 3.928868136*^9, 1081.6567679184893`}], 
                Offset[{0, 0}, {3.932170344*^9, 1005.9095136026697`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1005.9095136026697`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1005.9095136026697`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1005.9095136026697`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1081.6567679184893`}], 
                
                Offset[{0.831246195966479, -2.8825387701974203`}, {
                 3.928868136*^9, 1081.6567679184893`}], 
                Offset[{0, 0}, {3.932170344*^9, 1005.9095136026697`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1005.9095136026697`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1005.9095136026697`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1005.9095136026697`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1005.9095136026697`}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1005.9095136026697`}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1005.9095136026697`}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1005.9095136026697`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 11\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1005.9095136026697`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1098.179613200454}], 
                
                Offset[{0.8244238752792592, -2.8844974040323783`}, {
                 3.928868136*^9, 1098.179613200454}], 
                Offset[{0, 0}, {3.932170344*^9, 1021.7536359431114`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1021.7536359431114`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1021.7536359431114`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1021.7536359431114`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1098.179613200454}], 
                
                Offset[{0.8244238752792592, -2.8844974040323783`}, {
                 3.928868136*^9, 1098.179613200454}], 
                Offset[{0, 0}, {3.932170344*^9, 1021.7536359431114`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1021.7536359431114`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1021.7536359431114`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1021.7536359431114`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1021.7536359431114`}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1021.7536359431114`}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1021.7536359431114`}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1021.7536359431114`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 12\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1021.7536359431114`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1107.9400919647778`}], 
                
                Offset[{1.475941091278311, -2.611818886346484}, {
                 3.928868136*^9, 1107.9400919647778`}], 
                Offset[{0, 0}, {3.932170344*^9, 1069.2860029230183`}], 
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1069.2860029230183`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1069.2860029230183`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1069.2860029230183`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1107.9400919647778`}], 
                
                Offset[{1.475941091278311, -2.611818886346484}, {
                 3.928868136*^9, 1107.9400919647778`}], 
                Offset[{0, 0}, {3.932170344*^9, 1069.2860029230183`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1069.2860029230183`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1069.2860029230183`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1069.2860029230183`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1069.2860029230183`}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1069.2860029230183`}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1069.2860029230183`}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1069.2860029230183`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 13\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1069.2860029230183`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1116.3779864908936`}], 
                
                Offset[{2.4051742739759367`, 1.7930802301638171`}, {
                 3.928868136*^9, 1116.3779864908936`}], 
                Offset[{0, 0}, {3.932170344*^9, 1132.6624922095677`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1132.6624922095677`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1132.6624922095677`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1132.6624922095677`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1116.3779864908936`}], 
                
                Offset[{2.4051742739759367`, 1.7930802301638171`}, {
                 3.928868136*^9, 1116.3779864908936`}], 
                Offset[{0, 0}, {3.932170344*^9, 1132.6624922095677`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1132.6624922095677`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1132.6624922095677`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1132.6624922095677`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1132.6624922095677`}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1132.6624922095677`}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1132.6624922095677`}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1132.6624922095677`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 14\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1132.6624922095677`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1118.7263604953325`}], 
                
                Offset[{1.774334277290023, 2.4190365587220235`}, {
                 3.928868136*^9, 1118.7263604953325`}], 
                Offset[{0, 0}, {3.932170344*^9, 1148.506614531374}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1148.506614531374}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1148.506614531374}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1148.506614531374}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1118.7263604953325`}], 
                
                Offset[{1.774334277290023, 2.4190365587220235`}, {
                 3.928868136*^9, 1118.7263604953325`}], 
                Offset[{0, 0}, {3.932170344*^9, 1148.506614531374}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1148.506614531374}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1148.506614531374}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1148.506614531374}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1148.506614531374}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1148.506614531374}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1148.506614531374}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1148.506614531374}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 16\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1148.506614531374}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1158.5874485560773`}], 
                
                Offset[{1.1377138290400286`, 2.7758975563249946`}, {
                 3.928868136*^9, 1158.5874485560773`}], 
                Offset[{0, 0}, {3.932170344*^9, 1211.8831038346605`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1211.8831038346605`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1211.8831038346605`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1211.8831038346605`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1158.5874485560773`}], 
                
                Offset[{1.1377138290400286`, 2.7758975563249946`}, {
                 3.928868136*^9, 1158.5874485560773`}], 
                Offset[{0, 0}, {3.932170344*^9, 1211.8831038346605`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1211.8831038346605`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1211.8831038346605`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1211.8831038346605`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1211.8831038346605`}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1211.8831038346605`}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1211.8831038346605`}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1211.8831038346605`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 28\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1211.8831038346605`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1107.6917945129226`}], 
                
                Offset[{1.120514694572035, -2.7828846219791687`}, {
                 3.928868136*^9, 1107.6917945129226`}], 
                Offset[{0, 0}, {3.932170344*^9, 1053.44188059948}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1053.44188059948}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1053.44188059948}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1053.44188059948}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1107.6917945129226`}], 
                
                Offset[{1.120514694572035, -2.7828846219791687`}, {
                 3.928868136*^9, 1107.6917945129226`}], 
                Offset[{0, 0}, {3.932170344*^9, 1053.44188059948}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 1053.44188059948}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1053.44188059948}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 1053.44188059948}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 1053.44188059948}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 1053.44188059948}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 1053.44188059948}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 1053.44188059948}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 29\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               1053.44188059948}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1066.5323124443892`}], 
                
                Offset[{0.8240157524632568, -2.8846140191873872`}, {
                 3.928868136*^9, 1066.5323124443892`}], 
                Offset[{0, 0}, {3.932170344*^9, 990.0653912326467}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 990.0653912326467}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 990.0653912326467}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 990.0653912326467}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1066.5323124443892`}], 
                
                Offset[{0.8240157524632568, -2.8846140191873872`}, {
                 3.928868136*^9, 1066.5323124443892`}], 
                Offset[{0, 0}, {3.932170344*^9, 990.0653912326467}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.932170344*^9, 
                 990.0653912326467}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 990.0653912326467}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.932170344*^9, 
                 990.0653912326467}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{73., 7.000000000000016}, {3.932170344*^9, 
                 990.0653912326467}], 
                
                Offset[{73., -6.999999999999984}, {3.932170344*^9, 
                 990.0653912326467}], 
                
                Offset[{10., -6.999999999999998}, {3.932170344*^9, 
                 990.0653912326467}], 
                
                Offset[{10., 7.000000000000002}, {3.932170344*^9, 
                 990.0653912326467}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Player ID: 33\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41.5, 9.2148511043888*^-15}, {3.932170344*^9, 
               990.0653912326467}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.871584*^9, 975.0000000000022}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Matchmaking Rating (MMR)\"", HoldForm], TraditionalForm], 
        None}, {None, None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}, "TickLabels" -> 
         None]}}, 
     GridLines -> {{3.8709792*^9, 3.8735712*^9, 3.8762496*^9, 3.8788416*^9, 
       3.88152*^9, 3.8841984*^9, 3.8866176*^9, 3.889296*^9, 3.891888*^9, 
       3.8945664*^9, 3.8971584*^9, 3.8998368*^9, 3.9025152*^9, 3.9051072*^9, 
       3.9077856*^9, 3.9103776*^9, 3.913056*^9, 3.9157344*^9, 3.91824*^9, 
       3.9209184*^9, 3.9235104*^9, 3.9261888*^9}, {990, 1000, 1010, 1020, 
       1030, 1040, 1050, 1060, 1070, 1080, 1090, 1100, 1110, 1120, 1130, 1140,
        1150, 1160, 1170, 1180, 1190, 1200}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, 140.8}, {All, All}}, 
     ImageSize -> Scaled[0.75], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& )}}, PlotLabel -> 
     FormBox["\"Spreminjaje MMR skozi \[CHacek]as za obdobje: september 2022 \
- junij 2024\"", TraditionalForm], 
     PlotRange -> {{3.871584*^9, 3.9266208*^9}, {975., 1200.}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Player ID: 0 \"", "\"Player ID: 1 \"", "\"Player ID: 3 \"", 
       "\"Player ID: 4 \"", "\"Player ID: 7 \"", "\"Player ID: 8 \"", 
       "\"Player ID: 10\"", "\"Player ID: 11\"", "\"Player ID: 12\"", 
       "\"Player ID: 13\"", "\"Player ID: 14\"", "\"Player ID: 16\"", 
       "\"Player ID: 28\"", "\"Player ID: 29\"", "\"Player ID: 33\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #10, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #11, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #13, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0.3, 0.5]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.3, 0.3, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #14, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.6, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0.6, 0.6, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0.5]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.6, 0.4, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.3, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.3, 0.3, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.6, 0.6, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.926927540124678*^9, 3.926927567558607*^9}, 
   3.926950223455406*^9, 3.926950484628677*^9, 3.926950702408708*^9, {
   3.926950736632723*^9, 3.926950781157774*^9}, 3.9270153076304836`*^9, 
   3.927023029003141*^9, 3.927028101033285*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"151981e3-4e69-a148-9292-48ecfd5d328b"]
}, Open  ]],

Cell["\<\
V osnovi je ideja MMR ta, da s pomo\[CHacek]jo programa sestavi najbolj mo\
\[ZHacek]ne fer ekipe. To stori tako, da je povpre\[CHacek]je MMR igralcev v \
eni ekipi kar se da podobno povpre\[CHacek]ju MMR igralcev v drugi ekipi. S \
tem se izognemu zbiranju ekip in hkrati dobimo najbolj po\[SHacek]tene ekipe, \
ter posledi\[CHacek]no najbolj izena\[CHacek]eno tekmo. V praksi to deluje \
izvrstno razen, \[CHacek]e pride nekdo na novo in ne znamo dobro oceniti \
njegove sposobnosti. Potem se lahko zgodi, da se sistem deloma \
poru\[SHacek]i, ampak ne drasti\[CHacek]no. \
\[LineSeparator]\[LineSeparator]MMR ra\[CHacek]una sorazmerno komplicirana \
formula, ki se je skozi \[CHacek]as nekajkrat spremenila oz. prilagodila. \
Prvi pogoj, da igralcu dolo\[CHacek]imo MMR je minimalna prisotnost, ki je 5 \
obiskov. S tem dobimo vsaj pribli\[ZHacek]no povpre\[CHacek]je. Bolj idealno \
bi bilo 10 obiskov, pa vendar nimamo \[CHacek]asa \[CHacek]akati 10 obiskov, \
da se mu sploh izpi\[SHacek]e. Tako ali tako se bo igralcu MMR sorazmerno \
hitro poravnal na njemu primerno vi\[SHacek]ino. Zato lahko tudi na grafu pri \
novih igralch opazimo velike skoke (glej igralec 28 v \[CHacek]asu med \
septembrom 2023 in januarjem 2024). \[LineSeparator]\[LineSeparator]Zakaj pa \
potem ni tako z vsemi igralci ob za\[CHacek]etku bele\[ZHacek]enja? Izpustil \
sem klju\[CHacek]en podatek. Bele\[ZHacek]ili smo statistiko \[ZHacek]e prej, \
vendar nismo tega po\[CHacek]eli digtalno in nismo ra\[CHacek]unali MMR. Vsi \
stari igralci so tako \[ZHacek]e imeli dovolj veliko bazo podatkov, da jim je \
program lahko \[ZHacek]e od samega za\[CHacek]etka dolo\[CHacek]il nek MMR. \
\[CapitalSHacek]e vedno pa se dobro vidi, kako je na za\[CHacek]etku MMR bolj \
poskakoval, kot proti koncu julija 2023. Takrat je bil \[ZHacek]e deloma \
ustaljen. \[LineSeparator]\[LineSeparator]Prva anomalija: poletje 2023.
Opazimo lahko, da je za \[CHacek]asa poletja \[CHacek]rta pri vseh igralcih \
ravna in nara\[SHacek]\[CHacek]ajo\[CHacek]a. Po prvem \[SHacek]olskem letu \
in uporabi ra\[CHacek]unalnika za izdelovanje ekip smo ugotovili, da nekateri \
podatki premo\[CHacek]no vplivajo na MMR. Ob pri\[CHacek]etku novrga \
\[SHacek]olskega leta in s tem nove redne rekreacije je bila predstavljena \
nova formula za izra\[CHacek]un MMR. Kasneje se je izkazalo, da je bila \
konceptualno bolj\[SHacek]a vendar so z njo pri\[SHacek]le tudi nekater \
eposledice. Prva je bila ta, da se je ve\[CHacek]ini igralcev njihov MMR \
dvignil. Hkrati pa med poletjem za \[CHacek]asa osnovno\[SHacek]olskih po\
\[CHacek]itnic nimamo organizirane rekreacije in posledi\[CHacek]no ni vpisov \
podatkov. Graf pove\[ZHacek]\[CAcute]e dva zaporedna podatka, ki pa sta \
napram ostalih precej bolj \[CHacek]asovno narazen. 

\[CapitalSHacek]e ena posledica nove formule je, da se je MMR moral ponovno \
ustaliti. Zopet vidimo, da se vse do druge anomalije, ki se zgodi marca 2024 \
res grafi za\[CHacek]nejo umirjati. Hkrati vidimo, kdo so bili \
\[OpenCurlyDoubleQuote]zmagovalci\[CloseCurlyDoubleQuote] spremembe sistema. \
Igralec 0 je bil o\[CHacek]itno prej slab\[SHacek]e ocenjen.\[LineSeparator]\
\[LineSeparator]Druga anomalija: \[OpenCurlyDoubleQuote]Kanjon\
\[CloseCurlyDoubleQuote] - marec 2024. \[LineSeparator]Vse je delovalo odli\
\[CHacek]no. Tekme so bile bolj\[SHacek]e kot pred spremembo in s \
\[CHacek]asom se je to le \[SHacek]e izbolj\[SHacek]evalo. Vendar se je zdelo \
nekaj sumljivo narobe. Ker si nismo sproti dalali grafov je bilo malce te\
\[ZHacek]je opaziti in zato, ker je bil igralec 28 takrat \[SHacek]e \
sorazmerno nov in ni imel ustaljenega MMR, smo spregledali grozovito napako v \
formuli. Le-ta je navzgor in navzdol omejevala MMR. To ne bi bil niti \
problem, \[CHacek]e ga seveda nekateri od igralcev slu\[CHacek]ajno ne bi \
dosegli. V na\[SHacek]em primeru igralca 8 in 28. To je mo\[CHacek]no ru\
\[SHacek]ilo izena\[CHacek]enost ekip in zato je bilo med sezono hitro nekaj \
ukreniti. Napisala se je nova formula, ki je ohranila podobne lastnosti kot \
prej\[SHacek]nja, le da ni omejevala igralcev navzgor in navzdol. Graf to \
predstavi kot grozovito spremembo, kjer se je MMR vsem igralcem \
zni\[ZHacek]al za mnogo. Ampak dokler se je vsem zni\[ZHacek]al za pribli\
\[ZHacek]no enako tega ni zaznal niti program, ki sestavlja ekipe, kaj \
\[SHacek]ele da bi to opazili igralci. Se je pa sistem kaj hitro vzpostavil. \
Od takrat so vidne manj\[SHacek]e spremembe, za kar je kriva tudi formula, ki \
igralce stla\[CHacek]i bolj skupaj. Opazimo pa lahko pribli\[ZHacek]no \
normalno razporeditev igralcev med 1060 in 1160.  Po drugi strani pa je do \
tega trenutka \[ZHacek]e toliko podatkov, da se MMR po\[CHacek]asi \
za\[CHacek]enja nagibati k \[OpenCurlyDoubleQuote]pravemu\
\[CloseCurlyDoubleQuote] MMR - ratingu, ki naj bi bil prirejen igralcu po \
neskon\[CHacek]no igrah.

Vse to je za nekoga, ki pozna ozadje in dogajanje skozi \[CHacek]as popolnoma \
razumljivo. Kaj pa \[SHacek]e lahko ugotovimo iz grafa?\[LineSeparator]\
\[LineSeparator]Opazimo, da MMR prakti\[CHacek]no vedno po novem vnosu \
podatkov \[OpenCurlyDoubleQuote]zamenja smer\[CloseCurlyDoubleQuote]. \
\[CapitalCHacek]e je prej padal, v naslednjem koraku nara\[SHacek]\[CHacek]a \
in obratno. Ali pa se to dogaja na vsaka dva koraka. Znamo premisliti od kod \
to pride?
Predvidevamo nalsednje: recimo, da je igralec X zadnjo tekmo zmagal. Ker je \
bilo \[SHacek]tevilo podatkov sorazmerno majhno, se je ta zmaga mo\[CHacek]no \
poznala na povpre\[CHacek]ju. Zato se je MMR  igralca X dvignil. Ker pa se je \
povpre\[CHacek]je precej spremenilo, se je njegov MMR dvignil preve\[CHacek] \
in ga je s tem precenil. V naslednji tekmi je nato pokazal obi\[CHacek]ajno \
igro, vendar za algoritem manj od pri\[CHacek]akovanega. Po drugi strani je \
bil preostanek ekipe v povpre\[CHacek]ju slab\[SHacek]a, kot zadnji\[CHacek] \
in s tem je te\[ZHacek]je pri\[SHacek]el do zmage. \[CapitalCHacek]e je \
izgubil to tekmo, je povpre\[CHacek]je \[SHacek]lo dol in s tem tudi njegov \
MMR. \[CapitalCHacek]e je nekako uspel iztr\[ZHacek]iti zmago se je to \
zgodilo v naslednji tekmi in tkrat \[SHacek]e bolj o\[CHacek]itno. Naslednja \
tekma je bila podobna situacija samo, da je tokrat bil podcenjen. Tako se je \
igralec zna\[SHacek]el v za\[CHacek]aranem krogu precenjenosti in \
podcenjenosti s strani algoritma za izdelavo ekip. Vendar pa se skozi \
\[CHacek]as povpre\[CHacek]je vedno manj spreminja in s tem se tudi MMR vedno \
manj spreminja. Na dolgi rok se vsem igralcem ustali rating in na neki to\
\[CHacek]ki lahko pri\[CHacek]akujemo, da se bodo ekipe ob predpostavki, da \
bodo prisotni isti igralci za\[CHacek]ele ponavljati. \[CapitalSHacek]e vedno \
pa bomo lahko spremljali hitro spreminjanje gor in dol, le na manj\[SHacek]i \
spremembi: namesto, da se bo MMR spreminjal za 10 to\[CHacek]k, se bo \
spreminjal za nekaj destink (algoritem izra\[CHacek]una MMR bolj  natan\
\[CHacek]o kakor je predstavljen). 

\
\>", "Text",
 CellChangeTimes->{{3.92695098902754*^9, 3.926951071301077*^9}, {
  3.926951121301115*^9, 3.926951292287657*^9}, {3.926951351845278*^9, 
  3.9269521636628456`*^9}, {3.9269522080046844`*^9, 3.926953207206167*^9}, {
  3.926953471865221*^9, 3.926953531788452*^9}, {3.9269535804848976`*^9, 
  3.926953971227297*^9}, {3.926954038796856*^9, 3.9269540415440025`*^9}, {
  3.926954108024954*^9, 3.926954316540085*^9}, {3.9269555848335133`*^9, 
  3.926955591609049*^9}, {3.9269570007429867`*^9, 
  3.9269570075195236`*^9}},ExpressionUUID->"fabc7e61-048e-1f4f-83a6-\
7c060b2f445c"],

Cell["", "Text",
 CellChangeTimes->{{3.9269508145118713`*^9, 3.9269508168233986`*^9}, {
  3.926954036752285*^9, 
  3.9269540379056644`*^9}},ExpressionUUID->"87ec6464-1227-7747-8c9f-\
3ffd7a44298f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P8Complete", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"Delete", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
     "@", " ", "Upload8"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P8CompleteSR", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"P8Complete", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], 
     ")"}], "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"KeyMap", "[", 
      RowBox[{"Replace", "[", 
       RowBox[{"\"\<SR\>\"", "->", "\"\<MMR\>\""}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P8CompleteMMR", " ", "=", " ", 
    RowBox[{"P8Complete", "[", 
     RowBox[{"All", " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"P8CompleteSR", ",", "P8CompleteMMR"}], "}"}], " ", ",", " ", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Rating (SR or MMR)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "900", ",", "950", ",", " ", "1000", ",", "1050", ",", " ", "1100", 
        ",", "1150", ",", " ", "1200", ",", " ", "1250", ",", " ", "1300", 
        ",", " ", "1350", ",", " ", "1400", ",", " ", "1450", ",", " ", 
        "1500", ",", " ", "1550", ",", " ", "1600", ",", " ", "1650"}], 
       "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"900", ",", " ", "1700"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Seasonal Rating (SR)         \>\"", ",", 
      "\"\<Matchmaking rating (MMR)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"Scaled", "[", "0.75", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Seasonal Rating (SR)\>\"", ",", 
        "\"\<Matchmaking rating (MMR)\>\""}], "}"}], ",", " ", "Below"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Primerjava SR in MMR igralca 8 za \[CHacek]asa: februar 2024 - julij \
2024\>\""}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", "Green"}], "}"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"FrameTicks", "->", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}], ",", " ", "None"}], 
      "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateTicksFormat", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", " ", "\"\</\>\"", ",", " ", "\"\<Year\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", " ", "]"}]}], "Input",
 CellChangeTimes->{{3.92695404980302*^9, 3.9269540587636776`*^9}, {
   3.926954369414631*^9, 3.926954387954035*^9}, {3.926954429146393*^9, 
   3.926954700699383*^9}, {3.926954752036631*^9, 3.926954797004249*^9}, {
   3.926954841543974*^9, 3.926955018550972*^9}, {3.926955098159549*^9, 
   3.92695518340785*^9}, 3.9269552153863525`*^9, {3.926955284849666*^9, 
   3.926955295784246*^9}, {3.926955603261205*^9, 3.92695562542687*^9}, {
   3.9269556720679245`*^9, 3.926955719652439*^9}, {3.9269557728684864`*^9, 
   3.926955775281296*^9}, {3.926955811955122*^9, 3.926955872346689*^9}, 
   3.92695596009396*^9, {3.9269560754971027`*^9, 3.92695612283601*^9}, {
   3.9269562630156174`*^9, 3.926956290254404*^9}, {3.926956321366535*^9, 
   3.926956325480583*^9}, 3.9269563568873653`*^9, {3.926956388294716*^9, 
   3.9269564509153366`*^9}, {3.9269564892170963`*^9, 3.926956490330381*^9}, {
   3.92695691267325*^9, 3.92695693867486*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"062cdd0a-d793-7348-a723-ff6f91dfc7d5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQvZW/KCj4xhtHBhBQ6HEAkg9Kgfztjgm+Arf6QXyD
uTffOM49nHzq9IoJIH7DkVtvHDV9poq/lJoI4l94ffuN40zWh68Pi0wG8RWE
775xTFLZXtiyC8wvsLr3xlF964YFvi1TQPwDifffOCocZSx61jgVxBfofPDG
cbbOS6ZzU6eB+BuuP3rj+Gevrejx22A+w//HbxzlDBydzM6B+QFqT9842uyd
qrRoApi/wPcZlL8BzP9Q8hzKvwHmO8x58cZxxgQ/5SurwfwJh1++cVyzodrF
lXk62H9Cb6B8bTC/wfLtG0efeKZSvRdg9RcS3r1xjJz9WkLZFSyv0PEeGD5s
STrznk9zuOP+Q+HXe0T4AQAdfYuA
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/SnSvOPwpzeODCCg0OMAJAX+wfgW/SB+guqXN47h
7wKq5W/2gfgbfL5C+ZpgeYaSb28cDyev7Ex5DOYHzP7+xnG1v7l5/N0JIP6C
Qz/eOC7JX+EgxDgRxP/w8icK30Hw9xtH99lG2xtLwOonWPx547h74c9d80TB
8g/i/75xFFq/c5vzK7B8w7r/bxw31tXya50G8y9cZXjruD1hrnAkB1h9gQrz
W8f53B9ZQnzB/APeLG8dnRXv6c48AuYLFLO+deRynfU7v2AS2H+z2N46SqeZ
SM4Imwy27zX7W8eNJ76lLOmZ7hDhwVhyhfctPHwAGHN1xQ==
          "]], 
         LineBox[{{3.904725181064533*^9, 900.}, {3.904848*^9, 
          1094.476995835319}, {3.9054528*^9, 1143.4302900525897`}, {
          3.9060576*^9, 1130.8849405986207`}, {3.9066624*^9, 
          1157.1923112905524`}, {3.9072672*^9, 1167.2541301807464`}, {
          3.9084768*^9, 1188.7884646929874`}, {3.9090816*^9, 
          1197.120305583348}, {3.9096864*^9, 1197.120305583348}, {
          3.9102912*^9, 1197.120305583348}, {3.9115008*^9, 
          1197.120305583348}, {3.9121056*^9, 1207.120305583348}, {
          3.9133152*^9, 1220.4991564572979`}, {3.91392*^9, 
          1312.531903930861}, {3.9145248*^9, 1358.7554951810848`}, {
          3.9151296*^9, 1412.9116096344048`}, {3.915216*^9, 
          1507.931818445917}, {3.9152508326817374`*^9, 900.}}], 
         LineBox[{{3.9168463918283963`*^9, 900.}, {3.916944*^9, 979.}, {
          3.9181536*^9, 989.}, {3.9187584*^9, 983.8222971204058}, {
          3.9193632*^9, 1031.6937242626122`}, {3.919968*^9, 
          1068.5141034600138`}, {3.9205728*^9, 1105.4003495671116`}, {
          3.9211776*^9, 1225.8613062430065`}, {3.9217824*^9, 
          1301.3281445148002`}, {3.9223872*^9, 1321.5914111032416`}, {
          3.922992*^9, 1351.484910104925}, {3.9242016*^9, 
          1389.617808634477}, {3.9248064*^9, 1466.9585845439526`}, {
          3.9254112*^9, 1523.4875277166352`}, {3.926016*^9, 
          1564.3917203529359`}, {3.9266208*^9, 1673.0077518975959`}}]}, 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxV039MlHUcB/DbdZKKyImhCw88iWMaxWGCnFj5vJMGitiNsnmFclh0t7H0
HD9mS9pt2cSt5p1sRFTLSSjSVMgsZnWSwXC0JhaK2ohLFor3/RwHASJ42Pn9
/HXP9uzZa9/n+3z3/rz3rNi1p6BErVKpckP3o2focm3tE9C/v8/Z63ErIXsr
rgsEfDWpSZ3SaV/eENjbXZyzZFja2XFTINkZ2bxxTLrH95dA+e/1zW0xRx5Z
v7hfYKkuwx2xTNqR9bfAzwftl1ufkm4vHhAYT5j/0tXl0tpDXoGf1G2nKl6W
bum7JeAqONGvy5NWPRwU0Gzt8kTnSJuT/xX4J+rSzQFF+mj+kICu4/D0WKZ0
oPy2gLf01X5LmrTyxR2B7N/2G9avlHb9OiwwX3u+7WyqdFqMEPg6WFaSsUba
uY4EOivf6jiXLN1j9QsMfZ9VVWzkfNUjAo6iY/7ORM53JhBm7eyYwMR46V3/
E9JWw7jAWdv+eRTJ+bZMCKj92UMn1ZyvfFLgTEzVjQW8bv78nsBgk2+yJo7z
XZwSeL2izBi/gPMN3w+zsmhG4HBpxeBUUPbhMj0QWPRatCU4R657i4ICqtgS
W+897u/0Q4Eqw+1V/lHu76qKoOks8o36pR1JjxEedKfMvMLvt+dpCO5Ac71V
w/nK5hDOv5uTe4z7ttZHEL5qfC9xG/fp9T1O+C5dmSjYzPOuXULosF3e4Mnn
/XeWEip327pytvH+6CcJ3W/jpP1Nns/aOILIj9vUaOH57FxGsB2INJre4Pl8
pCPYvbO6X9iBPxMIKXOrXuxlKzPLCZ+ov12sYbsSV4TZuykxzM66pDD3XDAQ
LFkfrzVs534XriT8MJB5aiO7PWMVYbS6qe+zQs6z42lCwurjlXU7OM+BFILn
nP9aYCeffzrk9NprsU4r778e7pZvngmzeTqVcMnUGPFOEefLXU1QR8Wv/4C/
pzieI2w3BHc7+DzXp2sItQ2ZyRd53etJJ+TN09fs3cL/71AGoXxfnh23uP+o
TELThexdP97l/tNNBK3RXRM/Iq0vXEdoRd1CFdvxYRbBkDDS0EDS2j+eD/Vj
NhaqA9LW+y8Qeo62dh36T7pFv4FgqrfYpyelVbkKIW3iYOyRKWnzHoTyXqm+
8uysW/kfESDGFA==
          "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {{{{{{}, {
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1673.0077518975959`}], 
                
                Offset[{3., -5.469691361122016*^-9}, {3.928892832*^9, 
                 1673.0077518975959`}], 
                Offset[{0, 0}, {3.9300056640010943`*^9, 1673.007751850395}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640010943`*^9, 1673.007751850395}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1673.007751850395}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1673.007751850395}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1673.0077518975959`}], 
                
                Offset[{3., -5.469691361122016*^-9}, {3.928892832*^9, 
                 1673.0077518975959`}], 
                Offset[{0, 0}, {3.9300056640010943`*^9, 1673.007751850395}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640010943`*^9, 1673.007751850395}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1673.007751850395}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1673.007751850395}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{137., 7.00000000000003}, {3.9300056640010943`*^9, 
                 1673.007751850395}], 
                
                Offset[{137., -6.99999999999997}, {3.9300056640010943`*^9, 
                 1673.007751850395}], 
                
                Offset[{10., -6.999999999999998}, {3.9300056640010943`*^9, 
                 1673.007751850395}], 
                
                Offset[{10., 7.000000000000002}, {3.9300056640010943`*^9, 
                 1673.007751850395}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                "\"Seasonal Rating (SR)         \"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{73.5, 1.63202784619898*^-14}, {3.9300056640010943`*^9, 
               1673.007751850395}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1151.5447446229637`}], 
                
                Offset[{3., 2.2075674599941983`*^-10}, {3.928892832*^9, 
                 1151.5447446229637`}], 
                Offset[{0, 0}, {3.9300056640010943`*^9, 1151.5447446248686`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640010943`*^9, 1151.5447446248686`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1151.5447446248686`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1151.5447446248686`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1151.5447446229637`}], 
                
                Offset[{3., 2.2075674599941983`*^-10}, {3.928892832*^9, 
                 1151.5447446229637`}], 
                Offset[{0, 0}, {3.9300056640010943`*^9, 1151.5447446248686`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640010943`*^9, 1151.5447446248686`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1151.5447446248686`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640010943`*^9,
                  1151.5447446248686`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{136., 7.00000000000003}, {3.9300056640010943`*^9, 
                 1151.5447446248686`}], 
                
                Offset[{136., -6.99999999999997}, {3.9300056640010943`*^9, 
                 1151.5447446248686`}], 
                
                Offset[{10., -6.999999999999998}, {3.9300056640010943`*^9, 
                 1151.5447446248686`}], 
                
                Offset[{10., 7.000000000000002}, {3.9300056640010943`*^9, 
                 1151.5447446248686`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                "\"Matchmaking rating (MMR)\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{73., 1.6209256159527285`*^-14}, {3.9300056640010943`*^9,
                1151.5447446248686`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8709792*^9, 900.000000000002}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Rating (SR or MMR)\"", HoldForm], TraditionalForm], 
        None}, {None, None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}, "TickLabels" -> 
         None]}}, 
     GridLines -> {{3.8709792*^9, 3.8735712*^9, 3.8762496*^9, 3.8788416*^9, 
       3.88152*^9, 3.8841984*^9, 3.8866176*^9, 3.889296*^9, 3.891888*^9, 
       3.8945664*^9, 3.8971584*^9, 3.8998368*^9, 3.9025152*^9, 3.9051072*^9, 
       3.9077856*^9, 3.9103776*^9, 3.913056*^9, 3.9157344*^9, 3.91824*^9, 
       3.9209184*^9, 3.9235104*^9, 3.9261888*^9}, {900, 950, 1000, 1050, 1100,
        1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     ImagePadding -> {{All, 161.4000000100302}, {All, All}}, ImageSize -> 
     Scaled[0.75], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& )}}, PlotLabel -> 
     FormBox["\"Primerjava SR in MMR igralca 8 za \[CHacek]asa: februar 2024 \
- julij 2024\"", TraditionalForm], 
     PlotRange -> {{3.8709792*^9, 3.9266208*^9}, {900., 1700.}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Seasonal Rating (SR)\"", "\"Matchmaking rating (MMR)\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9269546092566338`*^9, 3.926954703049914*^9}, {
   3.9269547906966286`*^9, 3.926954799159746*^9}, {3.926954845516875*^9, 
   3.926954858077341*^9}, 3.926954901045206*^9, 3.926954944425455*^9, 
   3.926954983436525*^9, {3.926955021135559*^9, 3.9269550253579464`*^9}, {
   3.926955122672634*^9, 3.926955137235635*^9}, {3.926955178013401*^9, 
   3.926955185631098*^9}, 3.926955219348984*^9, 3.926955605679752*^9, {
   3.926955705465715*^9, 3.9269557240079384`*^9}, 3.926955776788774*^9, {
   3.926955814509701*^9, 3.926955874613865*^9}, 3.9269559629606113`*^9, {
   3.926956081050909*^9, 3.9269561270029545`*^9}, 3.926956293387283*^9, 
   3.926956327942825*^9, 3.926956359222889*^9, 3.926956391150366*^9, 
   3.9269564534223766`*^9, 3.926956493587133*^9, {3.92695691739374*^9, 
   3.9269569407833366`*^9}, 3.9270153081006*^9, 3.9270230299372253`*^9, 
   3.927028101534086*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"cc7b4f22-7d74-f04e-a0ec-42d6394662ce"]
}, Open  ]],

Cell["\<\

Najprej nekaj pojasnil: SR se je v celotni zgodovini resetiral trikrat. Za \
voljo zabave in  tekmovalnosti ga resestiramo dvkrata letno, konec januarja \
in konec avgusta. To je razlog za \[OpenCurlyDoubleQuote]\[SHacek]pice\
\[CloseCurlyDoubleQuote]. 

Izgleda, kot da sta ratinga popolnoma nepovezana. \[CapitalCHacek]eprav imata \
podobni imeni in \[CHacek]eprav oba ocenjujeta igralca, pa se izka\[ZHacek]e, \
da sta si med seboj popolnoma razli\[CHacek]na. \[LineSeparator]\
\[LineSeparator]Premislimo zakaj je temu tako. \[LineSeparator]MMR je druga\
\[CHacek]e povedano ocena igralca skozi celotno njegovo kariero. SR pa ocena \
igralca v dolo\[CHacek]enem \[CHacek]asovnem obdobju. Pa ne bi bila potem \
bolj\[SHacek]a ocena za izdelavo ekip SR, ki ima bolj aktualne podatke o \
igralcu? \[CapitalCHacek]e igralec mo\[CHacek]no napreduje se kljub temu MMR \
le malo spremeni? Vse to dr\[ZHacek]i. Igralci, ki mo\[CHacek]no napredujejo \
skozi svojo kariero so tu o\[SHacek]kodovani, vsaj s strani papirja in \
\[SHacek]tevilke. Po drugi strani so tak\[SHacek]ni igralci stalno podcenjeni \
s strani algoritma in so njihove tekme \[OpenCurlyDoubleQuote]la\[ZHacek]je\
\[CloseCurlyDoubleQuote], kar pomeni \[SHacek]e ve\[CHacek] mo\[ZHacek]nosti \
za velik prispevek ekipi, kar pa posledi\[CHacek]no dvigne povpre\[CHacek]je \
in posledi\[CHacek]no MMR. V dovolj dolgem \[CHacek]asovnem obdobju se bo \
tudi njegov MMR premaknil v pravo smer. Mo\[ZHacek]nost uporabe le zadnjih \
nekaj zapisov je bila predlagana in hkrati zavrnjena v enem od testov, saj je \
bil zaradi pomanjkanja podatkov algortem za dolo\[CHacek]anje MMR zelo \
nezanesljiv. Poleg tega je bil SR predstavljen kasneje, kot na\[CHacek]in za \
primerjavo, ki ni MMR. Po nekem dalj\[SHacek]em \[CHacek]asovnem obdobju je \
MMR nesmiselno primerjati, saj so spremembe prakti\[CHacek]no neobstojne. \
\[LineSeparator]
Poglejmo si \[SHacek]e kak\[SHacek]en primer:\
\>", "Text",
 CellChangeTimes->{{3.926956501469776*^9, 3.9269565963193817`*^9}, {
  3.926956956248068*^9, 3.9269569676109734`*^9}, {3.9269570298425694`*^9, 
  3.9269576887635746`*^9}, {3.9269578049362583`*^9, 3.9269578778549976`*^9}, {
  3.926957989160845*^9, 
  3.926958010175827*^9}},ExpressionUUID->"6287494f-b6f7-734e-8b93-\
9cf5ded0a468"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P0Complete", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"Delete", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<surname\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<best teammate\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<worst teammate\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<title\>\"", "}"}], ",", " ", 
         RowBox[{"{", "\"\<season title\>\"", "}"}]}], "}"}], "]"}], "]"}], 
     "@", " ", "Upload0"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0CompleteSR", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"P0Complete", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<SR\>\""}], "}"}]}], "]"}], 
     ")"}], "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"KeyMap", "[", 
      RowBox[{"Replace", "[", 
       RowBox[{"\"\<SR\>\"", "->", "\"\<MMR\>\""}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P0CompleteMMR", " ", "=", " ", 
    RowBox[{"P0Complete", "[", 
     RowBox[{"All", " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<date\>\"", ",", " ", "\"\<MMR\>\""}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"P0CompleteSR", ",", "P0CompleteMMR"}], "}"}], " ", ",", " ", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Rating (SR or MMR)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "900", ",", "950", ",", " ", "1000", ",", "1050", ",", " ", "1100", 
        ",", "1150", ",", " ", "1200", ",", " ", "1250", ",", " ", "1300", 
        ",", " ", "1350", ",", " ", "1400", ",", " ", "1450", ",", " ", 
        "1500", ",", " ", "1550", ",", " ", "1600", ",", " ", "1650"}], 
       "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"900", ",", " ", "1300"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Seasonal Rating (SR)         \>\"", ",", 
      "\"\<Matchmaking rating (MMR)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"Scaled", "[", "0.75", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Seasonal Rating (SR)\>\"", ",", 
        "\"\<Matchmaking rating (MMR)\>\""}], "}"}], ",", " ", "Below"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Primerjava SR in MMR igralca 0 za \[CHacek]asa: september 2022 - \
julij 2024\>\""}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", "Green"}], "}"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"FrameTicks", "->", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}], ",", " ", "None"}], 
      "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateTicksFormat", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", " ", "\"\</\>\"", ",", " ", "\"\<Year\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", " ", "]"}]}], "Input",
 CellChangeTimes->{{3.9269578906304054`*^9, 3.926957942859062*^9}, {
  3.927015672388185*^9, 3.927015674731417*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"5285b1c5-20a6-db4f-8b91-a04eee4c7cf2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQbbfOs6b55htHBhBQ6HEAkgZzgfyY4zaVCef6QPyG
I7dQ+Bde30bhKwjfReEXWN1D4R9IvI/CF+h8gMLfcP0RCp/h/2MUfoDaUxT+
At9nKPwPJc9R+A5zXqDwJxx+icI3EHqD6j/Lt6j+S3iH6r+O9wj+ocBtlxe+
R4QXAIKPh/c=
          "]], 
         LineBox[{{3.886644064864865*^9, 900.}, {3.886704*^9, 999.}, {
          3.8873088*^9, 999.}, {3.8879136*^9, 999.}, {3.8885184*^9, 999.}, {
          3.8891232*^9, 999.}, {3.889728*^9, 999.}, {3.8903328*^9, 
          988.1256122716528}, {3.8909376*^9, 976.9185809731714}, {
          3.8921472*^9, 1003.478896973506}, {3.892752*^9, 
          1003.478896973506}, {3.8939616*^9, 1017.515094234851}, {
          3.8945664*^9, 1018.5636070224364`}, {3.8951712*^9, 
          1018.5636070224364`}, {3.895776*^9, 1018.5636070224364`}, {
          3.8964672*^9, 1018.5636070224364`}, {3.897362290602368*^9, 900.}}], 
         
         LineBox[{{3.9065830326687174`*^9, 900.}, {3.9066624*^9, 
          1035.9462446991063`}, {3.9072672*^9, 1076.3713498709647`}, {
          3.9084768*^9, 1067.0253094923762`}, {3.9090816*^9, 
          1105.7466820448396`}, {3.9096864*^9, 1241.2512776229398`}, {
          3.9102912*^9, 1242.0641232101232`}, {3.9115008*^9, 
          1265.04347388749}, {3.9121056*^9, 1265.04347388749}, {3.9133152*^9, 
          1260.435559639429}, {3.91392*^9, 1239.9944698544912`}, {
          3.9145248*^9, 1239.9944698544912`}, {3.9151296*^9, 
          1235.2751744156628`}, {3.915216*^9, 1223.2560780304248`}, {
          3.9152388319528866`*^9, 900.}}], 
         LineBox[{{3.9168232568994226`*^9, 900.}, {3.916944*^9, 
          999.8008008008009}, {3.9181536*^9, 999.8008008008009}, {
          3.9187584*^9, 1025.7993383541088`}, {3.9193632*^9, 
          1066.7948930236023`}, {3.919968*^9, 1066.7948930236023`}, {
          3.9205728*^9, 1112.2938565451125`}, {3.9211776*^9, 
          1141.280367699451}, {3.9217824*^9, 1118.4623551260706`}, {
          3.9223872*^9, 1156.2557079444155`}, {3.922992*^9, 
          1250.8668632003162`}, {3.9242016*^9, 1252.449837930669}, {
          3.9248064*^9, 1252.449837930669}, {3.9254112*^9, 
          1252.449837930669}, {3.926016*^9, 1252.449837930669}, {3.9266208*^9,
           1252.449837930669}}]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
       
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxV011IU2EYwPGD9oGxqSUsNFnb8CvL0tJ0YrTnIlof1ojqwtxcQkVfbpRe
7CKVzK1dlOsiK7OyqLyI7JAXQkSKE6wLRbdKrUxJXMrOoyPLpXPZ6bwX+Rw4
HH4c3vec//ueoy61HDoRwXGcXjz/XcXDdWBAAM3g9YfTzS6d6NGKQeLMe0MC
TFWlGSurJFd3fSLu838mVsUNE1vzvxJ3HB8hjnWOEvMD34i5xTFiQ8o4cVOh
jzhQ/p1Y1zhB7HJPEmeuEWifFmmfeYr2XZ2mfS8CAvi7zkSo6lnPnx/E5uSf
xPz+XwJ4T4a/hC6wvvJZYsPdIHFT52/iwOQcsW51iNiVtyDAnEPWWHuE7WdJ
WAB54syd3gLW17IoQIY+WOUuZn0fOFxqa1Ikgi3d19pexvZr3zJcOl/sxeXE
5oYVxKP+lcSuegUdP7GWjo+JJ+a3JxBzpnUIdW8PNrRdZutTm4gQ1W/H6Vds
PbxKhM66/mbVY7YeofUIeMpX6vSy52vUCP2RshH36RvS++3RIJxf8Lx2HpZc
fTsJIWvI8VJrk9zXnozQ1ommeXbfGp0mjo8zesZBckfOBoTcVWXdH7dIjjWm
E5uvbER477CMvVNKdrWIzpBfGm6LZuMHqflnm4gN85sRev1Rpni55IA+i1hn
3Yri/1nYU5TC5r+1DaHm6F575S7W9yYboeQB/+imgn3fvhwE5dOU2R4L65Xn
IrQ+Odu1u5z1Zuch3JfZn8eck6wq1iIUhRMUfAXrr8kX13/mmLr3Guv1FCCk
pga7bQ7WO7eDmFftJOb0OmKDBf77L+LO3C4=
          "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {{{{{{}, {
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1252.449837930669}], 
                
                Offset[{3., 3.0036639770340892`*^-9}, {3.928892832*^9, 
                 1252.449837930669}], 
                Offset[{0, 0}, {3.9300056640026555`*^9, 1252.449837943629}], 
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640026555`*^9, 1252.449837943629}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1252.449837943629}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1252.449837943629}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1252.449837930669}], 
                
                Offset[{3., 3.0036639770340892`*^-9}, {3.928892832*^9, 
                 1252.449837930669}], 
                Offset[{0, 0}, {3.9300056640026555`*^9, 1252.449837943629}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640026555`*^9, 1252.449837943629}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1252.449837943629}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1252.449837943629}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{137., 7.00000000000003}, {3.9300056640026555`*^9, 
                 1252.449837943629}], 
                
                Offset[{137., -6.99999999999997}, {3.9300056640026555`*^9, 
                 1252.449837943629}], 
                
                Offset[{10., -6.999999999999998}, {3.9300056640026555`*^9, 
                 1252.449837943629}], 
                
                Offset[{10., 7.000000000000002}, {3.9300056640026555`*^9, 
                 1252.449837943629}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                "\"Seasonal Rating (SR)         \"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{73.5, 1.63202784619898*^-14}, {3.9300056640026555`*^9, 
               1252.449837943629}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1121.8689268701216`}], 
                
                Offset[{3., -1.3273415668222066`*^-8}, {3.928892832*^9, 
                 1121.8689268701216`}], 
                Offset[{0, 0}, {3.9300056640026555`*^9, 1121.86892681285}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640026555`*^9, 1121.86892681285}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1121.86892681285}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1121.86892681285}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 1121.8689268701216`}], 
                
                Offset[{3., -1.3273415668222066`*^-8}, {3.928892832*^9, 
                 1121.8689268701216`}], 
                Offset[{0, 0}, {3.9300056640026555`*^9, 1121.86892681285}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {
                 3.9300056640026555`*^9, 1121.86892681285}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1121.86892681285}], 
                Offset[{10., 2.220446049250313*^-15}, {3.9300056640026555`*^9,
                  1121.86892681285}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{136., 7.00000000000003}, {3.9300056640026555`*^9, 
                 1121.86892681285}], 
                
                Offset[{136., -6.99999999999997}, {3.9300056640026555`*^9, 
                 1121.86892681285}], 
                
                Offset[{10., -6.999999999999998}, {3.9300056640026555`*^9, 
                 1121.86892681285}], 
                
                Offset[{10., 7.000000000000002}, {3.9300056640026555`*^9, 
                 1121.86892681285}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                "\"Matchmaking rating (MMR)\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{73., 1.6209256159527285`*^-14}, {3.9300056640026555`*^9,
                1121.86892681285}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8709792*^9, 900.000000000002}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Rating (SR or MMR)\"", HoldForm], TraditionalForm], 
        None}, {None, None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}, "TickLabels" -> 
         None]}}, 
     GridLines -> {{3.8709792*^9, 3.8735712*^9, 3.8762496*^9, 3.8788416*^9, 
       3.88152*^9, 3.8841984*^9, 3.8866176*^9, 3.889296*^9, 3.891888*^9, 
       3.8945664*^9, 3.8971584*^9, 3.8998368*^9, 3.9025152*^9, 3.9051072*^9, 
       3.9077856*^9, 3.9103776*^9, 3.913056*^9, 3.9157344*^9, 3.91824*^9, 
       3.9209184*^9, 3.9235104*^9, 3.9261888*^9}, {900, 950, 1000, 1050, 1100,
        1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     ImagePadding -> {{All, 161.40000002434041`}, {All, All}}, ImageSize -> 
     Scaled[0.75], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& )}}, PlotLabel -> 
     FormBox["\"Primerjava SR in MMR igralca 0 za \[CHacek]asa: september \
2022 - julij 2024\"", TraditionalForm], 
     PlotRange -> {{3.8709792*^9, 3.9266208*^9}, {900., 1300.}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Seasonal Rating (SR)\"", "\"Matchmaking rating (MMR)\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.926957913773565*^9, 3.9269579463688583`*^9}, 
   3.927015308526696*^9, 3.9270156779603615`*^9, 3.9270230306669292`*^9, 
   3.927028101964266*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"9f76da49-e4bd-ac4c-a879-67179dc94a85"]
}, Open  ]],

Cell["\<\
Pri igralcu 0 pa deluje, da sta MMR in SR vseeno nekako povezana (maj 2023 - \
julij 2023, september 2023 - januar 2024). Pa je temu res tako oz. kako sta \
povezana?
Vemo, da se oba ratinga pove\[CHacek]ujeta z dobrimi rezultati. Preverimo \
\[SHacek]e uspe\[SHacek]nost igralca 0 (dose\[ZHacek]eni goli, \
\[SHacek]tevilo zmag, asistenc). \[CapitalCHacek]e se bodo rezulati v teh \
\[CHacek]asovnih obdobjih prav tako mo\[CHacek]no izbolj\[SHacek]ali, potem \
sta odvisna od tega in ne direktno en od drugega. 
\
\>", "Text",
 CellChangeTimes->{{3.926958023510184*^9, 3.926958121106092*^9}, {
  3.9269584247392626`*^9, 3.9269585128040924`*^9}, {3.92695864108745*^9, 
  3.9269586530216303`*^9}, {3.9269587931950445`*^9, 
  3.926958817724592*^9}},ExpressionUUID->"ba9b757e-6942-6d4f-b28a-\
dbc00899ef24"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Player0StatsG", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"P0Complete", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<goals\>\""}], "}"}]}], "]"}], 
     ")"}], "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"KeyMap", "[", 
      RowBox[{"Replace", "[", 
       RowBox[{"\"\<goals\>\"", "->", "\"\<show\>\""}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Player0StatsA", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"P0Complete", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<assists\>\""}], "}"}]}], "]"}],
      ")"}], "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"KeyMap", "[", 
      RowBox[{"Replace", "[", 
       RowBox[{"\"\<assists\>\"", "->", "\"\<show\>\""}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Player0StatsW", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"P0Complete", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "\"\<wins\>\""}], "}"}]}], "]"}], 
     ")"}], "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"KeyMap", "[", 
      RowBox[{"Replace", "[", 
       RowBox[{"\"\<wins\>\"", "->", "\"\<show\>\""}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Player0Stats", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Player0StatsA", ",", " ", "Player0StatsG", ",", " ", "Player0StatsW"}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.927015331474889*^9, 3.927015527103468*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"b03e2496-471c-7e41-ad5b-012563499a8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"Player0Stats", " ", ",", " ", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Number of: wins / goals / assists\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", 
        ",", "40", ",", "45", ",", "50", ",", "55", ",", "60", ",", "65", ",",
         "70", ",", "75", ",", "80", ",", "85"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "50"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Assists         \>\"", ",", "\"\<Goals\>\"", ",", " ", 
      "\"\<Wins\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"Scaled", "[", "0.75", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Assists\>\"", ",", "\"\<Goals\>\"", ",", " ", "\"\<Wins\>\""}], 
       "}"}], ",", " ", "Below"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Primerjava skupnih golov, asisitenc in zmag igralca 0: februar 2024 \
- julij 2024\>\""}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", "Green", ",", " ", "Blue"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "->", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}], ",", " ", "None"}], 
      "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateTicksFormat", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", " ", "\"\</\>\"", ",", " ", "\"\<Year\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", " ", "]"}]], "Input",
 CellChangeTimes->{{3.927015562066992*^9, 3.9270157021116295`*^9}, {
  3.927015735007475*^9, 3.927015759942995*^9}, {3.9270158019797287`*^9, 
  3.927015827303444*^9}, {3.927016043932976*^9, 3.927016045498328*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"17c59d94-f098-a54b-8742-b6ad12493625"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxV0UlLAmEcx/GH9ks1LRQtlA4qViJWWipF481oYejcMgWdFbK7UEHd5lTR
At0Dm1dQQ/UCogitqKTIFLUk2szK7ImH+A3MPM/n8Azz/Y92yjMynUcIcefu
3zV3ycPBhOtvWyLkHuHZENiyeQb2H56Dj+IXYE3VJdjrvAKrk9dgbikMVoI3
YJK9BYuGO/DWUASc8t2DhY0oWD6IYV9lAvscSeyTHrBv8RH7dlLY8/0ElvTP
2Df4gn2+V+xbf8O+/Xfsi6WxryKDffZP/J8TX9gXyGLfKUlCjy4frA4UgLmZ
QrC0VgQOx4vB8nINno/W4vnyOrDSVQ8m4w1gcaGRmaPzOGlirqbzyDSDZV7L
zNPv6+fB/lUds47OY08P9pYZwaqtBcyNtYKl+TawHECrIbSybQKLH2Zwyt0O
Frwd+P6VTmYD7du1gi0RG9hf2s1spL1WO1gz6mA20f45J7OZ9h73MFtob7oX
rGj6wMQtgEWP698/DG/YCQ==
          "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxV0esrQ3Ecx/GT6yMMRS4xa1uM1rA740ypyaXlscuhPN4p83yF4tkeIZfy
XM3+Ahb+AJE2hEVmaxtLbjPMfPnhc+rsnFc7v3PO+3vqxh2DE1kcx9ky+9cx
s7kH/DHr96mUz/wEpwJgzdox2LV3At6PnoKlpWdg0XwO9o1dgCXzQbDXfwnm
0ldgu/IavN4fAiecN2B+NQx270awrySGfaY49gm32Dd3h32bCez5uAcLigfs
63vEPucT9q08Y9/OC/ZFkthXnMI+4xt+z9F37POkmWXUd8TF/1uUZ4N9vTlg
yWQuWFjOAwej+WD3QhmuD5fj+qIKsFdfCeZGqpiVNJ/ZamYVzeOwBsynapnV
9HxZHbOO3q9HxqyneSzJmQ00j20FWCysZzbSPHQNzCbqGVaBhZlGZjM93/Pr
NlofQHs3msD2VzWzhfpszWBebGHuoPsvtjJ3Ut+WFqwJ6X7s4qm3wMD+76Je
rREsHTKx68nitJm5m3oP2sFC0gL2SjvBnI0H2x3WP38CJgvivw==
          "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxV0ElLAmEcx/Gh9VRZQdFCqaiYibhvFI03owXp3DIFnRWyu1BB3eZU0QLe
A5tXUEP1AqQIraiGIlPUkmgzK9MnHuo3MPPM5/DMPN+/YsY/NlvBMIy3dJfX
0sWPxjKe31cNW3pI83GwcfsMHDo6B0fTF2B58yU44L4Ci9PXYNmKBBZiN2Cm
eAv2ae7A4ZEEOBe8B7NbSTB/mMK+pgz2ubLYxz1g3/Ij9u3mqLWk5/sJzKmf
wcLwC5gJvoJ9m2/g8ME7OJfKg9nGAph3foKlqS9wKFKk1pG+Uyb73wFVJbW+
bHGoCiybqwZzGzVgKV0L5ldbcH+yFfc3tIEFezuYmeygNpD5LHVSG8k8TrrA
bKGb2kT+r1RQm8n5BpXg0LqK2kLmsa8GB+q1YNHWA5ZN6MDcYi+Yj6DFOFrY
0YN9HwZwzmsCswEztZV8f81CbSN9e1awMWGjtpPeOgc4anWC5eMuagfpX3BT
O0nvcR+Yy/eDBfkAmPGyYJ/f8+cfckPfJA==
          "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {{{{{{}, {
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 16.}], 
                
                Offset[{2.999999999999207, -2.181201963024953*^-6}, {
                 3.928892832*^9, 16.}], 
                Offset[{0, 0}, {3.930005664436386*^9, 15.9999988235799}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.930005664436386*^9, 
                 15.9999988235799}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 15.9999988235799}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 15.9999988235799}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 16.}], 
                
                Offset[{2.999999999999207, -2.181201963024953*^-6}, {
                 3.928892832*^9, 16.}], 
                Offset[{0, 0}, {3.930005664436386*^9, 15.9999988235799}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.930005664436386*^9, 
                 15.9999988235799}], 
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 15.9999988235799}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 15.9999988235799}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{72., 6.000000000000016}, {3.930005664436386*^9, 
                 15.9999988235799}], 
                
                Offset[{72., -5.999999999999984}, {3.930005664436386*^9, 
                 15.9999988235799}], 
                
                Offset[{10., -5.999999999999998}, {3.930005664436386*^9, 
                 15.9999988235799}], 
                
                Offset[{10., 6.000000000000002}, {3.930005664436386*^9, 
                 15.9999988235799}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Assists         \"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{41., 9.103828801926284*^-15}, {3.930005664436386*^9, 
               15.9999988235799}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 43.}], 
                
                Offset[{2.999999999999998, 1.1828836601280908`*^-7}, {
                 3.928892832*^9, 43.}], 
                Offset[{0, 0}, {3.930005664436386*^9, 43.000000063798225`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.930005664436386*^9, 
                 43.000000063798225`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 43.000000063798225`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 43.000000063798225`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 43.}], 
                
                Offset[{2.999999999999998, 1.1828836601280908`*^-7}, {
                 3.928892832*^9, 43.}], 
                Offset[{0, 0}, {3.930005664436386*^9, 43.000000063798225`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.930005664436386*^9, 
                 43.000000063798225`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 43.000000063798225`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 43.000000063798225`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{42., 6.000000000000009}, {3.930005664436386*^9, 
                 43.000000063798225`}], 
                
                Offset[{42., -5.999999999999991}, {3.930005664436386*^9, 
                 43.000000063798225`}], 
                
                Offset[{10.000000000000002`, -5.999999999999998}, {
                 3.930005664436386*^9, 43.000000063798225`}], 
                
                Offset[{10., 6.000000000000002}, {3.930005664436386*^9, 
                 43.000000063798225`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Goals\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{26., 5.773159728050814*^-15}, {3.930005664436386*^9, 
               43.000000063798225`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 24.}], 
                
                Offset[{2.9999999999994653`, 1.7912752751154187`*^-6}, {
                 3.928892832*^9, 24.}], 
                Offset[{0, 0}, {3.930005664436386*^9, 24.000000966115135`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.930005664436386*^9, 
                 24.000000966115135`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 24.000000966115135`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 24.000000966115135`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3, 0}, {3.9266208*^9, 24.}], 
                
                Offset[{2.9999999999994653`, 1.7912752751154187`*^-6}, {
                 3.928892832*^9, 24.}], 
                Offset[{0, 0}, {3.930005664436386*^9, 24.000000966115135`}], 
                
                Offset[{5., 1.1102230246251565`*^-15}, {3.930005664436386*^9, 
                 24.000000966115135`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 24.000000966115135`}], 
                
                Offset[{10., 2.220446049250313*^-15}, {3.930005664436386*^9, 
                 24.000000966115135`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{38., 6.000000000000009}, {3.930005664436386*^9, 
                 24.000000966115135`}], 
                
                Offset[{38., -5.999999999999991}, {3.930005664436386*^9, 
                 24.000000966115135`}], 
                
                Offset[{10.000000000000002`, -5.999999999999998}, {
                 3.930005664436386*^9, 24.000000966115135`}], 
                
                Offset[{9.999999999999998, 6.000000000000002}, {
                 3.930005664436386*^9, 24.000000966115135`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"Wins\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{24., 5.329070518200751*^-15}, {3.930005664436386*^9, 
               24.000000966115135`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.8709792*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"Number of: wins / goals / assists\"", HoldForm], 
         TraditionalForm], None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {"Month", "/", "Year"}, "TickLabels" -> 
         None]}}, 
     GridLines -> {{3.8709792*^9, 3.8735712*^9, 3.8762496*^9, 3.8788416*^9, 
       3.88152*^9, 3.8841984*^9, 3.8866176*^9, 3.889296*^9, 3.891888*^9, 
       3.8945664*^9, 3.8971584*^9, 3.8998368*^9, 3.9025152*^9, 3.9051072*^9, 
       3.9077856*^9, 3.9103776*^9, 3.913056*^9, 3.9157344*^9, 3.91824*^9, 
       3.9209184*^9, 3.9235104*^9, 3.9261888*^9}, {5, 10, 15, 20, 25, 30, 35, 
       40, 45, 50, 55, 60, 65, 70, 75, 80, 85}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     ImagePadding -> {{All, 96.40000399982833}, {All, All}}, ImageSize -> 
     Scaled[0.75], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& ), "CopiedValueFunction" -> (({
           DateString[
            Part[#, 1], "DateShort"], 
           Part[#, 2]}& )[{
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}]& )}}, PlotLabel -> 
     FormBox["\"Primerjava skupnih golov, asisitenc in zmag igralca 0: \
februar 2024 - julij 2024\"", TraditionalForm], 
     PlotRange -> {{3.8709792*^9, 3.9266208*^9}, {0., 50.}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Assists\"", "\"Goals\"", "\"Wins\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9270156906899433`*^9, 3.9270157043957043`*^9}, 
   3.927015760578139*^9, {3.927015805278473*^9, 3.9270158295249557`*^9}, 
   3.927016047301747*^9, 3.927023031622307*^9, 3.927028102479645*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"9ae1ca57-0cce-bf4d-a165-eef43ff05f68"]
}, Open  ]],

Cell["\<\
Takoj lahko opazimo, da je igralec v zadnjem letu mo\[CHacek]no napredoval \
oz. je veliko bolj efektiven. Eden od razlogov je morda ta, da so z novim \
\[SHacek]olskim letom zamenjali gole in so jih pove\[CHacek]ali, kar posledi\
\[CHacek]no pomeni, da jih je la\[ZHacek]je zadeti. Vendar pa se tudi \
\[SHacek]tevilo zmag bolj naglo ve\[CHacek]a, kot do takrat. Nas zanimata \
zgoraj omenjeni obdboji (maj 2023 - julij 2023, september 2023 - januar \
2024). V prvem obdobju se pozna rahel porast zmag in golov, kar je ravno \
takrat, ko se dvigneta tako SR kot MMR. Drug ve\[CHacek]ji porast je oktober \
oz. november 2023. Zopet se takrat oba ratinga hitro zvi\[SHacek]ata. \
\[LineSeparator]\[LineSeparator]Torej lahko iz tega sklepamo, da sta odvisna \
samo posredno. Dobra predstava igralca mo\[CHacek]no pove\[CHacek]a SR, kar \
pa ponavadi vpliva tudi na njegovo povrpe\[CHacek]je, kar posledi\[CHacek]no \
dvigne tudi MMR. 

\
\>", "Text",
 CellChangeTimes->{{3.927016056970932*^9, 3.9270160592314377`*^9}, {
  3.927016099092764*^9, 3.9270163737613773`*^9}, {3.9270165132526894`*^9, 
  3.927016536100788*^9}, {3.9270165667401314`*^9, 3.927016678254938*^9}, {
  3.927016745125862*^9, 
  3.9270167606196384`*^9}},ExpressionUUID->"d7057f1d-b102-974a-98f5-\
d49bd443c740"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Aplikacija za igralce in primerjanje ostalih podatkov", "Section",
 CellChangeTimes->{{3.839524445328412*^9, 3.839524454470028*^9}, {
   3.927016978557072*^9, 3.9270169966828575`*^9}, 
   3.9270264043469467`*^9},ExpressionUUID->"34c69bea-e064-46a7-a386-\
1223d278541c"],

Cell["\<\

Naredili pa smo \[SHacek]e aplikacijo, kjer se lahko vsak od analiziranih \
igralcev primerja z ostalimi po poljubni kategoriji.\
\>", "Text",
 CellChangeTimes->{{3.9270270146368103`*^9, 
  3.927027055497675*^9}},ExpressionUUID->"9f99e8a7-972f-6a4d-8915-\
463fcc45fc0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Prikaz", "[", 
    RowBox[{"id_", ",", " ", "stats_"}], "]"}], " ", ":=", " ", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Data", "[", 
       RowBox[{"[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "[", "id", 
          "]"}], "+", "1"}], "]"}], "]"}], "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<date\>\"", ",", " ", "stats"}], "}"}]}], "]"}], " ", ",",
      " ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "\"\<\[CapitalSHacek]tevilo\>\""}], "}"}]}], ",", 
     " ", 
     RowBox[{"GridLines", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}]}], "}"}], ",", 
        "None"}], "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     
     RowBox[{"PlotLabels", "->", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<   Igralec ``          \>\"", ",", " ", 
        RowBox[{"ToString", "[", "id", "]"}]}], " ", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "->", 
      RowBox[{"Scaled", "[", "0.75", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Igralec ``\>\"", ",", " ", 
           RowBox[{"ToString", "[", "id", "]"}]}], " ", "]"}], "}"}], ",", 
        " ", "Below"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Palette", "[", 
       RowBox[{"[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "[", "id", 
          "]"}], "+", "1"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "->", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2022", ",", " ", "9", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2022", ",", "10", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2022", ",", "11", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2022", ",", "12", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "1", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "2", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "3", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "4", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "5", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "6", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "7", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "8", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "9", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "10", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "11", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "12", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", " ", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "2", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "3", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "4", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "5", " ", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "6", " ", ",", "1"}], "}"}], ",", " ", 
         "None"}], "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"DateTicksFormat", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Month\>\"", ",", " ", "\"\</\>\"", ",", " ", "\"\<Year\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", " ", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9270249108970227`*^9, 3.92702498863073*^9}, {
   3.927025115789167*^9, 3.927025128010706*^9}, 3.9270252458158054`*^9, {
   3.927025362039139*^9, 3.9270253663101068`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"e39b36de-3067-0b40-a91f-d8f491509e11"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Primerjava", "[", 
     RowBox[{"x_", ",", " ", "y_", ",", " ", "info_"}], "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Prikaz", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "[", "x", 
           "]"}], ",", " ", "info"}], "]"}], ",", " ", 
        RowBox[{"Prikaz", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "[", "y", 
           "]"}], ",", " ", "info"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Primerjava Igralca `` in Igralca ``. Kategorija: ``.\>\"", ",", 
         " ", 
         RowBox[{"ToString", "[", "x", "]"}], ",", " ", 
         RowBox[{"ToString", "[", "y", "]"}], ",", " ", "info"}], "]"}]}], 
      ",", 
      RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.927025022148915*^9, 3.9270250621682396`*^9}, {
  3.927025217264767*^9, 3.927025217698864*^9}, {3.92702524783226*^9, 
  3.9270253202261353`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"5dd28abf-af00-0c4a-8936-a246cd9f2b96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"obrazec", " ", "=", " ", 
  RowBox[{"FormPage", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Prvi\>\"", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<0\>\"", ",", " ", "\"\<1\>\"", ",", " ", "\"\<3\>\"", ",", " ", 
         "\"\<4\>\"", ",", " ", "\"\<7\>\"", ",", " ", "\"\<8\>\"", ",", " ", 
         "\"\<10\>\"", ",", " ", "\"\<11\>\"", ",", " ", "\"\<12\>\"", ",", 
         " ", "\"\<13\>\"", ",", " ", "\"\<14\>\"", ",", " ", "\"\<16\>\"", 
         ",", " ", "\"\<28\>\"", ",", " ", "\"\<29\>\"", ",", " ", 
         "\"\<33\>\""}], "}"}]}], ",", " ", 
      RowBox[{"\"\<Drugi\>\"", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<0\>\"", ",", " ", "\"\<1\>\"", ",", " ", "\"\<3\>\"", ",", " ", 
         "\"\<4\>\"", ",", " ", "\"\<7\>\"", ",", " ", "\"\<8\>\"", ",", " ", 
         "\"\<10\>\"", ",", " ", "\"\<11\>\"", ",", " ", "\"\<12\>\"", ",", 
         " ", "\"\<13\>\"", ",", " ", "\"\<14\>\"", ",", " ", "\"\<16\>\"", 
         ",", " ", "\"\<28\>\"", ",", " ", "\"\<29\>\"", ",", " ", 
         "\"\<33\>\""}], "}"}]}], ",", " ", 
      RowBox[{"\"\<Kategorija\>\"", "->", 
       RowBox[{"AlphabeticSort", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<goals\>\"", ",", " ", "\"\<assists\>\"", ",", "\"\<winrate\>\"",
           ",", " ", "\"\<wins\>\"", ",", " ", "\"\<SR\>\"", ",", " ", 
          "\"\<MMR\>\"", ",", " ", "\"\<attendance\>\"", ",", " ", 
          "\"\<matches played\>\"", ",", " ", "\"\<auto goals\>\"", ",", " ", 
          "\"\<goal average\>\"", ",", " ", "\"\<assist average\>\"", ",", 
          " ", "\"\<autogoal average\>\"", ",", " ", "\"\<losses\>\"", ",", 
          " ", "\"\<ties\>\"", ",", " ", "\"\<winstreak\>\"", ",", " ", 
          "\"\<losing streak\>\"", ",", " ", "\"\<weeks on top\>\"", ",", 
          " ", "\"\<rank goals\>\"", ",", " ", "\"\<rank assists\>\"", ",", 
          " ", "\"\<rank winrate\>\"", ",", " ", "\"\<rank wins\>\"", ",", 
          " ", "\"\<rank losses\>\"", ",", " ", "\"\<rank ties\>\"", ",", 
          " ", "\"\<rank MMR\>\"", ",", " ", "\"\<rank attendance\>\"", ",", 
          " ", "\"\<rank matches played\>\"", ",", " ", 
          "\"\<rank goal average\>\"", ",", " ", 
          "\"\<rank assists average\>\"", ",", " ", "\"\<debt\>\"", ",", " ", 
          "\"\<season goals\>\"", ",", " ", "\"\<season assists\>\"", ",", 
          "\"\<season winrate\>\"", ",", " ", "\"\<season wins\>\"", ",", 
          " ", "\"\<season attendance\>\"", ",", " ", 
          "\"\<season matches played\>\"", ",", " ", 
          "\"\<season MVP goal\>\"", ",", " ", "\"\<season rank MVP\>\"", ",",
           " ", "\"\<season MVP assist\>\"", ",", " ", 
          "\"\<season MVP rank assist\>\"", ",", " ", 
          "\"\<season weeks on top\>\"", ",", " ", 
          "\"\<season consecutive weeks on top\>\"", ",", " ", 
          "\"\<rank SR\>\""}], "}"}], "]"}]}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"Primerjava", "[", 
      RowBox[{"#Prvi", ",", " ", "#Drugi", ",", " ", "#Kategorija"}], "]"}], 
     " ", "&"}], ",", 
    RowBox[{"AppearanceRules", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Title\>\"", " ", "->", " ", "\"\<Primerjaj igralca\>\""}],
        ",", " ", 
       RowBox[{
       "\"\<Description\>\"", " ", "\[Rule]", " ", 
        "\"\<Izberite id dveh igralcev in pokazal se vam bo graf primerjave \
igralcev skozi \[CHacek]as. Izberite kategorijo, ki jo \[ZHacek]elite \
primerjati.\n Opomba: Na voljo so samo igralci iz analize, podatki pa \
zajemajo vse igralce, torej tudi tiste, ki v analizi niso \
v\[SHacek]teti.\>\""}], ",", " ", 
       RowBox[{
       "\"\<SubmitLabel\>\"", " ", "\[Rule]", " ", "\"\<Primerjaj\>\""}]}], 
      "|>"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.927025079759939*^9, 3.927025100558164*^9}, {
   3.927025153457649*^9, 3.927025153878746*^9}, {3.927025457424301*^9, 
   3.927025464286852*^9}, {3.927025656530653*^9, 3.927025695134687*^9}, {
   3.92702572742005*^9, 3.927025767254303*^9}, {3.9270258346376457`*^9, 
   3.9270260575563116`*^9}, {3.927026103520603*^9, 3.927026137779398*^9}, {
   3.9270261809567604`*^9, 3.927026261548899*^9}, {3.927026465616013*^9, 
   3.927026592598898*^9}, {3.9270266424731693`*^9, 3.9270267029888372`*^9}, {
   3.927026829904783*^9, 3.9270268318432198`*^9}, {3.9270269307345657`*^9, 
   3.9270269337026825`*^9}, {3.927027070259125*^9, 3.927027071463396*^9}, 
   3.9270281499617844`*^9, {3.9270294235226364`*^9, 3.9270294492551517`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"6e6963cf-437f-5641-98c0-41257f6b7431"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = <|
   "Prvi" -> <|
     "Interpreter" -> {
       "0", "1", "3", "4", "7", "8", "10", "11", "12", "13", "14", "16", "28",
         "29", "33"}, "Input" -> "~33d468cf42e36fde"|>, 
    "Drugi" -> <|
     "Interpreter" -> {
       "0", "1", "3", "4", "7", "8", "10", "11", "12", "13", "14", "16", "28",
         "29", "33"}, "Input" -> "~33d468cf42e36fde"|>, 
    "Kategorija" -> <|
     "Interpreter" -> {
       "assist average", "assists", "attendance", "auto goals", 
        "autogoal average", "debt", "goal average", "goals", "losing streak", 
        "losses", "matches played", "MMR", "rank assists", 
        "rank assists average", "rank attendance", "rank goal average", 
        "rank goals", "rank losses", "rank matches played", "rank MMR", 
        "rank SR", "rank ties", "rank winrate", "rank wins", "season assists",
         "season attendance", "season consecutive weeks on top", 
        "season goals", "season matches played", "season MVP assist", 
        "season MVP goal", "season MVP rank assist", "season rank MVP", 
        "season weeks on top", "season winrate", "season wins", "SR", "ties", 
        "weeks on top", "winrate", "wins", "winstreak"}, "Input" -> 
      "~17381f62e29c68f4"|>|>, Forms`FormPage`PackagePrivate`vals$$ = <||>, 
   Forms`FormPage`PackagePrivate`valid$$ = False, 
   Forms`FormPage`PackagePrivate`form2$$ = 
   FormObject[<|
    "Prvi" -> <|
      "Interpreter" -> {
        "0", "1", "3", "4", "7", "8", "10", "11", "12", "13", "14", "16", 
         "28", "29", "33"}|>, 
     "Drugi" -> <|
      "Interpreter" -> {
        "0", "1", "3", "4", "7", "8", "10", "11", "12", "13", "14", "16", 
         "28", "29", "33"}|>, 
     "Kategorija" -> <|
      "Interpreter" -> {
        "assist average", "assists", "attendance", "auto goals", 
         "autogoal average", "debt", "goal average", "goals", "losing streak",
          "losses", "matches played", "MMR", "rank assists", 
         "rank assists average", "rank attendance", "rank goal average", 
         "rank goals", "rank losses", "rank matches played", "rank MMR", 
         "rank SR", "rank ties", "rank winrate", "rank wins", 
         "season assists", "season attendance", 
         "season consecutive weeks on top", "season goals", 
         "season matches played", "season MVP assist", "season MVP goal", 
         "season MVP rank assist", "season rank MVP", "season weeks on top", 
         "season winrate", "season wins", "SR", "ties", "weeks on top", 
         "winrate", "wins", "winstreak"}|>|>, <||>, 
    AppearanceRules -> <|
     "Title" -> "Primerjaj igralca", "Description" -> 
      "Izberite id dveh igralcev in pokazal se vam bo graf primerjave \
igralcev skozi \[CHacek]as. Izberite kategorijo, ki jo \[ZHacek]elite \
primerjati.\n Opomba: Na voljo so samo igralci iz analize, podatki pa \
zajemajo vse igralce, torej tudi tiste, ki v analizi niso v\[SHacek]teti.", 
      "SubmitLabel" -> "Primerjaj"|>], 
   Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{
      Forms`FormPage`PackagePrivate`formpane$ = Forms`PackageScope`formPanel[
         Forms`FormPage`PackagePrivate`form2$$[
         AppearanceRules, "FormPanelStyle"]][
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , None, {
             AppearanceRules -> <|
               "Title" -> "Primerjaj igralca", "Description" -> 
                "Izberite id dveh igralcev in pokazal se vam bo graf \
primerjave igralcev skozi \[CHacek]as. Izberite kategorijo, ki jo \
\[ZHacek]elite primerjati.\n Opomba: Na voljo so samo igralci iz analize, \
podatki pa zajemajo vse igralce, torej tudi tiste, ki v analizi niso v\
\[SHacek]teti.", "SubmitLabel" -> "Primerjaj"|>}]]]], 
       Forms`FormPage`PackagePrivate`resultpane$ = Column[{
          Forms`PackageScope`formPanel[
           Forms`FormPage`PackagePrivate`form2$$[
           AppearanceRules, "FormPanelStyle"]][
           If[
           Forms`FormPage`PackagePrivate`valid$$ = 
            And[Forms`FormPage`PackagePrivate`vals$$ =!= <||>, 
              FreeQ[
               Values[Forms`FormPage`PackagePrivate`vals$$], 
               Alternatives[
                Blank[Failure], Forms`PackageScope`fieldHidden]], 
              TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
            Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
              ($CellContext`Primerjava[
               Slot["Prvi"], 
               Slot["Drugi"], 
               Slot["Kategorija"]]& )[Forms`FormPage`PackagePrivate`vals$$], 
              "Output", 
              ToString[StandardForm]], 
            Style["Invalid form", "Message"]]]}]}, 
      Forms`PackageScope`formPanel[
       Forms`FormPage`PackagePrivate`form2$$[
       AppearanceRules, "FormPanelStyle"]][
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Forms`PackageScope`formPanel[
           Forms`FormPage`PackagePrivate`form2$$[
           AppearanceRules, "FormPanelStyle"]][
           Item[
            Row[{
              Spacer[0], 
              Forms`PackageScope`formDefaultButton[
               Forms`FormPage`PackagePrivate`form2$$[AppearanceRules, 
                Forms`FormPage`PackagePrivate`form2$$[
                AppearanceRules, "CurrentSubmitLabel"]], 
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , None, {
                AppearanceRules -> <|
                  "Title" -> "Primerjaj igralca", "Description" -> 
                   "Izberite id dveh igralcev in pokazal se vam bo graf \
primerjave igralcev skozi \[CHacek]as. Izberite kategorijo, ki jo \
\[ZHacek]elite primerjati.\n Opomba: Na voljo so samo igralci iz analize, \
podatki pa zajemajo vse igralce, torej tudi tiste, ki v analizi niso v\
\[SHacek]teti.", "SubmitLabel" -> "Primerjaj"|>}], 
               Forms`FormPage`PackagePrivate`form2$$[
               AppearanceRules, "FormDefaultButtonStyle"]]}], Alignment -> 
            Right]]}, 
         Forms`PackageScope`formPanel[
          Forms`FormPage`PackagePrivate`form2$$[
          AppearanceRules, "FormPanelStyle"]][
          BlankNullSequence[]], Forms`PackageScope`formPanel[
          Forms`FormPage`PackagePrivate`form2$$[
          AppearanceRules, "FormPanelStyle"]][
          Column[
           Part[{
             SlotSequence[1]}, All, 1]]]& ]]]], StandardForm],
    ImageSizeCache->{826., {185.13403309800196`, 190.86596690199804`}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[<|
    "Prvi" -> <|
      "Interpreter" -> {
        "0", "1", "3", "4", "7", "8", "10", "11", "12", "13", "14", "16", 
         "28", "29", "33"}|>, 
     "Drugi" -> <|
      "Interpreter" -> {
        "0", "1", "3", "4", "7", "8", "10", "11", "12", "13", "14", "16", 
         "28", "29", "33"}|>, 
     "Kategorija" -> <|
      "Interpreter" -> {
        "assist average", "assists", "attendance", "auto goals", 
         "autogoal average", "debt", "goal average", "goals", "losing streak",
          "losses", "matches played", "MMR", "rank assists", 
         "rank assists average", "rank attendance", "rank goal average", 
         "rank goals", "rank losses", "rank matches played", "rank MMR", 
         "rank SR", "rank ties", "rank winrate", "rank wins", 
         "season assists", "season attendance", 
         "season consecutive weeks on top", "season goals", 
         "season matches played", "season MVP assist", "season MVP goal", 
         "season MVP rank assist", "season rank MVP", "season weeks on top", 
         "season winrate", "season wins", "SR", "ties", "weeks on top", 
         "winrate", "wins", "winstreak"}|>|>, <||>, 
    AppearanceRules -> <|
     "Title" -> "Primerjaj igralca", "Description" -> 
      "Izberite id dveh igralcev in pokazal se vam bo graf primerjave \
igralcev skozi \[CHacek]as. Izberite kategorijo, ki jo \[ZHacek]elite \
primerjati.\n Opomba: Na voljo so samo igralci iz analize, podatki pa \
zajemajo vse igralce, torej tudi tiste, ki v analizi niso v\[SHacek]teti.", 
      "SubmitLabel" -> "Primerjaj"|>], $CellContext`Primerjava[
    Slot["Prvi"], 
    Slot["Drugi"], 
    Slot["Kategorija"]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.927025104536087*^9, 3.927025158517311*^9}, 
   3.927025222530468*^9, {3.927025255027914*^9, 3.9270252739362087`*^9}, 
   3.9270253235498877`*^9, 3.9270253703552513`*^9, 3.927025467128521*^9, 
   3.927025663353279*^9, 3.927025698655836*^9, 3.927025739273327*^9, 
   3.927025770103845*^9, 3.927026264213505*^9, {3.927026556880682*^9, 
   3.927026566889971*^9}, 3.927026705321394*^9, 3.927026833505596*^9, 
   3.927026938274723*^9, 3.927027076802126*^9, 3.9270281031547832`*^9, 
   3.9270281520674*^9, {3.9270294260471992`*^9, 3.9270294511305656`*^9}, 
   3.9270295017277317`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"7c81d754-197d-bd4d-b494-cb14becae166"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1428, 741.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{
 "Analiza", "stro\[SHacek]kov", "Spodaj"}},
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"30ffddb1-5b37-1340-bab2-03a6ad4f3ab0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 369, 6, 98, "Title",ExpressionUUID->"03e17c88-5d0e-4e4f-8d99-3d8b90300b28"],
Cell[952, 30, 723, 14, 85, "Subtitle",ExpressionUUID->"0f882bd2-71be-4751-9b8d-824cf8a8152f"],
Cell[CellGroupData[{
Cell[1700, 48, 243, 4, 67, "Section",ExpressionUUID->"9fdecc2b-ca90-4f46-87fd-bfc948c3df99"],
Cell[1946, 54, 1755, 30, 156, "Text",ExpressionUUID->"1440094b-57a2-4476-92d6-f3e2aac876ae"],
Cell[3704, 86, 601, 11, 35, "Text",ExpressionUUID->"d41cb6dc-923b-9948-91b1-dcb712c45dd4"],
Cell[4308, 99, 492, 8, 36, "Text",ExpressionUUID->"a9d740fb-d809-46cf-8861-a1403899101f"],
Cell[4803, 109, 4572, 120, 333, "Input",ExpressionUUID->"ba4e54d3-cb8e-437f-94a5-e0e221c4e59c"],
Cell[9378, 231, 2062, 38, 86, "Input",ExpressionUUID->"bd5bba7b-aa94-4245-8e9b-dbda5add760f"],
Cell[11443, 271, 953, 14, 36, "Text",ExpressionUUID->"749f6452-3d2a-4951-bec9-021abb519622"],
Cell[CellGroupData[{
Cell[12421, 289, 1473, 27, 48, "Input",ExpressionUUID->"4f21f2aa-b484-784e-8ba6-d7c844541b7d"],
Cell[13897, 318, 370057, 6332, 643, "Output",ExpressionUUID->"d7c2648f-ea65-5d41-a3d3-959dc496c471"]
}, Open  ]],
Cell[383969, 6653, 480, 9, 58, "Text",ExpressionUUID->"f76597bf-a223-2b45-bd74-bf42b7fe396a"],
Cell[CellGroupData[{
Cell[384474, 6666, 1001, 26, 48, "Input",ExpressionUUID->"aef036b4-a160-df4d-9c44-11449dacf41e"],
Cell[385478, 6694, 201107, 3745, 535, "Output",ExpressionUUID->"afa5b09b-66d2-e345-bbab-a457fd25fe05"]
}, Open  ]],
Cell[586600, 10442, 22428, 614, 714, "Input",ExpressionUUID->"8a938246-2eb3-4a97-8020-03a61f8a12cb"],
Cell[609031, 11058, 15726, 430, 333, "Input",ExpressionUUID->"f4d65961-5acf-434c-b894-cc0af8be7e2b"]
}, Closed]],
Cell[CellGroupData[{
Cell[624794, 11493, 212, 4, 53, "Section",ExpressionUUID->"f5f2e843-577c-46bd-98a8-1bd63503ce2e"],
Cell[625009, 11499, 961, 14, 60, "Text",ExpressionUUID->"6742afe0-1123-4aa6-9b87-99d6049036d7"],
Cell[CellGroupData[{
Cell[625995, 11517, 9469, 206, 542, "Input",ExpressionUUID->"ef85a732-3a9d-6645-bb8b-ea94165d679e"],
Cell[635467, 11725, 95724, 2179, 671, "Output",ExpressionUUID->"2742f9fe-8c45-e945-ae2b-6df942e76e59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[731228, 13909, 234, 4, 54, "Subsection",ExpressionUUID->"a5ed5845-ecb5-b14d-810a-6b2b83dff7b5"],
Cell[731465, 13915, 5094, 75, 656, "Text",ExpressionUUID->"2f6d2b6b-dba1-8a4c-baed-84c03bd1ad05"],
Cell[CellGroupData[{
Cell[736584, 13994, 4791, 106, 257, "Input",ExpressionUUID->"51a39825-672e-ea4d-8468-fc61e7a8cc36"],
Cell[741378, 14102, 80228, 1822, 668, "Output",ExpressionUUID->"9a9538d7-a5e6-9942-888c-6e2d76dfc0c3"]
}, Open  ]],
Cell[821621, 15927, 1839, 30, 265, "Text",ExpressionUUID->"93858a96-a57a-444a-b2c4-b8807a37b432"],
Cell[823463, 15959, 2136, 47, 105, "Input",ExpressionUUID->"da32ee8c-4291-cf42-914a-81515bf4e70f"],
Cell[CellGroupData[{
Cell[825624, 16010, 3828, 72, 181, "Input",ExpressionUUID->"5985681e-9406-b744-aad0-b869634edf45"],
Cell[829455, 16084, 59591, 1396, 430, "Output",ExpressionUUID->"3bc0c933-da34-c646-a9a6-cfc35a897d92"]
}, Open  ]],
Cell[889061, 17483, 795, 16, 150, "Text",ExpressionUUID->"67f7d863-d945-3a43-a078-1f83b255c73b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[889893, 17504, 288, 4, 54, "Subsection",ExpressionUUID->"ea1c8f65-080d-154d-8f2a-992edca957e2"],
Cell[890184, 17510, 929, 15, 127, "Text",ExpressionUUID->"064c30cf-2627-c84a-a6e6-b9475f984914"],
Cell[891116, 17527, 3300, 83, 314, "Input",ExpressionUUID->"5db78c04-04d7-e14e-959f-003df2c97439"],
Cell[CellGroupData[{
Cell[894441, 17614, 7512, 171, 314, "Input",ExpressionUUID->"bbf75447-ac2f-d844-b9e4-59c8639d2691"],
Cell[901956, 17787, 97927, 2245, 668, "Output",ExpressionUUID->"151981e3-4e69-a148-9292-48ecfd5d328b"]
}, Open  ]],
Cell[999898, 20035, 7599, 109, 1001, "Text",ExpressionUUID->"fabc7e61-048e-1f4f-83a6-7c060b2f445c"],
Cell[1007500, 20146, 197, 4, 35, "Text",ExpressionUUID->"87ec6464-1227-7747-8c9f-3ffd7a44298f"],
Cell[CellGroupData[{
Cell[1007722, 20154, 8323, 197, 352, "Input",ExpressionUUID->"062cdd0a-d793-7348-a723-ff6f91dfc7d5"],
Cell[1016048, 20353, 22208, 486, 555, "Output",ExpressionUUID->"cc7b4f22-7d74-f04e-a0ec-42d6394662ce"]
}, Open  ]],
Cell[1038271, 20842, 2291, 36, 334, "Text",ExpressionUUID->"6287494f-b6f7-734e-8b93-9cf5ded0a468"],
Cell[CellGroupData[{
Cell[1040587, 20882, 7515, 186, 352, "Input",ExpressionUUID->"5285b1c5-20a6-db4f-8b91-a04eee4c7cf2"],
Cell[1048105, 21070, 20993, 466, 555, "Output",ExpressionUUID->"9f76da49-e4bd-ac4c-a879-67179dc94a85"]
}, Open  ]],
Cell[1069113, 21539, 814, 15, 104, "Text",ExpressionUUID->"ba9b757e-6942-6d4f-b28a-dbc00899ef24"],
Cell[1069930, 21556, 1768, 50, 86, "Input",ExpressionUUID->"b03e2496-471c-7e41-ad5b-012563499a8b"],
Cell[CellGroupData[{
Cell[1071723, 21610, 6156, 147, 276, "Input",ExpressionUUID->"17c59d94-f098-a54b-8742-b6ad12493625"],
Cell[1077882, 21759, 24536, 563, 602, "Output",ExpressionUUID->"9ae1ca57-0cce-bf4d-a165-eef43ff05f68"]
}, Open  ]],
Cell[1102433, 22325, 1287, 22, 173, "Text",ExpressionUUID->"d7057f1d-b102-974a-98f5-d49bd443c740"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1103769, 22353, 275, 4, 53, "Section",ExpressionUUID->"34c69bea-e064-46a7-a386-1223d278541c"],
Cell[1104047, 22359, 281, 7, 58, "Text",ExpressionUUID->"9f99e8a7-972f-6a4d-8915-463fcc45fc0e"],
Cell[1104331, 22368, 6465, 152, 243, "Input",ExpressionUUID->"e39b36de-3067-0b40-a91f-d8f491509e11"],
Cell[1110799, 22522, 1304, 32, 67, "Input",ExpressionUUID->"5dd28abf-af00-0c4a-8936-a246cd9f2b96"],
Cell[CellGroupData[{
Cell[1112128, 22558, 4635, 83, 200, "Input",ExpressionUUID->"6e6963cf-437f-5641-98c0-41257f6b7431"],
Cell[1116766, 22643, 10152, 197, 395, "Output",ExpressionUUID->"7c81d754-197d-bd4d-b494-cb14becae166"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

